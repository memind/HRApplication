// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230520013049_expenseDecimalFix")]
    partial class expenseDecimalFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16b7d74f-dc06-4730-baf2-1be2386dc8e0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 2, 14, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2752),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            ConcurrencyStamp = "014596f0-7f16-4e12-8b88-ceb220876fd4",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2749),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "82447027284",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEXJa1PS/5vIu73OyQIZNEYdxI17ssA0aLCxtuMKuT6TtwzuKg1YGb767SJycK1glA==",
                            PhoneNumber = "+905126607703",
                            PhoneNumberConfirmed = false,
                            Profession = "Cleaner",
                            SecurityStamp = "0U0E9F5J47HM1W7DGWBLIFOBHFJL348G",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("f9375199-2853-43ca-82e1-e1ed34c4cd1b"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("1da71eb7-29e4-42f7-9d84-4a79fc2dbe34"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 4, 22, 4, 30, 49, 18, DateTimeKind.Local).AddTicks(6411),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            ConcurrencyStamp = "9cd15cd0-cfe6-4727-a743-1b513172a9ca",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 18, DateTimeKind.Local).AddTicks(6409),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "77111036242",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAdHOQzFsQZiePyn3Goyfe6Q3YnGGrmDTQDOSJQVPG/s2EvOUvco1AE1peuQoa6u5Q==",
                            PhoneNumber = "+905103183993",
                            PhoneNumberConfirmed = false,
                            Profession = "Photographer",
                            SecurityStamp = "VUW78E7IN3ZF15AK662W0WZC15JN2X9R",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("21ce1f2d-b1c3-451a-80e0-324849aa2335"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("c25a7e1a-7d9f-43a5-8cbd-04783341e708"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 12, 4, 4, 30, 49, 20, DateTimeKind.Local).AddTicks(520),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            ConcurrencyStamp = "92eea74a-9ec1-4375-8aad-02558078e75b",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 20, DateTimeKind.Local).AddTicks(518),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "15028627696",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIGVfF1Tm9YDC8aYjXoqYu4YiPGvh9kOwjg+2owOe8a2P0rYisr0qsJEXtycAhVZSw==",
                            PhoneNumber = "+905586142811",
                            PhoneNumberConfirmed = false,
                            Profession = "Plumber",
                            SecurityStamp = "H60X8DW1I1MMD6F6YQWD69KS0E4AIUYC",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("dba2e3ef-a1fc-4109-841b-1080720edea9"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("aa58732a-8438-4327-b904-700082671027"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 7, 18, 4, 30, 49, 21, DateTimeKind.Local).AddTicks(3970),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            ConcurrencyStamp = "84bfaf7d-b9ca-477b-b8ff-015d809b31dc",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 21, DateTimeKind.Local).AddTicks(3968),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "60605537394",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIn0nlnWLS63FU3laVeXefrdmmPlK5Px+TY/PMIkiUAVWJ/4/s/oN/hD4hAWYArdug==",
                            PhoneNumber = "+905262839556",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "UQRT9NNZ09ZMVSREGB0DGC785KX9UVTH",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("f9375199-2853-43ca-82e1-e1ed34c4cd1b"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("36a59766-c2d8-48a9-8e6a-64f3d60ea6c6"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2064, 1, 20, 4, 30, 49, 22, DateTimeKind.Local).AddTicks(7397),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            ConcurrencyStamp = "f821ae66-1a40-47a7-b0bc-c298e2a2061f",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 22, DateTimeKind.Local).AddTicks(7395),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "40775148118",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKaN9b3NxgWmKbuWMpgOWVecZvnaEd6ZCiP2vLG9Sz8YY5Lqj0zHgAJoDMirqUduUg==",
                            PhoneNumber = "+905439801730",
                            PhoneNumberConfirmed = false,
                            Profession = "Florist",
                            SecurityStamp = "6DJBMOJCR9EKX582S1932ELIFR5JJWOE",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("8ff81520-dccb-4227-8b4a-6fb3a76b2e63"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("22a06b3d-437b-4a28-ba8b-f17efd29c66f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 7, 1, 4, 30, 49, 24, DateTimeKind.Local).AddTicks(996),
                            CompanyId = new Guid("2d3657ce-2ed9-41e1-b098-30c9010f7d7a"),
                            ConcurrencyStamp = "be2fc927-8dd0-4d6b-a52b-3cbe68b5e08c",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 24, DateTimeKind.Local).AddTicks(994),
                            Email = "ali.aydin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "24036871304",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.AYDIN@HOTMAIL.COM",
                            NormalizedUserName = "ALI.AYDIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHpO3QkD7q5WpZkkTpE0v11L4eXKV6gGQ+qgL8rrrf7oWxBBMUo2aXG8UzOM+HPeGA==",
                            PhoneNumber = "+905462538403",
                            PhoneNumberConfirmed = false,
                            Profession = "Optician",
                            SecurityStamp = "JQ4BBEK3ZMCUARJSQ945ADL5KGZWQ84B",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("0f3dc84c-fe95-41a5-a929-1f7b396fb8a5"),
                            TwoFactorEnabled = false,
                            UserName = "ali.aydin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("512021fb-bcb0-41e4-81b0-5fcc6663ec02"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 3, 22, 4, 30, 49, 25, DateTimeKind.Local).AddTicks(4616),
                            CompanyId = new Guid("2ed96e47-94e5-486f-ae14-f7e2211d5b2d"),
                            ConcurrencyStamp = "51ae6e96-8d73-42ae-9d10-28c96d96a986",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 25, DateTimeKind.Local).AddTicks(4615),
                            Email = "mehmet.celik@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "23703185256",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.CELIK@YAHOO.COM",
                            NormalizedUserName = "MEHMET.CELIK@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFflQjZxIr9DMCtvC6rriJn3R3OCLTh/lQXlSO9BR3FIx8P765DZpdCJXsjZiWw0sg==",
                            PhoneNumber = "+905728022398",
                            PhoneNumberConfirmed = false,
                            Profession = "Fireman/Fire fighter",
                            SecurityStamp = "7FPKI96K8QJ5VXMALR9EWOUHD4S04YAC",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("3cbfc8c0-ffad-47f9-a8ad-93e1ba02c9fb"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.celik@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("541bb153-2d0e-4594-b103-19c7c6b815b8"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 6, 8, 4, 30, 49, 26, DateTimeKind.Local).AddTicks(8344),
                            CompanyId = new Guid("6a3db742-88af-4d3b-b5e0-a5465fdce134"),
                            ConcurrencyStamp = "5ff1bc5b-2dd2-4419-87b1-c20db2a8ac35",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 26, DateTimeKind.Local).AddTicks(8344),
                            Email = "ismail.demir@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "26310358334",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.DEMIR@HOTMAIL.COM",
                            NormalizedUserName = "ISMAIL.DEMIR@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAVGSsCJ393WHm98YsH0yliYIS1isFwZvrZu6OorLiuO/4I8KFKqwmAknQQQfCi1Lg==",
                            PhoneNumber = "+905742433804",
                            PhoneNumberConfirmed = false,
                            Profession = "Doctor",
                            SecurityStamp = "RWMUHT1UN1IHRW0FTXNP2RD0TWVGMWY8",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("c695565a-1c52-4569-9145-9a0163c2c464"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.demir@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("48595a98-8150-4cb9-a70a-587c40044387"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 10, 12, 4, 30, 49, 28, DateTimeKind.Local).AddTicks(1780),
                            CompanyId = new Guid("a7630351-f3ca-443a-a5dc-33ec653b0e44"),
                            ConcurrencyStamp = "58b244a1-4b10-4a6e-b991-4488927921a9",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 28, DateTimeKind.Local).AddTicks(1780),
                            Email = "yusuf.ozturk@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "37475036296",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.OZTURK@HOTMAIL.COM",
                            NormalizedUserName = "YUSUF.OZTURK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEQId2hfrSBZ//aRKYBb91lRJ5XavqqQko2OEou+BbEmcEFJEZR9uYHk6JJhqf/LyQ==",
                            PhoneNumber = "+905907951170",
                            PhoneNumberConfirmed = false,
                            Profession = "Fireman/Fire fighter",
                            SecurityStamp = "NQWH8V1WYTL7PRG5USK5IOROPM49PR3G",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("b1c32da2-80fd-44b5-aff9-adf5b2ce5912"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.ozturk@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("4c944dd1-3ad7-457c-a22c-245821aa5df4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 11, 5, 4, 30, 49, 29, DateTimeKind.Local).AddTicks(5376),
                            CompanyId = new Guid("b1c800bb-4a11-4d1e-9251-53173a55eee4"),
                            ConcurrencyStamp = "b3f0f9e7-9b2c-4299-953e-fdf1dc44c52d",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 29, DateTimeKind.Local).AddTicks(5374),
                            Email = "huseyin.ozdemir@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "61440701070",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.OZDEMIR@GOOGLE.COM",
                            NormalizedUserName = "HUSEYIN.OZDEMIR@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJEJCZMb2L5OxOgCRG5+IxoPkHBHnLIAczERz6rTi1vVhJ6XczFwUrI38Trazm+YOw==",
                            PhoneNumber = "+905864851056",
                            PhoneNumberConfirmed = false,
                            Profession = "Designer",
                            SecurityStamp = "70TXCN0TTMLYVGD1IGO6IG7K4E5PMETQ",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("df5c8e15-d2f0-45ae-999c-c71e8684012b"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.ozdemir@google.com"
                        },
                        new
                        {
                            Id = new Guid("57e609d2-87c5-40b1-ad6d-c07a54e6369e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 2, 6, 4, 30, 49, 30, DateTimeKind.Local).AddTicks(8716),
                            CompanyId = new Guid("9be3a077-c5bc-47fb-8a57-7357f055f48b"),
                            ConcurrencyStamp = "ee32cdc0-b943-4e6c-8e33-cac1043345e6",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 30, DateTimeKind.Local).AddTicks(8715),
                            Email = "mustafa.sahin@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "80100334212",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.SAHIN@YANDEX.COM",
                            NormalizedUserName = "MUSTAFA.SAHIN@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEH07a89eBLWxvgcVX55bnyHKHseGLrkoemmz4lJYCcDcSoNFj/qO/QLPgXe5P8wwrw==",
                            PhoneNumber = "+905219774721",
                            PhoneNumberConfirmed = false,
                            Profession = "Actor/Actress",
                            SecurityStamp = "KJ497PW7E0YM9SZOBWC8W6Z0V99P3KIX",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("d8144fde-a38d-4075-a5b7-0210449f2202"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.sahin@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("09bd5576-f0e9-4c93-b7ca-c7b856301b46"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2057, 1, 6, 4, 30, 49, 32, DateTimeKind.Local).AddTicks(2159),
                            CompanyId = new Guid("e6bd5d14-4c4c-46ce-ac73-0772a582e9b1"),
                            ConcurrencyStamp = "6279897b-c6aa-4ae1-b269-9984a52a4d97",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 32, DateTimeKind.Local).AddTicks(2158),
                            Email = "mehmet.ozturk@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "45374560576",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.OZTURK@HOTMAIL.COM",
                            NormalizedUserName = "MEHMET.OZTURK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE8bo5Y+SUq7rZ/Y5TfNAO1v3kXBemsrB23RW5QBizg5MwCB2WpHHJNl0VpTiujH9w==",
                            PhoneNumber = "+905399837686",
                            PhoneNumberConfirmed = false,
                            Profession = "Real estate agent",
                            SecurityStamp = "A0NSHGCF0NWZE0DN2EZ00P8TUKXXUKTE",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("0e912cdd-9cb0-4dbd-be7e-ff9aebeeedf0"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.ozturk@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("5a08af2f-d578-4d6d-91cc-447bf92b793f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2052, 2, 5, 4, 30, 49, 33, DateTimeKind.Local).AddTicks(5369),
                            CompanyId = new Guid("8b8f4eb4-c63e-4bc7-b9bb-b05faf3f955a"),
                            ConcurrencyStamp = "e6bbd29d-3b13-41bc-8c44-60afd35f136d",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 33, DateTimeKind.Local).AddTicks(5369),
                            Email = "ismail.yildiz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "31764413560",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIZ@YANDEX.COM",
                            NormalizedUserName = "ISMAIL.YILDIZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED0aRA7WFM93lxEms++lQfW1OTiqMZh72xoVvsci6rAlRnC3jZYuUJ5QTKURLPOzkQ==",
                            PhoneNumber = "+905468880930",
                            PhoneNumberConfirmed = false,
                            Profession = "Judge",
                            SecurityStamp = "12760H5V6N1TQJA3DHSJVLKKCMXOQU4S",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("bc523957-a3c0-4db6-bfbc-91ae1698f9de"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildiz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("d8397f36-fa8c-4200-8143-dba2b66d85cd"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 8, 26, 4, 30, 49, 34, DateTimeKind.Local).AddTicks(8538),
                            CompanyId = new Guid("d86797a5-d56f-41c0-9f71-688275910e44"),
                            ConcurrencyStamp = "9fd2cb19-dee9-42f3-8e9d-5899f659cf9d",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 34, DateTimeKind.Local).AddTicks(8537),
                            Email = "ismail.demir@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "78028786398",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.DEMIR@MICROSOFT.COM",
                            NormalizedUserName = "ISMAIL.DEMIR@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJymZMXM5He/uRFJkZamxjJHejbNS3Ryqzty6ZSA2SJ/FY7ztyKGco9aDsTRMT5BQA==",
                            PhoneNumber = "+905126870247",
                            PhoneNumberConfirmed = false,
                            Profession = "Mechanic",
                            SecurityStamp = "2YKDD0EVLMBJW3JYIP49T3EDUI34PCWG",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("16cc8223-7d02-4b2b-9529-7bf83797e817"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.demir@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("2a81c220-ad78-4a36-944f-8ad75c92ba64"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2068, 11, 21, 4, 30, 49, 36, DateTimeKind.Local).AddTicks(3506),
                            CompanyId = new Guid("2ef23ac2-6bc7-4689-8390-13428e834c16"),
                            ConcurrencyStamp = "9e69d215-e05b-4cc4-8214-0017a7079736",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 36, DateTimeKind.Local).AddTicks(3505),
                            Email = "osman.yilmaz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "32757543400",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.YILMAZ@YANDEX.COM",
                            NormalizedUserName = "OSMAN.YILMAZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEO7JmMnuL65Y4OPpYFXodKQnkpQgQL/ss9HNil6Bcdt+Ew2ZyPW1g3YBVMSxd01EUw==",
                            PhoneNumber = "+905434594664",
                            PhoneNumberConfirmed = false,
                            Profession = "Factory worker",
                            SecurityStamp = "B79P4BFG3OFXNHA4X7HJWSTQ0H5Z87GT",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("9920ebed-80b2-45f7-a5d6-422f410e0ad3"),
                            TwoFactorEnabled = false,
                            UserName = "osman.yilmaz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("442ba5ee-1401-4d1d-8a59-242bfacecb5f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 1, 8, 4, 30, 49, 37, DateTimeKind.Local).AddTicks(5716),
                            CompanyId = new Guid("bb776678-d447-480e-85a5-97930ff7aa7c"),
                            ConcurrencyStamp = "e844e6c6-6c49-4026-b965-b6ccfd27bbe4",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 37, DateTimeKind.Local).AddTicks(5715),
                            Email = "ibrahim.ozturk@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "11011742704",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.OZTURK@OUTLOOK.COM",
                            NormalizedUserName = "IBRAHIM.OZTURK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEM9mPgStn0Z3qNT0Apt1I4qSRJi/83UneyRd+9l/y43m+Li4QPvAF9jHZY0PBjBUYw==",
                            PhoneNumber = "+905352186316",
                            PhoneNumberConfirmed = false,
                            Profession = "Electrician",
                            SecurityStamp = "PBMYCHMHFOQM9Q4Z7AO151RMJVXVH734",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("e3935327-d50c-4390-856a-b8bd3a386d26"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.ozturk@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("223bcbfd-a80c-49e7-ba0e-c2dfe0ab3d51"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2068, 2, 13, 4, 30, 49, 38, DateTimeKind.Local).AddTicks(7987),
                            CompanyId = new Guid("7802f35d-b134-4b25-b1ed-a44d37c39486"),
                            ConcurrencyStamp = "26675b13-c222-41fb-8cd6-7f13da68ef6c",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 38, DateTimeKind.Local).AddTicks(7986),
                            Email = "mustafa.sahin@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "20506622216",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.SAHIN@MICROSOFT.COM",
                            NormalizedUserName = "MUSTAFA.SAHIN@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPa0q540wtBEcHUILx+AUZYnfm5rvvm3gBBWtSenWlNR3ZBFVRypZMKZlSYOKqrA3w==",
                            PhoneNumber = "+905549074303",
                            PhoneNumberConfirmed = false,
                            Profession = "Real estate agent",
                            SecurityStamp = "H00Q99BPVAUQL1RWEYFBPOWFQZTUVFLO",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("5640dbf6-bb0a-42e6-94fd-195fac865ba0"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.sahin@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("df0bb13c-13aa-48a8-8656-a54b8f297940"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 3, 2, 4, 30, 49, 40, DateTimeKind.Local).AddTicks(295),
                            CompanyId = new Guid("87827267-86d9-4f3f-a393-14e401bbfaf6"),
                            ConcurrencyStamp = "2b69eb91-1943-4309-94cb-9512a5b8f663",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 40, DateTimeKind.Local).AddTicks(294),
                            Email = "ahmet.yildirim@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "68133658000",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIRIM@MICROSOFT.COM",
                            NormalizedUserName = "AHMET.YILDIRIM@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEI2QM9QFVM3u8bWglt4bZzMruKxwcy3PfEOMYq/00kxNvPA9sxai578hHAGLg3wFGg==",
                            PhoneNumber = "+905885394761",
                            PhoneNumberConfirmed = false,
                            Profession = "Hairdresser",
                            SecurityStamp = "R4TS11W0KU600M6U24METIOOYWML62W6",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("3de63186-b4ea-4a5f-bd6c-ff3e2b891491"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildirim@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("27be8602-4a1b-4d12-856a-721006479465"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2044, 7, 1, 4, 30, 49, 41, DateTimeKind.Local).AddTicks(3549),
                            CompanyId = new Guid("f76f3d42-3170-4702-b678-77e4eb3ef609"),
                            ConcurrencyStamp = "0d177be2-765d-49bc-bb53-c79661c1618e",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 41, DateTimeKind.Local).AddTicks(3547),
                            Email = "ibrahim.ozturk@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "40353358304",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.OZTURK@YANDEX.COM",
                            NormalizedUserName = "IBRAHIM.OZTURK@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDq0jYMm6o0ILDDDdcwoFOqP1xicEPCcUk7UHfHS/o6g9ANgEyT8dROnMUwK2U/esg==",
                            PhoneNumber = "+905796078863",
                            PhoneNumberConfirmed = false,
                            Profession = "Teacher",
                            SecurityStamp = "EHMP2DKC66R0UFBM0Z3GAYTN1OZ95GBT",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("9056a962-81e4-4e77-b6f2-70521bfdc376"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.ozturk@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("cc3110aa-ee46-406c-84be-43f157a2bc58"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2076, 2, 29, 4, 30, 49, 42, DateTimeKind.Local).AddTicks(6053),
                            CompanyId = new Guid("8d66ef91-46b2-4257-b6d3-b3c80cbf8ac3"),
                            ConcurrencyStamp = "a5b9b489-30ba-4493-b2b5-2ceeef616514",
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 42, DateTimeKind.Local).AddTicks(6052),
                            Email = "huseyin.yildiz@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "37346041794",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.YILDIZ@YAHOO.COM",
                            NormalizedUserName = "HUSEYIN.YILDIZ@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEG00e+eqQGJ9Irjudk6Iy/wF7bt4/C4gmtmoAosjpuvbWPNhnaWZBoQjQl39g3WoRQ==",
                            PhoneNumber = "+905522716230",
                            PhoneNumberConfirmed = false,
                            Profession = "Photographer",
                            SecurityStamp = "8OHNP234RQ9W2WEUVHXJZ5Z3MZ2L0EQA",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("49da5610-d532-42cd-b634-5c5ff58bdad2"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.yildiz@yahoo.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvanceToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceToId");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2593),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905602020815",
                            SectorId = new Guid("69e5f746-ad2a-4c0a-866a-28e5644a7194"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2d3657ce-2ed9-41e1-b098-30c9010f7d7a"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 24, DateTimeKind.Local).AddTicks(983),
                            Email = "info@aydinanonimsirketi.com",
                            Name = "Aydın Anonim Şirketi",
                            NumberOfEmployees = 43,
                            PhoneNumber = "+905461858790",
                            SectorId = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("2ed96e47-94e5-486f-ae14-f7e2211d5b2d"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 25, DateTimeKind.Local).AddTicks(4606),
                            Email = "info@celikkomanditsirketi.com",
                            Name = "Çelik Komandit Şirketi",
                            NumberOfEmployees = 69,
                            PhoneNumber = "+905951908611",
                            SectorId = new Guid("fe1fb8fd-8d92-469f-b166-1d173dceaf34"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("6a3db742-88af-4d3b-b5e0-a5465fdce134"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 26, DateTimeKind.Local).AddTicks(8334),
                            Email = "info@demirkollektifsirketi.com",
                            Name = "Demir Kollektif Şirketi",
                            NumberOfEmployees = 4,
                            PhoneNumber = "+905937861797",
                            SectorId = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("a7630351-f3ca-443a-a5dc-33ec653b0e44"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 28, DateTimeKind.Local).AddTicks(1769),
                            Email = "info@ozturkkooperatifsirketi.com",
                            Name = "Öztürk Kooperatif Şirketi",
                            NumberOfEmployees = 68,
                            PhoneNumber = "+905607843426",
                            SectorId = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("b1c800bb-4a11-4d1e-9251-53173a55eee4"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 29, DateTimeKind.Local).AddTicks(5242),
                            Email = "info@ozdemirlimitedsirketi.com",
                            Name = "Özdemir Limited Şirketi",
                            NumberOfEmployees = 20,
                            PhoneNumber = "+905893329867",
                            SectorId = new Guid("71016439-b055-49bc-99d1-b154672381cc"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("9be3a077-c5bc-47fb-8a57-7357f055f48b"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 30, DateTimeKind.Local).AddTicks(8708),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Kollektif Şirketi",
                            NumberOfEmployees = 82,
                            PhoneNumber = "+905490442184",
                            SectorId = new Guid("4d0d52db-e2ef-47de-a4e1-435f56c2a7bd"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e6bd5d14-4c4c-46ce-ac73-0772a582e9b1"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 32, DateTimeKind.Local).AddTicks(2146),
                            Email = "info@ozturkkooperatifsirketi.com",
                            Name = "Öztürk Kooperatif Şirketi",
                            NumberOfEmployees = 23,
                            PhoneNumber = "+905989649075",
                            SectorId = new Guid("2c027048-7114-4681-b9a8-0a6ec472531d"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("8b8f4eb4-c63e-4bc7-b9bb-b05faf3f955a"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 33, DateTimeKind.Local).AddTicks(5360),
                            Email = "info@yildizkooperatifsirketi.com",
                            Name = "Yıldız Kooperatif Şirketi",
                            NumberOfEmployees = 19,
                            PhoneNumber = "+905364710003",
                            SectorId = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("d86797a5-d56f-41c0-9f71-688275910e44"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 34, DateTimeKind.Local).AddTicks(8530),
                            Email = "info@demirkooperatifsirketi.com",
                            Name = "Demir Kooperatif Şirketi",
                            NumberOfEmployees = 25,
                            PhoneNumber = "+905162899038",
                            SectorId = new Guid("a85eb9a7-029d-416f-9371-8d32267d82e0"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("2ef23ac2-6bc7-4689-8390-13428e834c16"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 36, DateTimeKind.Local).AddTicks(3494),
                            Email = "info@yilmazkooperatifsirketi.com",
                            Name = "Yılmaz Kooperatif Şirketi",
                            NumberOfEmployees = 2,
                            PhoneNumber = "+905789597207",
                            SectorId = new Guid("69e5f746-ad2a-4c0a-866a-28e5644a7194"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("bb776678-d447-480e-85a5-97930ff7aa7c"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 37, DateTimeKind.Local).AddTicks(5706),
                            Email = "info@ozturkanonimsirketi.com",
                            Name = "Öztürk Anonim Şirketi",
                            NumberOfEmployees = 94,
                            PhoneNumber = "+905491336111",
                            SectorId = new Guid("4d0d52db-e2ef-47de-a4e1-435f56c2a7bd"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("7802f35d-b134-4b25-b1ed-a44d37c39486"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 38, DateTimeKind.Local).AddTicks(7943),
                            Email = "info@sahinanonimsirketi.com",
                            Name = "Şahin Anonim Şirketi",
                            NumberOfEmployees = 15,
                            PhoneNumber = "+905154839010",
                            SectorId = new Guid("1baf96ff-5737-47c0-ab8d-faf6531f03d8"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("87827267-86d9-4f3f-a393-14e401bbfaf6"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 40, DateTimeKind.Local).AddTicks(288),
                            Email = "info@yildirimkomanditsirketi.com",
                            Name = "Yıldırım Komandit Şirketi",
                            NumberOfEmployees = 16,
                            PhoneNumber = "+905733403844",
                            SectorId = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f76f3d42-3170-4702-b678-77e4eb3ef609"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 41, DateTimeKind.Local).AddTicks(3540),
                            Email = "info@ozturklimitedsirketi.com",
                            Name = "Öztürk Limited Şirketi",
                            NumberOfEmployees = 85,
                            PhoneNumber = "+905792616681",
                            SectorId = new Guid("71016439-b055-49bc-99d1-b154672381cc"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("8d66ef91-46b2-4257-b6d3-b3c80cbf8ac3"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 42, DateTimeKind.Local).AddTicks(6043),
                            Email = "info@yildizlimitedsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 48,
                            PhoneNumber = "+905707833030",
                            SectorId = new Guid("9e29e1af-9269-4032-a08b-7797d77c8124"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ApprovedById");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1baf96ff-5737-47c0-ab8d-faf6531f03d8"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2369),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("69e5f746-ad2a-4c0a-866a-28e5644a7194"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2387),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f26ffe1a-d92a-4679-a2b5-8559fd0614c2"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2389),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9f3f1ad8-e51b-42ac-802b-2108dfbc2978"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2390),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4dd980d6-5e69-4c76-9569-29e40042a70b"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2391),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4cc9dd07-76f1-4c01-abc8-e9bf1391f3fa"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2394),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a85eb9a7-029d-416f-9371-8d32267d82e0"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2395),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1fcdaaf0-6164-49d5-a5ab-948bed6f3645"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2396),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("13f6ca0b-d117-4e7a-be1b-3378034478a6"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2400),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3bb07729-d463-4f68-b952-ef56b756027b"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2402),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("45e42113-794b-4d56-b20d-bb381b8fcb81"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2403),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9e29e1af-9269-4032-a08b-7797d77c8124"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2404),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("71016439-b055-49bc-99d1-b154672381cc"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2405),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2c027048-7114-4681-b9a8-0a6ec472531d"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2407),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4d0d52db-e2ef-47de-a4e1-435f56c2a7bd"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2408),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c6ec3ab8-0b10-4a93-89e2-85a72350cf58"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2409),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("29dd8aa0-9c95-41b5-9bdb-3df61f277fd1"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2412),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("eb0a743e-9f28-44e2-8a69-6d64ae01bb6e"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2414),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e9cdcf93-97ed-4174-941b-ecdc16f5fbd3"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2415),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4c334a8e-e4a8-4ea2-9757-bca588e116f7"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2416),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("36928cd7-9f03-4489-a82c-1913957d7e42"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2417),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c30cd1ae-a24b-4e18-b996-00300321f91d"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2477),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fe1fb8fd-8d92-469f-b166-1d173dceaf34"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2478),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aaab4784-3bf7-483d-8466-721bdc806d7a"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2479),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1fe7e73-dbca-4dc7-ba2a-98f41d38aa06"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2612),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8ff81520-dccb-4227-8b4a-6fb3a76b2e63"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2617),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f0c2e93b-6448-4273-8394-ba1ba012f5de"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2621),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("134406d5-e737-4d3a-a50d-36514ab99f8a"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2622),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9f51fe39-4c4d-4386-b492-32f9b5d669a1"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2623),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4f77d46d-0b4a-4e3f-be6e-9871833a6b56"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2625),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ea45edfb-a68b-4415-8921-ed8c4dff84da"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2627),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f9375199-2853-43ca-82e1-e1ed34c4cd1b"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2628),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f901e5f2-4b46-4f7a-9c88-445dcf5370d9"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2630),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bd08d168-cf8b-4ccd-a586-df68f32244cd"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2632),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("136d0182-a985-41c7-957a-1746f15ef2fb"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2635),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("52c55a8c-f10b-41d5-aa84-9c21758ba7c9"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2636),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8df2a3ac-8c4b-454b-a8e4-0e8db58f6e4a"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2637),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd248f5a-2da9-4bc4-84ff-fab84419f7c5"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2638),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8fd7c7d4-bf7c-441b-be3a-7490807fe938"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2639),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9a808e1b-685a-4c4e-be90-abdee334cf0e"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2640),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cc669e2b-9313-425b-974c-7650e92b16be"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2641),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d85d2e6c-2359-4b22-829d-290659f7d281"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2643),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("434628ac-4014-4a2e-9bc5-e4568464d7a5"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2646),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("397a62d7-745b-455d-8039-7171877c85d7"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2647),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("80153eac-7455-44f5-b432-a8f7cd569b8c"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2648),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0adb7cd4-6546-44f9-b32c-1641638a879e"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2649),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92f2a080-5dcc-48d1-9d6a-56dac4034c51"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2650),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("124ad5ce-1bfd-4204-9370-b61ddbbb1c8c"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2651),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("56886eb7-ed6c-4bb2-816b-18bd7898edff"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2652),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6b96e8e8-93d1-4437-bde6-9082d5f198f6"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2653),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cf20e561-a562-40b3-b09c-42403feb1c31"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2656),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("325204be-41f3-4747-b4c7-f5f31d57801e"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2657),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b480a2d3-83d9-41d4-a57e-516e1cfd2a86"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2658),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("70918b50-42e2-4bc5-a9c0-73edfe2c3c4f"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2658),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e299cb1b-54ec-4977-b76a-8660cf94b97f"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2659),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("35473068-6272-42a5-bcd5-13fa3d55e863"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2660),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("db9c5aea-d680-4a79-b3d8-fef8c80a7ec0"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2661),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a58a9895-bece-4429-ba1b-436d20c8235d"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2663),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b189772f-d982-4fea-96b4-93e0fd156193"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2666),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("16356e0a-8ee2-416f-a9ec-9a5e4d105987"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2667),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c76bb8ec-56f2-4474-9205-0b76c43404d7"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2668),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("66a09fda-dc77-4107-a931-1ed7a89d8330"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2669),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("caef2706-3abf-4837-a80e-7f96b7f98e10"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2670),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9b97bfb4-c5c3-4087-b0a7-6ea182060079"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2671),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("21ce1f2d-b1c3-451a-80e0-324849aa2335"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2716),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6e40ce18-b1df-49b0-9c9e-e133c4594d5d"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2718),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f6059bc4-ff29-4b3c-a954-3bec93472ce2"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2721),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8bc9d257-3ade-435c-bb12-f0518eded6da"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2722),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ffabea06-7909-43e3-ba60-9e708ebcbf36"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2723),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c69321ee-2d88-4aa9-8cbf-db1e3e9f8f2d"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2724),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0552b1c9-8d43-4609-b14e-6e0bb18fde95"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2725),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8ab4bff1-57b5-42f2-8be8-78e278e4235c"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2726),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("029352bb-234d-4916-8bb8-675e718e4161"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2727),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aa86c4af-8973-4d3a-9e3e-7082dbb52653"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2728),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("eba97f69-e778-40d0-87a0-623fd69c7ca3"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2730),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0c2db55d-02c6-4fe2-94d7-e1c087bb688b"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2731),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dba2e3ef-a1fc-4109-841b-1080720edea9"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2732),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("50679332-5eba-4950-b652-2865409d528e"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2733),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b7813dc4-a3e7-40fa-925b-3835c372930b"),
                            CompanyId = new Guid("db7907f9-3379-4c6d-8523-e887860b9914"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 17, DateTimeKind.Local).AddTicks(2734),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0f3dc84c-fe95-41a5-a929-1f7b396fb8a5"),
                            CompanyId = new Guid("2d3657ce-2ed9-41e1-b098-30c9010f7d7a"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 24, DateTimeKind.Local).AddTicks(989),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3cbfc8c0-ffad-47f9-a8ad-93e1ba02c9fb"),
                            CompanyId = new Guid("2ed96e47-94e5-486f-ae14-f7e2211d5b2d"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 25, DateTimeKind.Local).AddTicks(4609),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c695565a-1c52-4569-9145-9a0163c2c464"),
                            CompanyId = new Guid("6a3db742-88af-4d3b-b5e0-a5465fdce134"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 26, DateTimeKind.Local).AddTicks(8336),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b1c32da2-80fd-44b5-aff9-adf5b2ce5912"),
                            CompanyId = new Guid("a7630351-f3ca-443a-a5dc-33ec653b0e44"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 28, DateTimeKind.Local).AddTicks(1775),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("df5c8e15-d2f0-45ae-999c-c71e8684012b"),
                            CompanyId = new Guid("b1c800bb-4a11-4d1e-9251-53173a55eee4"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 29, DateTimeKind.Local).AddTicks(5245),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d8144fde-a38d-4075-a5b7-0210449f2202"),
                            CompanyId = new Guid("9be3a077-c5bc-47fb-8a57-7357f055f48b"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 30, DateTimeKind.Local).AddTicks(8711),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0e912cdd-9cb0-4dbd-be7e-ff9aebeeedf0"),
                            CompanyId = new Guid("e6bd5d14-4c4c-46ce-ac73-0772a582e9b1"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 32, DateTimeKind.Local).AddTicks(2149),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bc523957-a3c0-4db6-bfbc-91ae1698f9de"),
                            CompanyId = new Guid("8b8f4eb4-c63e-4bc7-b9bb-b05faf3f955a"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 33, DateTimeKind.Local).AddTicks(5364),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("16cc8223-7d02-4b2b-9529-7bf83797e817"),
                            CompanyId = new Guid("d86797a5-d56f-41c0-9f71-688275910e44"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 34, DateTimeKind.Local).AddTicks(8533),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9920ebed-80b2-45f7-a5d6-422f410e0ad3"),
                            CompanyId = new Guid("2ef23ac2-6bc7-4689-8390-13428e834c16"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 36, DateTimeKind.Local).AddTicks(3497),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e3935327-d50c-4390-856a-b8bd3a386d26"),
                            CompanyId = new Guid("bb776678-d447-480e-85a5-97930ff7aa7c"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 37, DateTimeKind.Local).AddTicks(5708),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5640dbf6-bb0a-42e6-94fd-195fac865ba0"),
                            CompanyId = new Guid("7802f35d-b134-4b25-b1ed-a44d37c39486"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 38, DateTimeKind.Local).AddTicks(7945),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3de63186-b4ea-4a5f-bd6c-ff3e2b891491"),
                            CompanyId = new Guid("87827267-86d9-4f3f-a393-14e401bbfaf6"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 40, DateTimeKind.Local).AddTicks(290),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9056a962-81e4-4e77-b6f2-70521bfdc376"),
                            CompanyId = new Guid("f76f3d42-3170-4702-b678-77e4eb3ef609"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 41, DateTimeKind.Local).AddTicks(3542),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("49da5610-d532-42cd-b634-5c5ff58bdad2"),
                            CompanyId = new Guid("8d66ef91-46b2-4257-b6d3-b3c80cbf8ac3"),
                            CreateDate = new DateTime(2023, 5, 20, 4, 30, 49, 42, DateTimeKind.Local).AddTicks(6046),
                            Name = "Registered Nurse",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9"),
                            ConcurrencyStamp = "8KZ4IBJK13J6K9V76MKH365YG2DQ4OR0",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415"),
                            ConcurrencyStamp = "4A8RWBCZIIS21GIJPX3418J292HMCZGW",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("044f46ff-686c-48e6-8713-a70e9f73e803"),
                            ConcurrencyStamp = "GHEZ7G00NUIM2LUJMSOVKFYK5U9E2R17",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("16b7d74f-dc06-4730-baf2-1be2386dc8e0"),
                            RoleId = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9")
                        },
                        new
                        {
                            UserId = new Guid("1da71eb7-29e4-42f7-9d84-4a79fc2dbe34"),
                            RoleId = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9")
                        },
                        new
                        {
                            UserId = new Guid("c25a7e1a-7d9f-43a5-8cbd-04783341e708"),
                            RoleId = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9")
                        },
                        new
                        {
                            UserId = new Guid("aa58732a-8438-4327-b904-700082671027"),
                            RoleId = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9")
                        },
                        new
                        {
                            UserId = new Guid("36a59766-c2d8-48a9-8e6a-64f3d60ea6c6"),
                            RoleId = new Guid("f0b88cd0-cee6-44ca-b8ef-76c4a3674ef9")
                        },
                        new
                        {
                            UserId = new Guid("22a06b3d-437b-4a28-ba8b-f17efd29c66f"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("512021fb-bcb0-41e4-81b0-5fcc6663ec02"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("541bb153-2d0e-4594-b103-19c7c6b815b8"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("48595a98-8150-4cb9-a70a-587c40044387"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("4c944dd1-3ad7-457c-a22c-245821aa5df4"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("57e609d2-87c5-40b1-ad6d-c07a54e6369e"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("09bd5576-f0e9-4c93-b7ca-c7b856301b46"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("5a08af2f-d578-4d6d-91cc-447bf92b793f"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("d8397f36-fa8c-4200-8143-dba2b66d85cd"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("2a81c220-ad78-4a36-944f-8ad75c92ba64"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("442ba5ee-1401-4d1d-8a59-242bfacecb5f"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("223bcbfd-a80c-49e7-ba0e-c2dfe0ab3d51"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("df0bb13c-13aa-48a8-8656-a54b8f297940"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("27be8602-4a1b-4d12-856a-721006479465"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        },
                        new
                        {
                            UserId = new Guid("cc3110aa-ee46-406c-84be-43f157a2bc58"),
                            RoleId = new Guid("55a0e75b-56db-40c8-ae41-8b5582e46415")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Address", "Address")
                        .WithOne("AppUser")
                        .HasForeignKey("IKApplication.Domain.Entites.AppUser", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AdvanceTo")
                        .WithMany("CashAdvances")
                        .HasForeignKey("AdvanceToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("ApproveCashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceTo");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveExpenses")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveLeaves")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("ApprovedBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Navigation("AppUser")
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("ApproveCashAdvances");

                    b.Navigation("ApproveExpenses");

                    b.Navigation("ApproveLeaves");

                    b.Navigation("CashAdvances");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
