// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230516213500_SyncCodes")]
    partial class SyncCodes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("46f332ff-fdf1-4f7c-bbd5-c725aa7ef15a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 5, 3, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(628),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            ConcurrencyStamp = "48d15b71-b957-4b49-aa81-d361e84faef2",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(625),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "61843221434",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECCzg+Tf/bUB1YMHx+KL2ZaRY5bdEqqYmgglLlv7GBPubM/b2BjeWu+gzVtjFTKlmQ==",
                            PhoneNumber = "+905473288139",
                            PhoneNumberConfirmed = false,
                            Profession = "Busdriver",
                            SecurityStamp = "QFL3NEOUUBZ8OPLEBYW8VL100ZU5YQLH",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("064d1451-e5bb-48da-be5c-ff0f9b68a163"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("bd1938f0-69ea-4d27-a717-3b7e6116da62"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 5, 13, 0, 34, 59, 900, DateTimeKind.Local).AddTicks(4065),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            ConcurrencyStamp = "fd12fbf6-f525-4594-be01-d0ed6dbdb6a7",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 900, DateTimeKind.Local).AddTicks(4063),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "17440004314",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPza30mm7FSqxwO+q+0w7jedgXiGa8LnQ7nMMAawYPAKYvByD36VinNCi1szDtHj7w==",
                            PhoneNumber = "+905167166531",
                            PhoneNumberConfirmed = false,
                            Profession = "Painter",
                            SecurityStamp = "KCLHNOS98YK8CDWNVV0IGV5Y80KTLP2G",
                            Status = 1,
                            Surname = "Yıldırım",
                            TitleId = new Guid("cc345999-b94e-4068-b3ba-960a47950475"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("0fa18ebe-8a8b-4674-bb81-fbf7e0f793da"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 6, 15, 0, 34, 59, 901, DateTimeKind.Local).AddTicks(6808),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            ConcurrencyStamp = "5bb21576-134c-44b1-ab96-3ccf4adbf5fd",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 901, DateTimeKind.Local).AddTicks(6803),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "15330306012",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENFE1/n5P/TKPuwvOPzWnQ0fbQM/rmbPTL4ydiZ98kYdy0VvAsKJCj5xgHjTGyvsIg==",
                            PhoneNumber = "+905771017033",
                            PhoneNumberConfirmed = false,
                            Profession = "Politician",
                            SecurityStamp = "F3ITY8FY8VBF3T4GDWXEAULMFHZD3NRF",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("4cf4c6bb-1f2c-40f2-b906-4ef490cea7cb"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("5e17b4af-3192-40fe-bc54-9c3888ce08ae"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 10, 27, 0, 34, 59, 903, DateTimeKind.Local).AddTicks(1085),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            ConcurrencyStamp = "1d0aeff4-d011-4345-b752-c210657d08d6",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 903, DateTimeKind.Local).AddTicks(1075),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "33806463496",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED3qMnUZbQVyz7nGJ7e0HLhYu19T7Jp7U6ET4+l8XFbyY1HdxeA6dAYSGZ0Bh7dU9A==",
                            PhoneNumber = "+905602685286",
                            PhoneNumberConfirmed = false,
                            Profession = "Postman",
                            SecurityStamp = "JT981WFGWPXLD44KDCM9WLOQT6GHKIDC",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("7f10cecd-19f8-472c-be90-471964bcc6ac"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("4a765081-8035-4753-be13-1375263a0923"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 5, 11, 0, 34, 59, 904, DateTimeKind.Local).AddTicks(5186),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            ConcurrencyStamp = "fa7bbdba-48f5-42fa-be94-5b995ad24d02",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 904, DateTimeKind.Local).AddTicks(5183),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "34276415596",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEUDsl3GobI91f/0VfgthXSIOFUh+7GYU8IpQWS9/GETmTMkL00GCJhb4elArpgvpQ==",
                            PhoneNumber = "+905866094837",
                            PhoneNumberConfirmed = false,
                            Profession = "Chef/Cook",
                            SecurityStamp = "73LCJ1SX9EBCQ47NJ30Z0A8VDNQ8KWCO",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("bce397a2-020b-49cf-aa14-be41d483fc6b"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("1520cfff-92f8-4576-95c9-0ae3c05a07d2"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 7, 1, 0, 34, 59, 905, DateTimeKind.Local).AddTicks(8224),
                            CompanyId = new Guid("7a2b9ecd-1044-446b-b293-9f3767c6ad6a"),
                            ConcurrencyStamp = "624df512-63da-44f2-a6d4-95e033d6e9d1",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 905, DateTimeKind.Local).AddTicks(8222),
                            Email = "ali.yildirim@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "72782686680",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.YILDIRIM@GOOGLE.COM",
                            NormalizedUserName = "ALI.YILDIRIM@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHz4nqHsy0odqFlhnrm8Ue5B+TtoUIE3Q5YvNiLO5wUsrOfi5JlY46tcxVTjIj4cgg==",
                            PhoneNumber = "+905991113398",
                            PhoneNumberConfirmed = false,
                            Profession = "Bricklayer",
                            SecurityStamp = "YA7Y9UOJUIL32ZH73XAJRPMW551CWUOS",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("b9a511fe-3dd9-402d-aba3-a1f9ebf46b73"),
                            TwoFactorEnabled = false,
                            UserName = "ali.yildirim@google.com"
                        },
                        new
                        {
                            Id = new Guid("5ee3dcdf-bb08-4f5c-8c74-1c92997366b0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 12, 16, 0, 34, 59, 907, DateTimeKind.Local).AddTicks(1919),
                            CompanyId = new Guid("f3d8e4e1-6ca9-4b67-8245-8d57cbf14ff0"),
                            ConcurrencyStamp = "330e8741-0802-48c6-8c4a-4272d72905e2",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 907, DateTimeKind.Local).AddTicks(1918),
                            Email = "ahmet.sahin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "67367787562",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.SAHIN@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.SAHIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMsSqnppuWH28kY6T/OpUUmPxt+01MwSbpqwKUjfvru5sidQEQ3pPDUMONia3MpHbg==",
                            PhoneNumber = "+905386076353",
                            PhoneNumberConfirmed = false,
                            Profession = "Travel agent",
                            SecurityStamp = "83FBQ5Z5KM1I9L89CMZ0BYL4MSUF6TQQ",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("96e918cf-15a7-4382-8fdd-d7364836e9a5"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.sahin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("45adbfa8-da94-4af8-bf96-ab5624f74fc5"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 3, 7, 0, 34, 59, 908, DateTimeKind.Local).AddTicks(5030),
                            CompanyId = new Guid("78922a67-596c-4b9a-b6d6-8d3eca5e87a2"),
                            ConcurrencyStamp = "9577c43e-09f3-4200-b87b-3790bf93b14f",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 908, DateTimeKind.Local).AddTicks(5029),
                            Email = "ibrahim.sahin@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "28640074236",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.SAHIN@YAHOO.COM",
                            NormalizedUserName = "IBRAHIM.SAHIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMtCJ7llsfuprlKGArcDZ/udD+Phlg78ZeJfpwZoV0M9gA+Q3+ptxnOPEuIOiOl/Rg==",
                            PhoneNumber = "+905157262808",
                            PhoneNumberConfirmed = false,
                            Profession = "Scientist",
                            SecurityStamp = "J3AXJCM7O91T5M6K2RUD7M9YKANLMC76",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("abad928d-739c-49a9-94d7-84845615da49"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.sahin@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("5805b2a8-dd08-4576-b800-0e8b140f4f64"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 12, 2, 0, 34, 59, 909, DateTimeKind.Local).AddTicks(8673),
                            CompanyId = new Guid("cc30e96f-822b-46be-bd15-bef0ff51a441"),
                            ConcurrencyStamp = "ed1bebcd-3794-49d8-9523-6bea14afe1cf",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 909, DateTimeKind.Local).AddTicks(8671),
                            Email = "huseyin.aydin@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "33107128780",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.AYDIN@MICROSOFT.COM",
                            NormalizedUserName = "HUSEYIN.AYDIN@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHiOTsRVXZvXM3huv+BU+YBdZuAAgZrRYf3BRDgR9zRWIkvqxgbPxleRsRevqmE+Dg==",
                            PhoneNumber = "+905465471456",
                            PhoneNumberConfirmed = false,
                            Profession = "Lawyer",
                            SecurityStamp = "9CLTJER93NZHQHRXC8D44EPCC55Q980G",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("64b64ea5-fbf2-4ea0-9edd-b2f74271119e"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.aydin@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("bb94dce7-2911-4bad-aa49-7aec6214a6be"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 11, 10, 0, 34, 59, 911, DateTimeKind.Local).AddTicks(1729),
                            CompanyId = new Guid("e11d302b-cda5-45ce-9c7b-b29a5aad2557"),
                            ConcurrencyStamp = "953198ec-637a-4621-bb73-348a76393b6f",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 911, DateTimeKind.Local).AddTicks(1727),
                            Email = "mustafa.yilmaz@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "65667742632",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILMAZ@MICROSOFT.COM",
                            NormalizedUserName = "MUSTAFA.YILMAZ@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMk05JGOcLKLbqdZXzq9STJwgaAtkVK+lUnT9y1ICyDC/ptEHpB3/Tt9Tr/KcUnGcA==",
                            PhoneNumber = "+905133096206",
                            PhoneNumberConfirmed = false,
                            Profession = "Hairdresser",
                            SecurityStamp = "ANMP1HU0MUKWV5TCFFR90DMUEFPP52RO",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("20c3ca58-029c-4e74-a20f-16f99783458a"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yilmaz@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("e912b1fd-f73f-4fcb-8b03-8b1a2075560a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 5, 5, 0, 34, 59, 912, DateTimeKind.Local).AddTicks(4896),
                            CompanyId = new Guid("6c16c6d9-f095-428f-9ef5-05834c7c8abf"),
                            ConcurrencyStamp = "441c1f84-b37d-4326-8706-a6cf484c07a0",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 912, DateTimeKind.Local).AddTicks(4895),
                            Email = "yusuf.demir@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "83488377086",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.DEMIR@YANDEX.COM",
                            NormalizedUserName = "YUSUF.DEMIR@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEb7CZpi030itC0ncO0DIAXJyNAa8StkmujeC4elHpNnsQyoLNlYqIqHxH0DlmNGuw==",
                            PhoneNumber = "+905881700797",
                            PhoneNumberConfirmed = false,
                            Profession = "Veterinary doctor(Vet)",
                            SecurityStamp = "TT27KBBVKGE3OVSS8ORFIBSJIPKMDW3L",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("52ab7740-0f7c-4076-b4c5-d094e8c4b195"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.demir@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("0adadabf-987a-4c45-9efb-f0f9db8edcf9"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2074, 11, 18, 0, 34, 59, 913, DateTimeKind.Local).AddTicks(8341),
                            CompanyId = new Guid("f0155b24-45ac-4a56-b1b3-82187f1e390c"),
                            ConcurrencyStamp = "326192ce-eb87-4a54-aa88-febf891a4913",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 913, DateTimeKind.Local).AddTicks(8340),
                            Email = "huseyin.kaya@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "30822135734",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.KAYA@YANDEX.COM",
                            NormalizedUserName = "HUSEYIN.KAYA@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE7d1k11obxpxtrefOrPkeJsnJCeGlqS9EFHybQkTob4hz12JuUBaVjhPidcxBR7xg==",
                            PhoneNumber = "+905568085595",
                            PhoneNumberConfirmed = false,
                            Profession = "Chef/Cook",
                            SecurityStamp = "U0QNCX0R6WGOA97EJSHX7VWHXOYJ0K2Z",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("31b59d47-40e5-4084-9484-91e0403f2035"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.kaya@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("75312d02-52df-400d-a4d7-1480a81117e4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 11, 22, 0, 34, 59, 915, DateTimeKind.Local).AddTicks(1017),
                            CompanyId = new Guid("520d2102-5003-4ff2-9f84-ef150238754b"),
                            ConcurrencyStamp = "df41ded8-b711-4429-81a8-cf9c26c3399d",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 915, DateTimeKind.Local).AddTicks(1016),
                            Email = "mustafa.ozdemir@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "75865507384",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.OZDEMIR@YANDEX.COM",
                            NormalizedUserName = "MUSTAFA.OZDEMIR@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAjPAyXAhG8rHBGTnkk9aML+zuYwi5QiE5a/Kfxo/48gbsJA8EEv5ATRdbchIT+o8A==",
                            PhoneNumber = "+905655511861",
                            PhoneNumberConfirmed = false,
                            Profession = "Lecturer",
                            SecurityStamp = "INFZH0P1Q354JBLJ3ZJOA17JHTYP9GE0",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("cb87c2bc-3535-4457-acdf-451822a39b8b"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.ozdemir@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("99e55d11-0316-47e4-9bd6-a225ceb871e7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 11, 2, 0, 34, 59, 916, DateTimeKind.Local).AddTicks(4312),
                            CompanyId = new Guid("56d921c6-d025-4332-abd1-42508a1d2f82"),
                            ConcurrencyStamp = "3a7ef7b9-1abd-49fb-8fef-efee607c693e",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 916, DateTimeKind.Local).AddTicks(4311),
                            Email = "yusuf.kaya@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "31787147626",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.KAYA@GOOGLE.COM",
                            NormalizedUserName = "YUSUF.KAYA@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHuwwq4TtlfxwVN1zZW7Bkjj6UFQ+EShPP6b8Op9gnh+JevqGBb4mw3acfjJ8R3z4w==",
                            PhoneNumber = "+905690272732",
                            PhoneNumberConfirmed = false,
                            Profession = "Real estate agent",
                            SecurityStamp = "IGUTQRM5NEGEOG55F7NYM6IAOHOOCTMS",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("8de4166f-2f22-4aa5-9716-24ffc09718a9"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.kaya@google.com"
                        },
                        new
                        {
                            Id = new Guid("412535c5-48e3-4620-9125-2f5bdf796348"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 11, 20, 0, 34, 59, 917, DateTimeKind.Local).AddTicks(7142),
                            CompanyId = new Guid("233462cc-903b-4d37-bd29-478db6148421"),
                            ConcurrencyStamp = "3746212b-5a82-4669-bdc5-7456ca51fa63",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 917, DateTimeKind.Local).AddTicks(7142),
                            Email = "hasan.yildirim@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "71687216626",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILDIRIM@HOTMAIL.COM",
                            NormalizedUserName = "HASAN.YILDIRIM@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEItlAy6pW5TtZXunLhsafatJqU2vcNrsY4dPCTcKvfz805hI8ZVTgFwB429RzqXLnA==",
                            PhoneNumber = "+905391162957",
                            PhoneNumberConfirmed = false,
                            Profession = "Secretary",
                            SecurityStamp = "GX64BNZHG26TO7O3I8AJMTSSV3VTEH4F",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("b3cab202-d979-40f2-b4fe-7348cd5a0ef6"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yildirim@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("0ed03d90-2e96-440e-9779-6beebc540913"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 4, 28, 0, 34, 59, 919, DateTimeKind.Local).AddTicks(825),
                            CompanyId = new Guid("087a84d3-7685-406d-ab80-735bd2b4899a"),
                            ConcurrencyStamp = "32e5672d-2b60-45f7-82e3-c176ba171dd8",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 919, DateTimeKind.Local).AddTicks(824),
                            Email = "hasan.sahin@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "35731581092",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.SAHIN@YAHOO.COM",
                            NormalizedUserName = "HASAN.SAHIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAF2U4v+FX7NTtgTumCE2/Kh8gpgQ6vWZ4h/kym0yiWVZ439r7e2MOiM0JmTUvudJA==",
                            PhoneNumber = "+905791770992",
                            PhoneNumberConfirmed = false,
                            Profession = "Hairdresser",
                            SecurityStamp = "S7HJD9QAI14AENAINVJ3SPCAGZ4YPD46",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("2c90585a-802a-43d8-88e9-bb9fa417c3b1"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.sahin@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("05cdd321-a4f3-47ed-b856-229e74ad3663"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 12, 31, 0, 34, 59, 920, DateTimeKind.Local).AddTicks(3665),
                            CompanyId = new Guid("1089b923-128a-41a3-8055-4531cc96bcb8"),
                            ConcurrencyStamp = "563714b9-c8c2-4206-97e3-cc4fc81bb346",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 920, DateTimeKind.Local).AddTicks(3664),
                            Email = "ahmet.ozturk@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "83583041394",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.OZTURK@YANDEX.COM",
                            NormalizedUserName = "AHMET.OZTURK@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMg8YwKmFaBjZGyb2Sqa2xTJmNo0bjsW5obu297/zY6bi7IiYrOinjLDeFN7AKJCnA==",
                            PhoneNumber = "+905989032598",
                            PhoneNumberConfirmed = false,
                            Profession = "Policeman/Policewoman",
                            SecurityStamp = "3T1L8C7RAVOJCF6G9EQRCOXAVBF07M5R",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("8be0f0e9-05ea-451b-b60f-25812fe5f912"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.ozturk@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("96a90859-405e-4e88-a3ea-2b0c2ca8f94b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 7, 6, 0, 34, 59, 921, DateTimeKind.Local).AddTicks(6907),
                            CompanyId = new Guid("3df51d67-ed70-4f0a-81a9-22ba7e8569e2"),
                            ConcurrencyStamp = "877f7b36-f683-4018-b1cc-9ad954421e74",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 921, DateTimeKind.Local).AddTicks(6907),
                            Email = "ibrahim.yildiz@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "48553636482",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIZ@HOTMAIL.COM",
                            NormalizedUserName = "IBRAHIM.YILDIZ@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOeIkDh9YDjUUD7BkUYdR97S0i65VsC6i6iJNT5aVMgduua5LaE07LP0mSOrkfim0g==",
                            PhoneNumber = "+905994651140",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "40ZESSBS41OMK9WY8XVIF13JGC0VGJRX",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("ecbcbf38-03c2-42bb-9d27-ff312a3c7448"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildiz@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("fcefef7f-2e6f-49e0-8c6a-f53855bf66c2"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 4, 26, 0, 34, 59, 922, DateTimeKind.Local).AddTicks(9861),
                            CompanyId = new Guid("59e5edfb-77fc-4727-a735-358ef9b4736b"),
                            ConcurrencyStamp = "cf011232-2aaa-4a48-a505-091ebd8f5dbe",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 922, DateTimeKind.Local).AddTicks(9860),
                            Email = "hasan.sahin@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "57557756614",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.SAHIN@YANDEX.COM",
                            NormalizedUserName = "HASAN.SAHIN@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEL+dBIoIojqU/kbFQWPwjwnYwy4RIos6dcu5/kZeFVFV8ziFx1ss0W0W7kyhGu4YHg==",
                            PhoneNumber = "+905298470293",
                            PhoneNumberConfirmed = false,
                            Profession = "Veterinary doctor(Vet)",
                            SecurityStamp = "S0VX7G7GWSQGBU78MTTY17KI3XI4M2CO",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("a8bb6d7d-405e-4469-919c-25b70d3021be"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.sahin@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("3b571f01-58e0-484a-94cb-c69063750a50"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 12, 17, 0, 34, 59, 924, DateTimeKind.Local).AddTicks(2227),
                            CompanyId = new Guid("89cd36d8-0b37-4a66-b124-29054b6d4e14"),
                            ConcurrencyStamp = "374ba8f5-06de-4a1c-a6c5-1d277b65813a",
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 924, DateTimeKind.Local).AddTicks(2225),
                            Email = "ismail.sahin@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "12478440202",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.SAHIN@OUTLOOK.COM",
                            NormalizedUserName = "ISMAIL.SAHIN@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIcNgriekt+P2ZSoBMWRQBoWNS6B4j9/GplB6PrBwfki5RMvyhktBvvbDM2wrMjU3Q==",
                            PhoneNumber = "+905143796797",
                            PhoneNumberConfirmed = false,
                            Profession = "Nurse",
                            SecurityStamp = "BDRST5376D3U12YEUFYHXSTCKV362DZF",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("55c48b18-c126-4d1a-b969-95d84ac6ed4e"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.sahin@outlook.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(487),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905696567126",
                            SectorId = new Guid("3158e781-15e9-4552-82ea-10bec4302f1d"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7a2b9ecd-1044-446b-b293-9f3767c6ad6a"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 905, DateTimeKind.Local).AddTicks(8208),
                            Email = "info@yildirimkomanditsirketi.com",
                            Name = "Yıldırım Komandit Şirketi",
                            NumberOfEmployees = 32,
                            PhoneNumber = "+905854323180",
                            SectorId = new Guid("c948d118-5bad-493f-ae1b-dbfb22984df1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f3d8e4e1-6ca9-4b67-8245-8d57cbf14ff0"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 907, DateTimeKind.Local).AddTicks(1907),
                            Email = "info@sahinkomanditsirketi.com",
                            Name = "Şahin Komandit Şirketi",
                            NumberOfEmployees = 20,
                            PhoneNumber = "+905111357051",
                            SectorId = new Guid("d87fb5a8-497b-4e39-a5df-41663839b9b7"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("78922a67-596c-4b9a-b6d6-8d3eca5e87a2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 908, DateTimeKind.Local).AddTicks(5021),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Kollektif Şirketi",
                            NumberOfEmployees = 60,
                            PhoneNumber = "+905287131191",
                            SectorId = new Guid("b4d26ede-79c9-4ffd-a70c-5fa23f536bf2"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("cc30e96f-822b-46be-bd15-bef0ff51a441"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 909, DateTimeKind.Local).AddTicks(8653),
                            Email = "info@aydinkomanditsirketi.com",
                            Name = "Aydın Komandit Şirketi",
                            NumberOfEmployees = 68,
                            PhoneNumber = "+905338369623",
                            SectorId = new Guid("ce02fffd-11a1-4a2a-9597-fb6bb9051259"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e11d302b-cda5-45ce-9c7b-b29a5aad2557"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 911, DateTimeKind.Local).AddTicks(1717),
                            Email = "info@yilmazkooperatifsirketi.com",
                            Name = "Yılmaz Kooperatif Şirketi",
                            NumberOfEmployees = 87,
                            PhoneNumber = "+905648190032",
                            SectorId = new Guid("c92b9d1b-8591-454c-9308-25f916a9e549"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("6c16c6d9-f095-428f-9ef5-05834c7c8abf"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 912, DateTimeKind.Local).AddTicks(4888),
                            Email = "info@demirkomanditsirketi.com",
                            Name = "Demir Komandit Şirketi",
                            NumberOfEmployees = 64,
                            PhoneNumber = "+905669047454",
                            SectorId = new Guid("633a1522-7775-45ad-9137-9b51b0ebf1be"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f0155b24-45ac-4a56-b1b3-82187f1e390c"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 913, DateTimeKind.Local).AddTicks(8332),
                            Email = "info@kayakomanditsirketi.com",
                            Name = "Kaya Komandit Şirketi",
                            NumberOfEmployees = 23,
                            PhoneNumber = "+905654559843",
                            SectorId = new Guid("900d74a5-7f5e-472d-8c6e-6b96cddbc068"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("520d2102-5003-4ff2-9f84-ef150238754b"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 915, DateTimeKind.Local).AddTicks(1009),
                            Email = "info@ozdemirkomanditsirketi.com",
                            Name = "Özdemir Komandit Şirketi",
                            NumberOfEmployees = 41,
                            PhoneNumber = "+905358197477",
                            SectorId = new Guid("b4d26ede-79c9-4ffd-a70c-5fa23f536bf2"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("56d921c6-d025-4332-abd1-42508a1d2f82"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 916, DateTimeKind.Local).AddTicks(4300),
                            Email = "info@kayakomanditsirketi.com",
                            Name = "Kaya Komandit Şirketi",
                            NumberOfEmployees = 17,
                            PhoneNumber = "+905449848046",
                            SectorId = new Guid("c948d118-5bad-493f-ae1b-dbfb22984df1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("233462cc-903b-4d37-bd29-478db6148421"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 917, DateTimeKind.Local).AddTicks(7133),
                            Email = "info@yildirimkomanditsirketi.com",
                            Name = "Yıldırım Komandit Şirketi",
                            NumberOfEmployees = 9,
                            PhoneNumber = "+905183653656",
                            SectorId = new Guid("b4d26ede-79c9-4ffd-a70c-5fa23f536bf2"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("087a84d3-7685-406d-ab80-735bd2b4899a"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 919, DateTimeKind.Local).AddTicks(787),
                            Email = "info@sahinanonimsirketi.com",
                            Name = "Şahin Anonim Şirketi",
                            NumberOfEmployees = 33,
                            PhoneNumber = "+905134251960",
                            SectorId = new Guid("a79c85eb-9aca-40cb-9fe0-722a68deb508"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("1089b923-128a-41a3-8055-4531cc96bcb8"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 920, DateTimeKind.Local).AddTicks(3657),
                            Email = "info@ozturkkomanditsirketi.com",
                            Name = "Öztürk Komandit Şirketi",
                            NumberOfEmployees = 72,
                            PhoneNumber = "+905799327077",
                            SectorId = new Guid("266b61bd-ece3-4dba-8cdf-494c5638e3b3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("3df51d67-ed70-4f0a-81a9-22ba7e8569e2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 921, DateTimeKind.Local).AddTicks(6894),
                            Email = "info@yildizlimitedsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 80,
                            PhoneNumber = "+905630577989",
                            SectorId = new Guid("2a2c68d0-346c-4b49-bd06-b7ec7af2d8a5"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("59e5edfb-77fc-4727-a735-358ef9b4736b"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 922, DateTimeKind.Local).AddTicks(9783),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Kollektif Şirketi",
                            NumberOfEmployees = 70,
                            PhoneNumber = "+905764261839",
                            SectorId = new Guid("d7ea0e21-4071-423b-b7fe-5bda1fe81b1f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("89cd36d8-0b37-4a66-b124-29054b6d4e14"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 924, DateTimeKind.Local).AddTicks(2218),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Kollektif Şirketi",
                            NumberOfEmployees = 80,
                            PhoneNumber = "+905754056903",
                            SectorId = new Guid("24b5e10e-9068-409a-b400-37ba3454453a"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("206e4aca-2596-4f86-9cfa-d5581ed6c706"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(323),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3158e781-15e9-4552-82ea-10bec4302f1d"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(339),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("95c87f7c-2941-4a35-ad7b-ccacbdac6a4b"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(340),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a79c85eb-9aca-40cb-9fe0-722a68deb508"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(341),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("41ea0c61-a464-4157-b39c-7de310592925"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(342),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2a2c68d0-346c-4b49-bd06-b7ec7af2d8a5"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(344),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f144667c-4e21-4e38-a514-2ba23db52290"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(348),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("266b61bd-ece3-4dba-8cdf-494c5638e3b3"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(349),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ce02fffd-11a1-4a2a-9597-fb6bb9051259"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(350),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d7ea0e21-4071-423b-b7fe-5bda1fe81b1f"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(352),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("633a1522-7775-45ad-9137-9b51b0ebf1be"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(353),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("24b5e10e-9068-409a-b400-37ba3454453a"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(354),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f4b8e2b2-5e38-4b8d-a3a7-fa8416aca55e"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(356),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b4d26ede-79c9-4ffd-a70c-5fa23f536bf2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(357),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("153fb663-d57d-4b19-9803-a0a21f27ccb3"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(359),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c13a5aca-5472-41d6-81e2-a6db3652bca2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(360),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("16a6dc59-2ec9-4295-acf8-a12046a37955"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(361),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d87fb5a8-497b-4e39-a5df-41663839b9b7"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(363),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b0d244d3-a4b3-4bf9-abc8-3a872aa67fb2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(364),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92ed51fd-ec4f-4aed-b4db-0b52852132d2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(365),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("70b212d4-1881-4e8b-8d61-7554d67a6f8e"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(366),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c92b9d1b-8591-454c-9308-25f916a9e549"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(367),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("900d74a5-7f5e-472d-8c6e-6b96cddbc068"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(397),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c948d118-5bad-493f-ae1b-dbfb22984df1"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(398),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4abcb3d5-9d6e-477e-9135-f57f12503463"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(503),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b59ae56b-57c8-4a24-8587-fe06947b8242"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(508),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c4b7845f-ca45-4cef-a88d-3d4dbd62fa15"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(509),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7c9c0a87-511c-4605-8c0d-72ab62c3036b"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(510),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("84cdad30-d527-44f8-bc4d-0a0c4f8683cc"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(511),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("36a4f3a1-30d4-4b5f-9568-cfbdcb187e8a"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(513),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("841c034a-eeb8-4299-80f4-d6cfc0203573"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(514),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("49a95727-ca4a-4af6-8686-d9309d4c36ea"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(515),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("85ec71df-bdef-4012-a8f4-d7e145a1534a"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(518),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7f10cecd-19f8-472c-be90-471964bcc6ac"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(520),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1cdc5e9b-38d5-45e7-bcc3-9860b68b7144"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(521),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b6a02c39-696a-4dbb-91a5-47417916b2a7"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(522),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("79695e50-a562-4cea-8dca-f825d7172e1e"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(523),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d08970f2-9421-4d7e-96ce-ce226695bd8f"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(524),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("697a98a1-21c0-4e11-a271-89e2c6035072"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(525),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c8198def-5c72-4c46-a135-078bdfa00452"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(526),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f574df10-9c54-47f8-91ff-a0af085ac8cd"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(528),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d0e9fca0-3122-47f9-8a22-1d7c707be720"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(530),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1db7d5b8-5c67-4efc-aee3-f9ff10089021"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(531),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bce397a2-020b-49cf-aa14-be41d483fc6b"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(533),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b2be7c23-0eec-4698-a2d6-ebe4fc6b5623"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(534),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d22b1d9f-f540-4da1-b6f2-8fa0326f20da"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(535),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8d15d13a-fd6f-444f-89e6-a44e5d5fbea5"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(536),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("064d1451-e5bb-48da-be5c-ff0f9b68a163"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(537),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dd94cff7-1ee3-4b8e-a9f5-9fc81f121b6f"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(539),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c065ef8a-0336-4eee-9144-c2752ca04da7"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(540),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6437ae64-b452-4072-a616-64586b44a2f7"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(541),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aa99a805-104f-48b9-b523-228c2e854832"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(542),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a5da96eb-96f9-48f8-9493-5e47a59fe2f5"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(543),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9eab9bd3-c779-4341-9cf8-b74b03f017a2"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(544),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e70d7bf2-dda5-452d-bd4f-aeb6f9b70475"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(545),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ff15af1b-9440-47c2-bf4b-10ce0804d5b7"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(546),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("634072dc-3dd1-40e1-ad01-9b43df35463d"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(548),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cc345999-b94e-4068-b3ba-960a47950475"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(550),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c395b0ea-8ab0-4736-902c-6826789cf6da"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(551),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("02144bd0-938e-456b-90d9-73023b719142"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(553),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("03a60eee-ba3d-4b9b-a344-22529c08c031"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(554),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("28b39c9f-ee28-4d17-8aaa-aee25cdc3e4d"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(555),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ba3be959-317f-44b1-b13e-8723b3c55e15"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(556),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0a9591aa-a46d-4713-8c75-824e4060610f"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(557),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a894abf7-b733-45b9-af5a-92409a5628cf"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(559),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6970655c-b93d-4f3a-aaef-e79fa764f34b"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(595),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bbcc27ca-3039-4ceb-b642-74ad54d08cdb"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(597),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("97eec902-db97-4009-95c6-6ac00ff15f02"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(598),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8ddb6419-4360-48a3-901a-5f6943250220"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(599),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8cc07fe4-d21d-4faa-9da2-33470d186797"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(600),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("10b803a0-43b0-41c9-9415-6c62248cfc39"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(601),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1b58f05d-2f76-48f5-baaa-e846cce1de15"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(602),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("34ec0082-6598-4e5e-9f8e-375a02b02dcd"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(605),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0c2fb941-8781-4e8d-97d4-986482679a5a"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(606),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("43f330a3-6c07-48ec-b166-32e39e5c507b"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(607),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4cf4c6bb-1f2c-40f2-b906-4ef490cea7cb"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(608),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b16fa03e-3540-4ec0-a49f-9ee1bd30381b"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(608),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e4be4020-fe1c-4bcd-ba1e-ed93e575da3d"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(610),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d0b0a308-515b-4db8-a018-d8831d2130f6"),
                            CompanyId = new Guid("9d0d601f-8501-4d22-9393-4ffc4db445b2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 899, DateTimeKind.Local).AddTicks(610),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b9a511fe-3dd9-402d-aba3-a1f9ebf46b73"),
                            CompanyId = new Guid("7a2b9ecd-1044-446b-b293-9f3767c6ad6a"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 905, DateTimeKind.Local).AddTicks(8213),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("96e918cf-15a7-4382-8fdd-d7364836e9a5"),
                            CompanyId = new Guid("f3d8e4e1-6ca9-4b67-8245-8d57cbf14ff0"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 907, DateTimeKind.Local).AddTicks(1913),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("abad928d-739c-49a9-94d7-84845615da49"),
                            CompanyId = new Guid("78922a67-596c-4b9a-b6d6-8d3eca5e87a2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 908, DateTimeKind.Local).AddTicks(5026),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("64b64ea5-fbf2-4ea0-9edd-b2f74271119e"),
                            CompanyId = new Guid("cc30e96f-822b-46be-bd15-bef0ff51a441"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 909, DateTimeKind.Local).AddTicks(8666),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("20c3ca58-029c-4e74-a20f-16f99783458a"),
                            CompanyId = new Guid("e11d302b-cda5-45ce-9c7b-b29a5aad2557"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 911, DateTimeKind.Local).AddTicks(1721),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("52ab7740-0f7c-4076-b4c5-d094e8c4b195"),
                            CompanyId = new Guid("6c16c6d9-f095-428f-9ef5-05834c7c8abf"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 912, DateTimeKind.Local).AddTicks(4891),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("31b59d47-40e5-4084-9484-91e0403f2035"),
                            CompanyId = new Guid("f0155b24-45ac-4a56-b1b3-82187f1e390c"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 913, DateTimeKind.Local).AddTicks(8336),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cb87c2bc-3535-4457-acdf-451822a39b8b"),
                            CompanyId = new Guid("520d2102-5003-4ff2-9f84-ef150238754b"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 915, DateTimeKind.Local).AddTicks(1012),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8de4166f-2f22-4aa5-9716-24ffc09718a9"),
                            CompanyId = new Guid("56d921c6-d025-4332-abd1-42508a1d2f82"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 916, DateTimeKind.Local).AddTicks(4304),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b3cab202-d979-40f2-b4fe-7348cd5a0ef6"),
                            CompanyId = new Guid("233462cc-903b-4d37-bd29-478db6148421"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 917, DateTimeKind.Local).AddTicks(7136),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2c90585a-802a-43d8-88e9-bb9fa417c3b1"),
                            CompanyId = new Guid("087a84d3-7685-406d-ab80-735bd2b4899a"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 919, DateTimeKind.Local).AddTicks(791),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8be0f0e9-05ea-451b-b60f-25812fe5f912"),
                            CompanyId = new Guid("1089b923-128a-41a3-8055-4531cc96bcb8"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 920, DateTimeKind.Local).AddTicks(3660),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ecbcbf38-03c2-42bb-9d27-ff312a3c7448"),
                            CompanyId = new Guid("3df51d67-ed70-4f0a-81a9-22ba7e8569e2"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 921, DateTimeKind.Local).AddTicks(6898),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a8bb6d7d-405e-4469-919c-25b70d3021be"),
                            CompanyId = new Guid("59e5edfb-77fc-4727-a735-358ef9b4736b"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 922, DateTimeKind.Local).AddTicks(9856),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("55c48b18-c126-4d1a-b969-95d84ac6ed4e"),
                            CompanyId = new Guid("89cd36d8-0b37-4a66-b124-29054b6d4e14"),
                            CreateDate = new DateTime(2023, 5, 17, 0, 34, 59, 924, DateTimeKind.Local).AddTicks(2220),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac"),
                            ConcurrencyStamp = "ODCE7GF41R1AUM71QR0P6UC8BB809EK5",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219"),
                            ConcurrencyStamp = "BKWCQCMPFKYYGIDTGTC6LFL4RUHKCJJA",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("6a9a9858-d856-4bd8-ad59-9a2891b13903"),
                            ConcurrencyStamp = "D60V9Z9SU5LUPQSXXMNJ0AGGJOR42DAG",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("46f332ff-fdf1-4f7c-bbd5-c725aa7ef15a"),
                            RoleId = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac")
                        },
                        new
                        {
                            UserId = new Guid("bd1938f0-69ea-4d27-a717-3b7e6116da62"),
                            RoleId = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac")
                        },
                        new
                        {
                            UserId = new Guid("0fa18ebe-8a8b-4674-bb81-fbf7e0f793da"),
                            RoleId = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac")
                        },
                        new
                        {
                            UserId = new Guid("5e17b4af-3192-40fe-bc54-9c3888ce08ae"),
                            RoleId = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac")
                        },
                        new
                        {
                            UserId = new Guid("4a765081-8035-4753-be13-1375263a0923"),
                            RoleId = new Guid("3b6233e4-8070-46ed-a3b8-cd59171cf3ac")
                        },
                        new
                        {
                            UserId = new Guid("1520cfff-92f8-4576-95c9-0ae3c05a07d2"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("5ee3dcdf-bb08-4f5c-8c74-1c92997366b0"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("45adbfa8-da94-4af8-bf96-ab5624f74fc5"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("5805b2a8-dd08-4576-b800-0e8b140f4f64"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("bb94dce7-2911-4bad-aa49-7aec6214a6be"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("e912b1fd-f73f-4fcb-8b03-8b1a2075560a"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("0adadabf-987a-4c45-9efb-f0f9db8edcf9"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("75312d02-52df-400d-a4d7-1480a81117e4"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("99e55d11-0316-47e4-9bd6-a225ceb871e7"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("412535c5-48e3-4620-9125-2f5bdf796348"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("0ed03d90-2e96-440e-9779-6beebc540913"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("05cdd321-a4f3-47ed-b856-229e74ad3663"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("96a90859-405e-4e88-a3ea-2b0c2ca8f94b"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("fcefef7f-2e6f-49e0-8c6a-f53855bf66c2"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        },
                        new
                        {
                            UserId = new Guid("3b571f01-58e0-484a-94cb-c69063750a50"),
                            RoleId = new Guid("d6edbe69-da4f-48cc-b878-9dd096b99219")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithOne("Address")
                        .HasForeignKey("IKApplication.Domain.Entites.Address", "AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("CashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("CashAdvances");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
