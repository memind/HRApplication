// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230608122107_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PatronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfessionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("TitleId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PatronId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8fc4846-781e-43ef-b497-d65a03a24c13"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 12, 21, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(509),
                            BloodGroup = 6,
                            CompanyId = new Guid("491c53fb-7e75-4623-95c3-6932736a1f8c"),
                            ConcurrencyStamp = "8488b4a9-6b08-45b1-92f2-06448d8cf99d",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(506),
                            Email = "taha.kayapinar@hrapp.com",
                            EmailConfirmed = false,
                            IdentityNumber = "18881883612",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(529),
                            LockoutEnabled = false,
                            Name = "Taha",
                            NormalizedEmail = "TAHA.KAYAPINAR@HRAPP.COM",
                            NormalizedUserName = "TAHA.KAYAPINAR@HRAPP.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMbb2nQtkvZ6RrPJqPFJp6TkzeikOvQ+PVwDRD9Frbu7mAjbdIcR0Hq2zNwwtwkiiw==",
                            PatronId = new Guid("a8fc4846-781e-43ef-b497-d65a03a24c13"),
                            PersonalEmail = "tahakayapinar@gmail.com",
                            PhoneNumber = "+905811223306",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4cf5f02a-abfc-494a-972f-5ebc6730d6d0"),
                            SecurityStamp = "14ILDLON5BKB4Z05NED0TSNL0M5ZJ9Z2",
                            Status = 1,
                            Surname = "Kayapınar",
                            TitleId = new Guid("213173e9-120c-41d8-9cc2-8b4cc5d0b920"),
                            TwoFactorEnabled = false,
                            UserName = "taha.kayapinar@hrapp.com"
                        },
                        new
                        {
                            Id = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 5, 20, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8793),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "e185e0a9-d947-4bd8-a890-8d3475a51f29",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8792),
                            Email = "ahmet.aydin1@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "34817454602",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8801),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.AYDIN1@AYDIN.COM",
                            NormalizedUserName = "AHMET.AYDIN1@AYDIN.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBQ/cp35O5w90Y0+QOrFXvxn6xRfXbNSIrSznskKDVmXxrxGih1O06A4AqDaBT2D1w==",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "ahmet.aydin@hotmail.com",
                            PhoneNumber = "+905877896006",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("f242bd5c-86e7-4185-a6fd-2d7249f5fc52"),
                            SecurityStamp = "HNYGPM3NRZ4BPFNE369BY3ZOZRANPNRM",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("1937bb0f-1a57-4f06-aacd-56252b283b65"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.aydin1@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("ecb88725-60fc-46f9-946e-23847081e03a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 9, 19, 15, 21, 7, 50, DateTimeKind.Local).AddTicks(5818),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "3ac03d36-22fd-43d5-b168-57ef83ffca09",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 50, DateTimeKind.Local).AddTicks(5816),
                            Email = "ali.yildiz2@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "38502753520",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 50, DateTimeKind.Local).AddTicks(5825),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.YILDIZ2@AYDIN.COM",
                            NormalizedUserName = "ALI.YILDIZ2@AYDIN.COM",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "ali.yildiz@yandex.com",
                            PhoneNumber = "+905686812815",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("f242bd5c-86e7-4185-a6fd-2d7249f5fc52"),
                            SecurityStamp = "UEDC2UFG0O5GWX9P93V3BGU9OWFNTM6F",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            TwoFactorEnabled = false,
                            UserName = "ali.yildiz2@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("9af8dd3d-37a1-48a1-a68e-8722c1002fe0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 2, 8, 15, 21, 7, 56, DateTimeKind.Local).AddTicks(3324),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "1d94a203-f09f-4fbd-8cf5-7dc68b2532d9",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 56, DateTimeKind.Local).AddTicks(3324),
                            Email = "ismail.celik3@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "57885420010",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 56, DateTimeKind.Local).AddTicks(3330),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.CELIK3@AYDIN.COM",
                            NormalizedUserName = "ISMAIL.CELIK3@AYDIN.COM",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "ismail.celik@hotmail.com",
                            PhoneNumber = "+905661060608",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("f242bd5c-86e7-4185-a6fd-2d7249f5fc52"),
                            SecurityStamp = "GVPZU11GII7ZZY51PZ3KUIVFQ5FSO7DR",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.celik3@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("b14817d6-dc46-4a60-a097-fafa8d200a0d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 6, 18, 15, 21, 7, 62, DateTimeKind.Local).AddTicks(3564),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "780e48e9-5b90-48ec-9729-0dee4c9d4e78",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 62, DateTimeKind.Local).AddTicks(3557),
                            Email = "yusuf.sahin4@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "52808238758",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 62, DateTimeKind.Local).AddTicks(3581),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.SAHIN4@AYDIN.COM",
                            NormalizedUserName = "YUSUF.SAHIN4@AYDIN.COM",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "yusuf.sahin@yandex.com",
                            PhoneNumber = "+905177256686",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("f242bd5c-86e7-4185-a6fd-2d7249f5fc52"),
                            SecurityStamp = "GH84PS3F98DDD7PXNYKCQ81DRRO3NBLE",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.sahin4@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("6f606b4a-2d61-46a4-af52-882ea9036e93"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 4, 28, 15, 21, 7, 68, DateTimeKind.Local).AddTicks(2555),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "0c58f276-b58e-4839-a230-8c7942c241b1",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 68, DateTimeKind.Local).AddTicks(2552),
                            Email = "ahmet.yildiz5@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "16063505758",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 68, DateTimeKind.Local).AddTicks(2563),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIZ5@AYDIN.COM",
                            NormalizedUserName = "AHMET.YILDIZ5@AYDIN.COM",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "ahmet.yildiz@yahoo.com",
                            PhoneNumber = "+905675259580",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("b7bff893-ff74-41cc-ad42-866243bc36d6"),
                            SecurityStamp = "OXC3OX4KQR4F06DDRFUMKAMWOH3MV91D",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildiz5@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("9b190eed-6be5-47cb-a718-6d66da6cc5dc"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 3, 12, 15, 21, 7, 74, DateTimeKind.Local).AddTicks(915),
                            BloodGroup = 6,
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            ConcurrencyStamp = "3864848e-7a0c-4346-9e5d-d15d87dc364a",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 74, DateTimeKind.Local).AddTicks(914),
                            Email = "hasan.yilmaz6@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "75604011240",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 74, DateTimeKind.Local).AddTicks(920),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILMAZ6@AYDIN.COM",
                            NormalizedUserName = "HASAN.YILMAZ6@AYDIN.COM",
                            PatronId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            PersonalEmail = "hasan.yilmaz@google.com",
                            PhoneNumber = "+905882131158",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("b7bff893-ff74-41cc-ad42-866243bc36d6"),
                            SecurityStamp = "8CDV2GSERQ3UJR7461I72W417IMDN7E0",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yilmaz6@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2060, 10, 11, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9894),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "6078509f-4c99-44ad-a82e-37cc1a18fd7e",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9889),
                            Email = "huseyin.aydin7@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "55410277214",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9902),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.AYDIN7@AYDIN.COM",
                            NormalizedUserName = "HUSEYIN.AYDIN7@AYDIN.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHklElwSpDb5+7lIbgSiLMHUzvVf8NMqtgmKzvnYbdd2MfPrIyO7Kb632dy4QMIwFw==",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "huseyin.aydin@yahoo.com",
                            PhoneNumber = "+905400678017",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("9744520c-cf0d-4528-a166-6218e9af2a03"),
                            SecurityStamp = "XZ4XHIA1FJFDKM7CJ4DJPEGMJ3JAJS7C",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.aydin7@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("827d6181-263d-4cc8-880d-87d283977af0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 12, 15, 15, 21, 7, 87, DateTimeKind.Local).AddTicks(9436),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "c74c0e15-fb92-4661-ab96-4c3b9257e2d3",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 87, DateTimeKind.Local).AddTicks(9420),
                            Email = "ahmet.kaya8@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "71585788188",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 87, DateTimeKind.Local).AddTicks(9458),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.KAYA8@AYDIN.COM",
                            NormalizedUserName = "AHMET.KAYA8@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "ahmet.kaya@yandex.com",
                            PhoneNumber = "+905474679824",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("9744520c-cf0d-4528-a166-6218e9af2a03"),
                            SecurityStamp = "9ZQPO3W9S8U9O39AUJ63LOW04FDDVIX1",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.kaya8@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("20cf81da-3860-4f15-bfcb-b975de90d12b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 1, 7, 15, 21, 7, 94, DateTimeKind.Local).AddTicks(1305),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "c452a919-54c9-456f-b7b1-cb6878dbe1a4",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 94, DateTimeKind.Local).AddTicks(1302),
                            Email = "mehmet.celik9@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "45164082684",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 94, DateTimeKind.Local).AddTicks(1314),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.CELIK9@AYDIN.COM",
                            NormalizedUserName = "MEHMET.CELIK9@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "mehmet.celik@google.com",
                            PhoneNumber = "+905751222921",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("9744520c-cf0d-4528-a166-6218e9af2a03"),
                            SecurityStamp = "ZBBG30ZRTFXZU2UTLTZPV4A0UMK6ZGSC",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.celik9@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("0ba9cdac-85a4-40c2-8e36-ab49d8a59ffc"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 9, 22, 15, 21, 7, 99, DateTimeKind.Local).AddTicks(8790),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "f42e3c04-c99f-4b25-9783-ac8aa7c362c7",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 99, DateTimeKind.Local).AddTicks(8788),
                            Email = "ali.celik10@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "34605445584",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 99, DateTimeKind.Local).AddTicks(8797),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.CELIK10@AYDIN.COM",
                            NormalizedUserName = "ALI.CELIK10@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "ali.celik@google.com",
                            PhoneNumber = "+905958651156",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "BYW7HMZ9UHNS1NXZIADWDYDZQG1EASF2",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "ali.celik10@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("04b6cea1-c5cc-419a-9095-78b5d854e29f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2058, 4, 21, 15, 21, 7, 105, DateTimeKind.Local).AddTicks(5782),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "0e1697bc-e048-4ecd-a9ce-c2c3a4b511da",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 105, DateTimeKind.Local).AddTicks(5781),
                            Email = "mustafa.yilmaz11@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "76485862624",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 105, DateTimeKind.Local).AddTicks(5789),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILMAZ11@AYDIN.COM",
                            NormalizedUserName = "MUSTAFA.YILMAZ11@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "mustafa.yilmaz@google.com",
                            PhoneNumber = "+905859882638",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "J0N4ZPQPN4QTXELS4GRZZCHMSG8VICOE",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yilmaz11@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("3b881add-90b3-4bd5-9574-a734bdbd994d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 11, 23, 15, 21, 7, 112, DateTimeKind.Local).AddTicks(1388),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "758ac9eb-4d88-4431-9b4b-a71bee367af0",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 112, DateTimeKind.Local).AddTicks(1376),
                            Email = "huseyin.kaya12@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "24163116194",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 112, DateTimeKind.Local).AddTicks(1406),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.KAYA12@AYDIN.COM",
                            NormalizedUserName = "HUSEYIN.KAYA12@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "huseyin.kaya@yahoo.com",
                            PhoneNumber = "+905304727636",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("9744520c-cf0d-4528-a166-6218e9af2a03"),
                            SecurityStamp = "6X08N1R3PWNEQ40ZIOAMQ0EL9RT690TW",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.kaya12@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("1237f713-102a-4200-9a34-4f6cfd051273"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 2, 19, 15, 21, 7, 118, DateTimeKind.Local).AddTicks(8854),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "4f33acf6-ab98-4fd5-ae54-39d3bcbed269",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 118, DateTimeKind.Local).AddTicks(8849),
                            Email = "ismail.ozturk13@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "32846127474",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 118, DateTimeKind.Local).AddTicks(8866),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.OZTURK13@AYDIN.COM",
                            NormalizedUserName = "ISMAIL.OZTURK13@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "ismail.ozturk@google.com",
                            PhoneNumber = "+905645160734",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "N1E0XKVA14KWCB3BZBY7NHU9DT5XZGLD",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.ozturk13@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("3f32a1b6-232c-497c-ac83-f03f34ccd0c1"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 3, 4, 15, 21, 7, 124, DateTimeKind.Local).AddTicks(8178),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "27dc38cf-b65d-435d-ab0f-d37977604540",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 124, DateTimeKind.Local).AddTicks(8177),
                            Email = "mehmet.sahin14@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "33320666526",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 124, DateTimeKind.Local).AddTicks(8185),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.SAHIN14@AYDIN.COM",
                            NormalizedUserName = "MEHMET.SAHIN14@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "mehmet.sahin@google.com",
                            PhoneNumber = "+905949958771",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "M9N9RNNDXIUQBJCF419DQX5HPJJ4QP7L",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.sahin14@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("c584c492-d257-446d-ba52-c5aa1387f08e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 3, 2, 15, 21, 7, 130, DateTimeKind.Local).AddTicks(5134),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "9e9b822e-bbfd-4a9d-89f9-916fd723aa57",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 130, DateTimeKind.Local).AddTicks(5133),
                            Email = "ali.yildiz15@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "75077471176",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 130, DateTimeKind.Local).AddTicks(5139),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.YILDIZ15@AYDIN.COM",
                            NormalizedUserName = "ALI.YILDIZ15@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "ali.yildiz@yahoo.com",
                            PhoneNumber = "+905309619544",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "H58UBE35T1AVD9KDVERID55OCE9EULRS",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "ali.yildiz15@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("688194a6-c658-468c-acb8-07c5a3e72835"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 3, 17, 15, 21, 7, 136, DateTimeKind.Local).AddTicks(3676),
                            BloodGroup = 6,
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            ConcurrencyStamp = "853643c5-1912-4dc4-bb00-2c9c7608c0c7",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 136, DateTimeKind.Local).AddTicks(3671),
                            Email = "hasan.sahin16@aydin.com",
                            EmailConfirmed = false,
                            IdentityNumber = "58683627038",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 136, DateTimeKind.Local).AddTicks(3688),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.SAHIN16@AYDIN.COM",
                            NormalizedUserName = "HASAN.SAHIN16@AYDIN.COM",
                            PatronId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            PersonalEmail = "hasan.sahin@yandex.com",
                            PhoneNumber = "+905644716477",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            SecurityStamp = "1Q1LS9YKNUVSQ7XOA2DKA9V5YEC1LCKP",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.sahin16@aydin.com"
                        },
                        new
                        {
                            Id = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2074, 3, 26, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(7086),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "f20806af-7d24-4e60-9edd-1e7a3f35ef1e",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(7083),
                            Email = "mehmet.yilmaz17@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "46725641500",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(7098),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.YILMAZ17@YILMAZ.COM",
                            NormalizedUserName = "MEHMET.YILMAZ17@YILMAZ.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOBiyJQGckFsiRWV2Z/96p0NoN/Gu24gddB+qiPsvYOZfDvUS4Ac533uUL+s/BAIOg==",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "mehmet.yilmaz@outlook.com",
                            PhoneNumber = "+905462039742",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "L4WJYVDASV0R938NT3JPEQNU9LM32XTO",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.yilmaz17@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("20ce1ff7-1ab2-4670-b1de-efd5a758cf80"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2064, 3, 12, 15, 21, 7, 149, DateTimeKind.Local).AddTicks(4537),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "f1b2b51d-3ae8-4797-8d21-8906b53a7686",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 149, DateTimeKind.Local).AddTicks(4534),
                            Email = "mehmet.yildiz18@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "25488250846",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 149, DateTimeKind.Local).AddTicks(4545),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.YILDIZ18@YILMAZ.COM",
                            NormalizedUserName = "MEHMET.YILDIZ18@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "mehmet.yildiz@yahoo.com",
                            PhoneNumber = "+905595453813",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "MXBQ54A2FVD3QA866JJX5RPNZRFYMTWA",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.yildiz18@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("48f2f70f-db65-4f49-a430-d9ea05076480"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2063, 7, 23, 15, 21, 7, 155, DateTimeKind.Local).AddTicks(2703),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "0df4f05c-6c39-4689-9921-0176fb521b6c",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 155, DateTimeKind.Local).AddTicks(2699),
                            Email = "ibrahim.kaya19@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "84113474866",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 155, DateTimeKind.Local).AddTicks(2713),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.KAYA19@YILMAZ.COM",
                            NormalizedUserName = "IBRAHIM.KAYA19@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "ibrahim.kaya@hotmail.com",
                            PhoneNumber = "+905850886906",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "UPHVBXRYOVM3ME5LFDO10OA0G7URKFGB",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.kaya19@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("91c8e121-5fb2-4d99-bd46-47b2e00db209"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 2, 21, 15, 21, 7, 161, DateTimeKind.Local).AddTicks(127),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "a242210a-976f-46bd-9fc7-4f023dbe5be1",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 161, DateTimeKind.Local).AddTicks(125),
                            Email = "huseyin.yildirim20@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "33082008442",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 161, DateTimeKind.Local).AddTicks(133),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.YILDIRIM20@YILMAZ.COM",
                            NormalizedUserName = "HUSEYIN.YILDIRIM20@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "huseyin.yildirim@google.com",
                            PhoneNumber = "+905496652188",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "CCYRPR5QR9SKRFUXJL9NBWY4TPMSSNLD",
                            Status = 1,
                            Surname = "Yıldırım",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.yildirim20@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("6328ac0c-1719-4bb2-8fac-ead6c2d03d15"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2057, 4, 9, 15, 21, 7, 166, DateTimeKind.Local).AddTicks(7127),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "86e6dd06-c30f-44c2-b670-b47998ec94db",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 166, DateTimeKind.Local).AddTicks(7126),
                            Email = "yusuf.celik21@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "58577080550",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 166, DateTimeKind.Local).AddTicks(7132),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.CELIK21@YILMAZ.COM",
                            NormalizedUserName = "YUSUF.CELIK21@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "yusuf.celik@yandex.com",
                            PhoneNumber = "+905721617641",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "D49DGUE53U5MZERRR7O8D8Q5B4U99V6N",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.celik21@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("ef773520-5624-4bac-829a-e3923ab9e8bb"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 2, 13, 15, 21, 7, 172, DateTimeKind.Local).AddTicks(5642),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "d93e7b60-907e-48f5-93c4-3608b1cc2a7e",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 172, DateTimeKind.Local).AddTicks(5635),
                            Email = "ismail.aydin22@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "72627013862",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 172, DateTimeKind.Local).AddTicks(5652),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.AYDIN22@YILMAZ.COM",
                            NormalizedUserName = "ISMAIL.AYDIN22@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "ismail.aydin@yahoo.com",
                            PhoneNumber = "+905694199260",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "MFBAPTNAW58NA87MAZV7K4RWUYKUK384",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.aydin22@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("308549b7-afa7-46ef-9133-d15bbeebd18c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 3, 22, 15, 21, 7, 178, DateTimeKind.Local).AddTicks(2819),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "4b534986-2d7a-44ee-89a4-bf0a438ffe0d",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 178, DateTimeKind.Local).AddTicks(2810),
                            Email = "hasan.ozturk23@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "34052448640",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 178, DateTimeKind.Local).AddTicks(2829),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.OZTURK23@YILMAZ.COM",
                            NormalizedUserName = "HASAN.OZTURK23@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "hasan.ozturk@yahoo.com",
                            PhoneNumber = "+905763497945",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "KOTFKEO2V3MS5BUDREJUQQRDFKR3DKPT",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.ozturk23@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("4496c9f3-c1bf-4c71-9386-189c24aa9b8a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 5, 15, 15, 21, 7, 183, DateTimeKind.Local).AddTicks(9850),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "52931d4d-eaad-4bc5-8fbe-496f3e64b8c9",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 183, DateTimeKind.Local).AddTicks(9842),
                            Email = "ibrahim.yildirim24@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "58871134300",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 183, DateTimeKind.Local).AddTicks(9869),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIRIM24@YILMAZ.COM",
                            NormalizedUserName = "IBRAHIM.YILDIRIM24@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "ibrahim.yildirim@google.com",
                            PhoneNumber = "+905846909098",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "CHHMSW21GTSTOTFHRY8K4W38TBLO42KT",
                            Status = 1,
                            Surname = "Yıldırım",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildirim24@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("dfcb59d4-08b9-4fcf-a17d-87424ad7540b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 9, 22, 15, 21, 7, 189, DateTimeKind.Local).AddTicks(7729),
                            BloodGroup = 6,
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            ConcurrencyStamp = "fa270d48-a028-4b01-9701-feea44ced2ee",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 189, DateTimeKind.Local).AddTicks(7725),
                            Email = "ahmet.kaya25@yilmaz.com",
                            EmailConfirmed = false,
                            IdentityNumber = "52333723200",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 189, DateTimeKind.Local).AddTicks(7738),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.KAYA25@YILMAZ.COM",
                            NormalizedUserName = "AHMET.KAYA25@YILMAZ.COM",
                            PatronId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            PersonalEmail = "ahmet.kaya@yandex.com",
                            PhoneNumber = "+905457813274",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            SecurityStamp = "D4EG3LHF24OYX1NYSL5YU2AKUX0AINAA",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.kaya25@yilmaz.com"
                        },
                        new
                        {
                            Id = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 11, 14, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4979),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "215ae0a3-b944-4def-b08e-3ab1094534c7",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4977),
                            Email = "ali.demir26@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "38341200810",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4987),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.DEMIR26@DEMIR.COM",
                            NormalizedUserName = "ALI.DEMIR26@DEMIR.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEH6BgrNu0U51eniyQVJCc3bxfyXeQKjgI1cuGcBOAjNi6+9VuwZu7HjDVNlLWcM0HQ==",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "ali.demir@outlook.com",
                            PhoneNumber = "+905105671440",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "ZKSLCYVBWKUBIGJKTX066ZHL59P4XGQN",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "ali.demir26@demir.com"
                        },
                        new
                        {
                            Id = new Guid("f0f15d5b-4f6f-497d-880a-3cf5d5b0d0a9"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 3, 10, 15, 21, 7, 201, DateTimeKind.Local).AddTicks(1977),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "b593975e-eb7d-4ba8-a3f8-2dd2e81fdc19",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 201, DateTimeKind.Local).AddTicks(1975),
                            Email = "ibrahim.sahin27@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "77655468288",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 201, DateTimeKind.Local).AddTicks(1984),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.SAHIN27@DEMIR.COM",
                            NormalizedUserName = "IBRAHIM.SAHIN27@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "ibrahim.sahin@yandex.com",
                            PhoneNumber = "+905631090202",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "39DP72HUV12FFGEJES0S6T6JZFSWEGSS",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.sahin27@demir.com"
                        },
                        new
                        {
                            Id = new Guid("350fe8c1-ff17-4e3c-ba00-8c8e943138e6"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 11, 25, 15, 21, 7, 207, DateTimeKind.Local).AddTicks(1834),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "8e55f717-7409-463c-ac42-2c8e272f6ea6",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 207, DateTimeKind.Local).AddTicks(1825),
                            Email = "huseyin.yildiz28@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "53657440880",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 207, DateTimeKind.Local).AddTicks(1848),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.YILDIZ28@DEMIR.COM",
                            NormalizedUserName = "HUSEYIN.YILDIZ28@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "huseyin.yildiz@google.com",
                            PhoneNumber = "+905374059111",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "F1LILBW8M5MO9TNWLU5ZXNM8ZJPN2GH6",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.yildiz28@demir.com"
                        },
                        new
                        {
                            Id = new Guid("d62d6f0f-4c47-4d2f-a8c3-20418ec9d7af"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2044, 4, 11, 15, 21, 7, 213, DateTimeKind.Local).AddTicks(3661),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "25a5de41-66ad-4580-a7ee-98e1eccbfd99",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 213, DateTimeKind.Local).AddTicks(3650),
                            Email = "mehmet.celik29@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "43247268062",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 213, DateTimeKind.Local).AddTicks(3676),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.CELIK29@DEMIR.COM",
                            NormalizedUserName = "MEHMET.CELIK29@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "mehmet.celik@yandex.com",
                            PhoneNumber = "+905377834424",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "9UMTWNCS7WGA7KTNNLP3XZZI1W7QB8MX",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.celik29@demir.com"
                        },
                        new
                        {
                            Id = new Guid("77582294-970b-4a47-adc2-16b4d6adc582"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 3, 20, 15, 21, 7, 219, DateTimeKind.Local).AddTicks(701),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "07dfcf48-202f-492c-b93f-046de2873211",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 219, DateTimeKind.Local).AddTicks(700),
                            Email = "hasan.yilmaz30@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "30447103552",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 219, DateTimeKind.Local).AddTicks(710),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILMAZ30@DEMIR.COM",
                            NormalizedUserName = "HASAN.YILMAZ30@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "hasan.yilmaz@outlook.com",
                            PhoneNumber = "+905661068402",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "TENQCOMM3ZK0R2QLZSD428WFN1VMA30W",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yilmaz30@demir.com"
                        },
                        new
                        {
                            Id = new Guid("ae40629f-41ee-4322-bc0d-9d8a01b8b219"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2056, 3, 12, 15, 21, 7, 224, DateTimeKind.Local).AddTicks(7826),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "fb265b34-960d-41d9-80d3-4e7a387ed790",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 224, DateTimeKind.Local).AddTicks(7825),
                            Email = "yusuf.yildirim31@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "30820314292",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 224, DateTimeKind.Local).AddTicks(7834),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILDIRIM31@DEMIR.COM",
                            NormalizedUserName = "YUSUF.YILDIRIM31@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "yusuf.yildirim@yahoo.com",
                            PhoneNumber = "+905694056912",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "HGOGMNKMRUATSSRH5UEPJDH30FZ06SRC",
                            Status = 1,
                            Surname = "Yıldırım",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yildirim31@demir.com"
                        },
                        new
                        {
                            Id = new Guid("b559ecf2-5837-44e4-b6d3-21f74dd403bd"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 11, 15, 15, 21, 7, 230, DateTimeKind.Local).AddTicks(8231),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "29b4c575-397a-45cd-a297-cd93700b4947",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 230, DateTimeKind.Local).AddTicks(8225),
                            Email = "huseyin.aydin32@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "28150834764",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 230, DateTimeKind.Local).AddTicks(8246),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.AYDIN32@DEMIR.COM",
                            NormalizedUserName = "HUSEYIN.AYDIN32@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "huseyin.aydin@google.com",
                            PhoneNumber = "+905105098824",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "479AAQ3M1AGNCC7RNW67G3CTR5ZW12KV",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.aydin32@demir.com"
                        },
                        new
                        {
                            Id = new Guid("4ba14c70-7b2a-4d64-8502-aa00f2b2250c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 5, 4, 15, 21, 7, 236, DateTimeKind.Local).AddTicks(6058),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "70d300fd-6be0-4aab-ae49-2147faeaef71",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 236, DateTimeKind.Local).AddTicks(6057),
                            Email = "ahmet.yildiz33@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "40258088870",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 236, DateTimeKind.Local).AddTicks(6066),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIZ33@DEMIR.COM",
                            NormalizedUserName = "AHMET.YILDIZ33@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "ahmet.yildiz@yandex.com",
                            PhoneNumber = "+905930814530",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "S7EQXTDVR6MOI8RAY2SJQ3FPUW3995L6",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildiz33@demir.com"
                        },
                        new
                        {
                            Id = new Guid("4b9f1e80-0452-408c-92a1-25cf09804f90"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 6, 24, 15, 21, 7, 242, DateTimeKind.Local).AddTicks(4157),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "6635423c-b72b-4700-8c0a-bba019967472",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 242, DateTimeKind.Local).AddTicks(4153),
                            Email = "ahmet.demir34@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "18787711538",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 242, DateTimeKind.Local).AddTicks(4166),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.DEMIR34@DEMIR.COM",
                            NormalizedUserName = "AHMET.DEMIR34@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "ahmet.demir@google.com",
                            PhoneNumber = "+905378759190",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "CTYIVY0FF209V16KORB2KRTIDXDQWD9M",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.demir34@demir.com"
                        },
                        new
                        {
                            Id = new Guid("5ae3bfa6-f5a4-4203-860a-be529885d4b2"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 8, 13, 15, 21, 7, 248, DateTimeKind.Local).AddTicks(5042),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "31badd8f-f37e-42d8-b23d-be889559fe30",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 248, DateTimeKind.Local).AddTicks(5031),
                            Email = "mustafa.yilmaz35@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "20483784174",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 248, DateTimeKind.Local).AddTicks(5099),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILMAZ35@DEMIR.COM",
                            NormalizedUserName = "MUSTAFA.YILMAZ35@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "mustafa.yilmaz@yahoo.com",
                            PhoneNumber = "+905665143598",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "THA95PEK7A428EHS5O4TAITSDZWZ79XJ",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yilmaz35@demir.com"
                        },
                        new
                        {
                            Id = new Guid("c677549f-0915-4ba0-bd68-4c12a2351952"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 7, 6, 15, 21, 7, 254, DateTimeKind.Local).AddTicks(2178),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "316fbde1-a16b-450d-88bc-9bc30e8a7e11",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 254, DateTimeKind.Local).AddTicks(2177),
                            Email = "ali.demir36@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "52256070276",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 254, DateTimeKind.Local).AddTicks(2186),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.DEMIR36@DEMIR.COM",
                            NormalizedUserName = "ALI.DEMIR36@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "ali.demir@google.com",
                            PhoneNumber = "+905338622744",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "X41FM9WQ7TC8A78J3FZJV0W62B76BZXK",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "ali.demir36@demir.com"
                        },
                        new
                        {
                            Id = new Guid("4c245d7e-1d56-4ccd-90b5-aad9d60af99f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2044, 4, 8, 15, 21, 7, 260, DateTimeKind.Local).AddTicks(1119),
                            BloodGroup = 6,
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            ConcurrencyStamp = "ba0999a8-1fb2-4d65-aebe-63c32581565e",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 260, DateTimeKind.Local).AddTicks(1107),
                            Email = "hasan.celik37@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "41088054370",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 260, DateTimeKind.Local).AddTicks(1133),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.CELIK37@DEMIR.COM",
                            NormalizedUserName = "HASAN.CELIK37@DEMIR.COM",
                            PatronId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            PersonalEmail = "hasan.celik@yahoo.com",
                            PhoneNumber = "+905434628574",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            SecurityStamp = "J50Z4E51YR6JNWKUGUL5VF5LY4ZVQAH6",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.celik37@demir.com"
                        },
                        new
                        {
                            Id = new Guid("c69450ad-8255-4686-9721-6bf51633b160"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 11, 12, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(524),
                            BloodGroup = 6,
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            ConcurrencyStamp = "be550ad0-fe21-4574-9bf5-94f888f41755",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(522),
                            Email = "ali.demir38@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "32114127168",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(533),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.DEMIR38@DEMIR.COM",
                            NormalizedUserName = "ALI.DEMIR38@DEMIR.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENl28/UGHAm+aX94glQHtsXmHWeKl4+X9B/S95vQTQ40i3p/dDqjVZhKd/99nAnqvg==",
                            PatronId = new Guid("c69450ad-8255-4686-9721-6bf51633b160"),
                            PersonalEmail = "ali.demir@yahoo.com",
                            PhoneNumber = "+905962945477",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("f3b7b0ea-f881-4976-9e9c-cdfef6f84fbf"),
                            SecurityStamp = "N2CBTKZB4HPFTJ0DKUEDILWH6J7WCDFF",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("735bb164-231a-445c-9b37-320810e96cef"),
                            TwoFactorEnabled = false,
                            UserName = "ali.demir38@demir.com"
                        },
                        new
                        {
                            Id = new Guid("e5216ea2-f6ec-4952-8386-e06bc3f8d21d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 9, 23, 15, 21, 7, 271, DateTimeKind.Local).AddTicks(7803),
                            BloodGroup = 6,
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            ConcurrencyStamp = "790f7ef2-f891-44ee-be41-4a8cc664b98a",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 271, DateTimeKind.Local).AddTicks(7801),
                            Email = "ismail.aydin39@demir.com",
                            EmailConfirmed = false,
                            IdentityNumber = "44573162710",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 271, DateTimeKind.Local).AddTicks(7809),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.AYDIN39@DEMIR.COM",
                            NormalizedUserName = "ISMAIL.AYDIN39@DEMIR.COM",
                            PatronId = new Guid("c69450ad-8255-4686-9721-6bf51633b160"),
                            PersonalEmail = "ismail.aydin@hotmail.com",
                            PhoneNumber = "+905721079614",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("6174100b-cad5-43ef-859c-94ab0d350b9c"),
                            SecurityStamp = "FOA566F3YKZ2B5I9JNYNQ33W6NRMDU0E",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("735bb164-231a-445c-9b37-320810e96cef"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.aydin39@demir.com"
                        },
                        new
                        {
                            Id = new Guid("420ec281-8dfc-4a30-bbd0-ec5ce059a1d6"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2057, 10, 15, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6893),
                            BloodGroup = 6,
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            ConcurrencyStamp = "67f3c665-95bf-429b-b051-72d558f17e52",
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6891),
                            Email = "yusuf.ozturk40@ozturk.com",
                            EmailConfirmed = false,
                            IdentityNumber = "74345186200",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6901),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.OZTURK40@OZTURK.COM",
                            NormalizedUserName = "YUSUF.OZTURK40@OZTURK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP+kEmo//wRKBPpCd2d9I9VJXuLrMiUBTk5A1MS5DMQF7j0xC3BTx4FQHH8NcF0o7Q==",
                            PatronId = new Guid("420ec281-8dfc-4a30-bbd0-ec5ce059a1d6"),
                            PersonalEmail = "yusuf.ozturk@outlook.com",
                            PhoneNumber = "+905521633650",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("2683fca0-1500-4930-a1fc-625c70d5f80e"),
                            SecurityStamp = "9S4TLKL1NQU6I58FVO1N9VMLLU2UTARC",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("0f7b9433-fdbe-41e0-9e2c-b3a66f855370"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.ozturk40@ozturk.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvanceToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("InstallmentCount")
                        .HasColumnType("int");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceToId");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("491c53fb-7e75-4623-95c3-6932736a1f8c"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(485),
                            Email = "hrapp@gmail.com",
                            Name = "HRApp A.Ş.",
                            NumberOfEmployees = 1,
                            PhoneNumber = "+905555555555",
                            SectorId = new Guid("f48939c2-4df2-46ac-b052-1f797cebc079"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8705),
                            Email = "info@Aydın.com",
                            Name = "Aydın Komandit Şirketi",
                            NumberOfEmployees = 6,
                            PhoneNumber = "+905320130022",
                            SectorId = new Guid("e6395c55-3d81-4d4b-8cd4-5dddbcc76ac9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9817),
                            Email = "info@Aydın.com",
                            Name = "Aydın Limited Şirketi",
                            NumberOfEmployees = 10,
                            PhoneNumber = "+905445485000",
                            SectorId = new Guid("ac549283-9c4e-44b6-a801-3d8c169b75f8"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(6955),
                            Email = "info@Yılmaz.com",
                            Name = "Yılmaz Kollektif Şirketi",
                            NumberOfEmployees = 9,
                            PhoneNumber = "+905555445250",
                            SectorId = new Guid("cb332685-3d1f-4b5a-8c06-126358aa3933"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4890),
                            Email = "info@Demir.com",
                            Name = "Demir Kollektif Şirketi",
                            NumberOfEmployees = 12,
                            PhoneNumber = "+905598518168",
                            SectorId = new Guid("e6395c55-3d81-4d4b-8cd4-5dddbcc76ac9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(410),
                            Email = "info@Demir.com",
                            Name = "Demir Kollektif Şirketi",
                            NumberOfEmployees = 2,
                            PhoneNumber = "+905413955440",
                            SectorId = new Guid("e6395c55-3d81-4d4b-8cd4-5dddbcc76ac9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6837),
                            Email = "info@Öztürk.com",
                            Name = "Öztürk Anonim Şirketi",
                            NumberOfEmployees = 1,
                            PhoneNumber = "+905194780290",
                            SectorId = new Guid("0f040952-18ef-434f-bb2c-f0246f9af9ed"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeaveDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ApprovedById");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Professions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cf5f02a-abfc-494a-972f-5ebc6730d6d0"),
                            CompanyId = new Guid("491c53fb-7e75-4623-95c3-6932736a1f8c"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(494),
                            Name = "Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("72ee09f0-8c56-4d17-838d-aee2bc3abfdc"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8726),
                            Name = "Librarian",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b7bff893-ff74-41cc-ad42-866243bc36d6"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8730),
                            Name = "Scientist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f242bd5c-86e7-4185-a6fd-2d7249f5fc52"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8732),
                            Name = "Veterinary doctor(Vet)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b070b405-067e-4596-8597-094d8312c930"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8736),
                            Name = "Dancer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9744520c-cf0d-4528-a166-6218e9af2a03"),
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9845),
                            Name = "Newsreader",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("186c06ef-fd33-40ec-a4dd-5261392a611f"),
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9850),
                            Name = "Travel agent",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("599d587d-da26-410c-a17d-557d82577dbc"),
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9852),
                            Name = "Artist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4bba6b3a-cc56-4a3d-8c19-6e9c28ffd7d7"),
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(6976),
                            Name = "Taxi driver",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e9a2ff85-922c-47bb-be28-f3bc386abb47"),
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(7032),
                            Name = "Travel agent",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("329c0993-ef54-408e-a63a-0e13f18486ab"),
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4917),
                            Name = "Politician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6b35dbbb-3b1a-4b80-8c51-b8bea094486f"),
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4923),
                            Name = "Veterinary doctor(Vet)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6174100b-cad5-43ef-859c-94ab0d350b9c"),
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(438),
                            Name = "Tailor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f3b7b0ea-f881-4976-9e9c-cdfef6f84fbf"),
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(442),
                            Name = "Travel agent",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("250096d2-cd8e-4707-9178-33db614f55fd"),
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(445),
                            Name = "Businessman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e76f3f05-05db-48ba-99dc-0771d8857927"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6856),
                            Name = "Architect",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2683fca0-1500-4930-a1fc-625c70d5f80e"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6858),
                            Name = "Optician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d95460ba-41ec-47ef-bae2-cd14ae39a12e"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6861),
                            Name = "Translator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1eb9f494-f739-41be-a01e-f7f89e801fd6"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6863),
                            Name = "Veterinary doctor(Vet)",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56673078-ed77-4644-8f33-75fe6152aa89"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(432),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f48939c2-4df2-46ac-b052-1f797cebc079"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(443),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7dc2f156-043e-4ded-85fa-ebc9510bcfc6"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(445),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1c82c712-e462-43f9-90f6-f21463a2913f"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(446),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("902955b9-c884-445b-9972-a18275d6faaf"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(447),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3f793886-9412-41ff-8504-12fda2fe9059"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(450),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bd692903-3476-402b-9fd6-7a721970ac2b"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(455),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("29a72054-fa36-4ab2-9fef-7033328103c1"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(456),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d306a5ce-0ae2-4afe-903c-a663abfb38a2"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(457),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e3d3b6af-5afe-40ea-b052-621bd8abd147"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(459),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3c67fb60-1716-4696-98eb-200da769f5d0"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(461),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2df1c098-52d8-42b5-89e4-a3fca272f69a"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(462),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0f040952-18ef-434f-bb2c-f0246f9af9ed"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(463),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a32782c8-8958-4683-bec3-987f49d4346a"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(465),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e6395c55-3d81-4d4b-8cd4-5dddbcc76ac9"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(468),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("97a3cc48-5c0b-4ad9-85ff-c3f84bcda13d"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(470),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cb332685-3d1f-4b5a-8c06-126358aa3933"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(471),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8a782ed8-cd0e-4fd2-877a-35d28c9d569e"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(473),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92c309dd-fb08-4e79-b701-714e7e30b898"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(474),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("20153450-cefa-44c1-be30-46e6e7a2ac13"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(476),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ac549283-9c4e-44b6-a801-3d8c169b75f8"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(477),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("df52ae8f-5a0d-4324-bacb-fca1b5b88b52"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(478),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0c859a69-ec31-4ab1-aaf9-271e20871acd"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(481),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("82f8afc7-ecbd-4372-bd1c-eaf1049f488e"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(482),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("213173e9-120c-41d8-9cc2-8b4cc5d0b920"),
                            CompanyId = new Guid("491c53fb-7e75-4623-95c3-6932736a1f8c"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 39, DateTimeKind.Local).AddTicks(490),
                            Name = "CTO",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1937bb0f-1a57-4f06-aacd-56252b283b65"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8716),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6bd790b7-38bb-4543-8eba-07ae5571ff8b"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8721),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f518d54f-7912-444f-83ca-54bfcd3ad1ec"),
                            CompanyId = new Guid("d4fa4d98-dfe1-46ec-b6ea-2c9306b851c4"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 44, DateTimeKind.Local).AddTicks(8723),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("28f5c387-4ec4-4fc1-a3bb-bd13c8dc35e8"),
                            CompanyId = new Guid("d6e792f2-c992-468a-a4fa-c07f552b9971"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 79, DateTimeKind.Local).AddTicks(9830),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a1c62a12-a739-48b8-91fc-643e13f1d8fc"),
                            CompanyId = new Guid("41e8e9e1-0d8d-47b5-a794-449367e713f0"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 143, DateTimeKind.Local).AddTicks(6969),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("11eaa0e0-ec2a-4e50-8985-927c4254e465"),
                            CompanyId = new Guid("1f8f49cc-62f2-4d3a-8d08-502b7a6b6e90"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 195, DateTimeKind.Local).AddTicks(4909),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("735bb164-231a-445c-9b37-320810e96cef"),
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(425),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("41565cad-8a52-4881-a417-37823d62f261"),
                            CompanyId = new Guid("87bf7d92-a661-47fa-b1ff-8300dab57f02"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 266, DateTimeKind.Local).AddTicks(432),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0f7b9433-fdbe-41e0-9e2c-b3a66f855370"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6843),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6b9998e0-26dd-47dd-8409-44ac2eabc781"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6846),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cf327271-8463-4d52-95f9-c800574e97f0"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6851),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ea37bb3f-f6a8-4c48-9706-09f25509f9d6"),
                            CompanyId = new Guid("97b0e12c-a4db-4432-91fb-fe36ad944734"),
                            CreateDate = new DateTime(2023, 6, 8, 15, 21, 7, 277, DateTimeKind.Local).AddTicks(6853),
                            Name = "Contract Administrator",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d023341d-79ee-41aa-a5de-05d399e23b86"),
                            ConcurrencyStamp = "Z9ZV0KIPN7R3XNZIMIXJE7DY5AC7K51D",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c"),
                            ConcurrencyStamp = "6MTQKLQK80Z4X49I5W06GNBEP5PGQH1Q",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16"),
                            ConcurrencyStamp = "Y99IVM35FTRSD3J9CRQNP9XFGEGKJFWT",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a8fc4846-781e-43ef-b497-d65a03a24c13"),
                            RoleId = new Guid("d023341d-79ee-41aa-a5de-05d399e23b86")
                        },
                        new
                        {
                            UserId = new Guid("d6e5ecf6-9a2f-4697-a866-c2cfc329904b"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        },
                        new
                        {
                            UserId = new Guid("ecb88725-60fc-46f9-946e-23847081e03a"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("9af8dd3d-37a1-48a1-a68e-8722c1002fe0"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("b14817d6-dc46-4a60-a097-fafa8d200a0d"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("6f606b4a-2d61-46a4-af52-882ea9036e93"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("9b190eed-6be5-47cb-a718-6d66da6cc5dc"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("ff6ae3ec-1b31-45ba-ad66-d1385f3e2ef8"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        },
                        new
                        {
                            UserId = new Guid("827d6181-263d-4cc8-880d-87d283977af0"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("20cf81da-3860-4f15-bfcb-b975de90d12b"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("0ba9cdac-85a4-40c2-8e36-ab49d8a59ffc"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("04b6cea1-c5cc-419a-9095-78b5d854e29f"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("3b881add-90b3-4bd5-9574-a734bdbd994d"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("1237f713-102a-4200-9a34-4f6cfd051273"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("3f32a1b6-232c-497c-ac83-f03f34ccd0c1"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("c584c492-d257-446d-ba52-c5aa1387f08e"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("688194a6-c658-468c-acb8-07c5a3e72835"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("6351578f-4937-4215-af1b-69d403431b03"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        },
                        new
                        {
                            UserId = new Guid("20ce1ff7-1ab2-4670-b1de-efd5a758cf80"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("48f2f70f-db65-4f49-a430-d9ea05076480"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("91c8e121-5fb2-4d99-bd46-47b2e00db209"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("6328ac0c-1719-4bb2-8fac-ead6c2d03d15"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("ef773520-5624-4bac-829a-e3923ab9e8bb"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("308549b7-afa7-46ef-9133-d15bbeebd18c"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("4496c9f3-c1bf-4c71-9386-189c24aa9b8a"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("dfcb59d4-08b9-4fcf-a17d-87424ad7540b"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("d3ba67ed-566e-460e-aa23-62732c375159"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        },
                        new
                        {
                            UserId = new Guid("f0f15d5b-4f6f-497d-880a-3cf5d5b0d0a9"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("350fe8c1-ff17-4e3c-ba00-8c8e943138e6"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("d62d6f0f-4c47-4d2f-a8c3-20418ec9d7af"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("77582294-970b-4a47-adc2-16b4d6adc582"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("ae40629f-41ee-4322-bc0d-9d8a01b8b219"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("b559ecf2-5837-44e4-b6d3-21f74dd403bd"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("4ba14c70-7b2a-4d64-8502-aa00f2b2250c"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("4b9f1e80-0452-408c-92a1-25cf09804f90"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("5ae3bfa6-f5a4-4203-860a-be529885d4b2"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("c677549f-0915-4ba0-bd68-4c12a2351952"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("4c245d7e-1d56-4ccd-90b5-aad9d60af99f"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("c69450ad-8255-4686-9721-6bf51633b160"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        },
                        new
                        {
                            UserId = new Guid("e5216ea2-f6ec-4952-8386-e06bc3f8d21d"),
                            RoleId = new Guid("407c9a61-6fb8-467d-8d61-7868947d1c16")
                        },
                        new
                        {
                            UserId = new Guid("420ec281-8dfc-4a30-bbd0-ec5ce059a1d6"),
                            RoleId = new Guid("9cb6c260-d902-496d-b625-131487ec9b6c")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Address", "Address")
                        .WithOne("AppUser")
                        .HasForeignKey("IKApplication.Domain.Entites.AppUser", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Patron")
                        .WithMany("Employees")
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IKApplication.Domain.Entites.Profession", "Profession")
                        .WithMany("AppUsers")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Patron");

                    b.Navigation("Profession");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AdvanceTo")
                        .WithMany("CashAdvances")
                        .HasForeignKey("AdvanceToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("ApproveCashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceTo");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveExpenses")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveLeaves")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("ApprovedBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Professions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Report", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Creator")
                        .WithMany("Reports")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Navigation("AppUser")
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("ApproveCashAdvances");

                    b.Navigation("ApproveExpenses");

                    b.Navigation("ApproveLeaves");

                    b.Navigation("CashAdvances");

                    b.Navigation("Employees");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Professions");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
