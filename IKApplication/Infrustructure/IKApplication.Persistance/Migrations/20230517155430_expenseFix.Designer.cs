// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230517155430_expenseFix")]
    partial class expenseFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae4debf9-8d08-4d9d-8a56-3a3e7393e8eb"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2065, 5, 11, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7272),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            ConcurrencyStamp = "ce6d08b7-bc92-4252-9b63-0ae321923b08",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7269),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "27233514524",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENl5qJRBwW1BhFb9Mjsp9UyrvUjGJLm0ZVEjYJGnebg6q+GzbB3lkOQ/4hfr7uCcCw==",
                            PhoneNumber = "+905688134079",
                            PhoneNumberConfirmed = false,
                            Profession = "Fireman/Fire fighter",
                            SecurityStamp = "G1HYBDBB1VOIARZZR2CZL8065A2CIA98",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("e46a3ffa-3ce7-4555-966f-0605ec8d7e91"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("552fc1e4-f1cd-40c0-9e4a-da453911a08c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 1, 5, 18, 54, 30, 573, DateTimeKind.Local).AddTicks(928),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            ConcurrencyStamp = "d63d286c-d6af-4617-85a9-23f5d8d1a13d",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 573, DateTimeKind.Local).AddTicks(926),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "63683811646",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMmiquQj5nKFSqX3REEdvI4Lq+ysFI0qys/kKzYfSL76i0CKOTaL3xh7rj4k/t6XJA==",
                            PhoneNumber = "+905445781664",
                            PhoneNumberConfirmed = false,
                            Profession = "Baker",
                            SecurityStamp = "R5949IZB32U4M1U0SEW7YU24XKHVHHF8",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("e67bc954-cf26-4075-ad69-9b07c362dd05"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("442e0300-e362-40eb-adbf-59c6014b3263"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 3, 29, 18, 54, 30, 574, DateTimeKind.Local).AddTicks(4460),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            ConcurrencyStamp = "e9da5c99-f218-4e47-8068-f51b55661823",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 574, DateTimeKind.Local).AddTicks(4458),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "16546318554",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDT4tDoxJxf1IbZqc6kVj1pPjvTh01T6let0ZkVLNiLx6KRJY8BipV5AsaM+2JR0tg==",
                            PhoneNumber = "+905526569099",
                            PhoneNumberConfirmed = false,
                            Profession = "Chef/Cook",
                            SecurityStamp = "SE7X5MO5G64G736Q0RYJZJ3Z2DN74KDG",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("66064dc4-0fe2-4199-b0f2-5001a76dda9c"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("d6b1e09f-0b00-4376-a911-cae5a130be21"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 6, 4, 18, 54, 30, 575, DateTimeKind.Local).AddTicks(7962),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            ConcurrencyStamp = "50b2ff4a-1db1-409e-8818-5a56e3a6a5fc",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 575, DateTimeKind.Local).AddTicks(7961),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "42624532086",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC6x2KqC6DtDF1SD98GCimMJ57R75LaFpPI9bLPLVH9HCKKfSxQ721PpPrS5fmbDWA==",
                            PhoneNumber = "+905916155493",
                            PhoneNumberConfirmed = false,
                            Profession = "Electrician",
                            SecurityStamp = "5L4LZKGA8YYKYNP635GCJ59V8UHYOTSJ",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("e46a3ffa-3ce7-4555-966f-0605ec8d7e91"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("7be0ce55-0f35-4a92-95e6-aa438d744525"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 12, 3, 18, 54, 30, 577, DateTimeKind.Local).AddTicks(1709),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            ConcurrencyStamp = "32193589-3daa-4691-bebe-04a1c3cab16e",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 577, DateTimeKind.Local).AddTicks(1706),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "81702767828",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEB+AHkXvAnTPoA3hNqkNFVoLJlOm6jS+JLAU5rJub0xjkspAishMTbyGPkhaQow9nA==",
                            PhoneNumber = "+905828893862",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "E7J53Z52KWG7A4Q8R3CLJUYGZKUTH26H",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("648da832-89f7-4f1b-80d9-ee72a5de2aec"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("1bde8fad-93b8-4200-bcb5-45bb4669a0b7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2060, 10, 27, 18, 54, 30, 578, DateTimeKind.Local).AddTicks(5592),
                            CompanyId = new Guid("9bdfbdf2-81d0-4f21-a1d7-bb099852efa0"),
                            ConcurrencyStamp = "421f75c9-09ac-465c-88e1-09981ccec0b5",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 578, DateTimeKind.Local).AddTicks(5589),
                            Email = "osman.celik@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "15805608238",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.CELIK@OUTLOOK.COM",
                            NormalizedUserName = "OSMAN.CELIK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE330wb6sP3kw4ZrJmJOMF53nQIRGvX3qVo3nNr5INEO0KiFUSW4Q54NkHiyjQGECA==",
                            PhoneNumber = "+905417036372",
                            PhoneNumberConfirmed = false,
                            Profession = "Politician",
                            SecurityStamp = "IVO6ZWRKRQ2BMGOY4PIH82QOOOE695DN",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("21abe347-3ac0-4370-8ecd-8d4892c50f48"),
                            TwoFactorEnabled = false,
                            UserName = "osman.celik@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("8f275260-4249-4a04-8380-e32f2f7a883c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 12, 1, 18, 54, 30, 579, DateTimeKind.Local).AddTicks(9032),
                            CompanyId = new Guid("1c6a0fd5-8a98-44de-9be3-42ba1f8a2624"),
                            ConcurrencyStamp = "72e4f6e2-80e7-4e33-b411-fdf8d68bd3e0",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 579, DateTimeKind.Local).AddTicks(9031),
                            Email = "hasan.demir@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "62500213694",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.DEMIR@OUTLOOK.COM",
                            NormalizedUserName = "HASAN.DEMIR@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN+DgnDfNpPLJLE1/CrdxMraCjW6RxaqPHT9kDNI0TGKWTWb/ZfbPgvE/v15tWFh1Q==",
                            PhoneNumber = "+905746431935",
                            PhoneNumberConfirmed = false,
                            Profession = "Hairdresser",
                            SecurityStamp = "8CHHVAKAYZQRZ0HUEPS7JWZ3UPDXZYJ5",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("49809b9a-0a60-4751-b90b-f3cb35619eb2"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.demir@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("4b40736d-4b14-46d4-8621-fed8c14c7e93"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 3, 15, 18, 54, 30, 581, DateTimeKind.Local).AddTicks(2606),
                            CompanyId = new Guid("f87aa45c-282d-42d6-9e84-b1690004c9ac"),
                            ConcurrencyStamp = "19dcb8d4-7a8a-4dda-95df-0e4fbf378fbe",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 581, DateTimeKind.Local).AddTicks(2605),
                            Email = "ali.ozdemir@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "41053278336",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.OZDEMIR@YAHOO.COM",
                            NormalizedUserName = "ALI.OZDEMIR@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKKB0rNqjp1kIGJHPr00MHFNnKIypAsgu6RcZ0J+tJgqq7Jg4wwuh71JHc44tPCdsg==",
                            PhoneNumber = "+905783923045",
                            PhoneNumberConfirmed = false,
                            Profession = "Lawyer",
                            SecurityStamp = "5326K46A6IQN5YDRZXNJ2UMQ2EBA6S56",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("cd85f944-881c-4643-bb8b-2503469720a1"),
                            TwoFactorEnabled = false,
                            UserName = "ali.ozdemir@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("ee4fc5aa-8731-4359-bd97-f28c2d679f54"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2057, 8, 15, 18, 54, 30, 582, DateTimeKind.Local).AddTicks(6132),
                            CompanyId = new Guid("3bc14794-acbf-4da5-8290-1a3c4b9c1b80"),
                            ConcurrencyStamp = "bd28f1bd-37c7-4a61-ace5-17b96e3af8d2",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 582, DateTimeKind.Local).AddTicks(6131),
                            Email = "ibrahim.yilmaz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "88837347222",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILMAZ@GOOGLE.COM",
                            NormalizedUserName = "IBRAHIM.YILMAZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAFEkzUwU7LHQuLAwnu/5RSQMYqVlRwEpcjHfHXKJ61UXpuoF86xtff3JENoY3KDrw==",
                            PhoneNumber = "+905268491750",
                            PhoneNumberConfirmed = false,
                            Profession = "Cleaner",
                            SecurityStamp = "Z1VBK9LIR1ANDR02WBM5IBM75XNU1DPG",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("50bad660-a1c8-4342-b340-4bdba4234560"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yilmaz@google.com"
                        },
                        new
                        {
                            Id = new Guid("ef438a07-a60d-4cd7-b08c-f2739de09cf4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 1, 29, 18, 54, 30, 583, DateTimeKind.Local).AddTicks(9531),
                            CompanyId = new Guid("71c334c9-c0c8-49f7-847a-829af84c46c8"),
                            ConcurrencyStamp = "df194d57-b32b-4887-8418-81f4a44ecd9d",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 583, DateTimeKind.Local).AddTicks(9530),
                            Email = "huseyin.kaya@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "36265057688",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.KAYA@OUTLOOK.COM",
                            NormalizedUserName = "HUSEYIN.KAYA@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBNxZYYOOWjIW7QqGNmfDjKlrIt1sOYIbgFcATijmNTA9cw71LHXeZKTbCvg+yDh1w==",
                            PhoneNumber = "+905978431955",
                            PhoneNumberConfirmed = false,
                            Profession = "Artist",
                            SecurityStamp = "KWV2T5HGGTVW01G704BNUUL6L95PG4V5",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("4823e46f-4bea-42ed-bba2-3369ff01f13b"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.kaya@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("05c382d2-0112-4410-9f0c-1f6133ae1ebe"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 4, 16, 18, 54, 30, 585, DateTimeKind.Local).AddTicks(3139),
                            CompanyId = new Guid("0492de86-03f9-47d6-9b3b-90d7bec20aad"),
                            ConcurrencyStamp = "558cac69-8cf8-4652-a6c0-ef7afa65c658",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 585, DateTimeKind.Local).AddTicks(3138),
                            Email = "huseyin.yildirim@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "67638061636",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.YILDIRIM@GOOGLE.COM",
                            NormalizedUserName = "HUSEYIN.YILDIRIM@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKNx/BqdzzW/E4uHVOkbqyPEprDSmwXMZhiBkNM9ilyWaIBOwPA5TRhmcD9LXchFQA==",
                            PhoneNumber = "+905980603296",
                            PhoneNumberConfirmed = false,
                            Profession = "Veterinary doctor(Vet)",
                            SecurityStamp = "N8GIL3RM8OPT3AYD1DMPXBAMOFXI5XIC",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("0379e912-28cd-4d84-b524-45cb18734aef"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.yildirim@google.com"
                        },
                        new
                        {
                            Id = new Guid("47c75cb6-0d05-453a-b780-ea471e175512"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2058, 8, 13, 18, 54, 30, 586, DateTimeKind.Local).AddTicks(6834),
                            CompanyId = new Guid("a2163d66-55a5-48ff-94b8-9c6c75db4334"),
                            ConcurrencyStamp = "738f263e-4c88-48a3-ba53-5034773b0ba6",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 586, DateTimeKind.Local).AddTicks(6832),
                            Email = "mustafa.celik@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "56880484508",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.CELIK@OUTLOOK.COM",
                            NormalizedUserName = "MUSTAFA.CELIK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBpyADiPoZZ5dAz5MYSOOhEMHpANeh4oGtQmvGfTRXeuzDCXHCp/h3PNq0F4fPeEDg==",
                            PhoneNumber = "+905332369714",
                            PhoneNumberConfirmed = false,
                            Profession = "Teacher",
                            SecurityStamp = "A2PUR739IXCNK77HWC2KCM1AB6JXFI21",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("313d90f6-4858-4dc4-9858-040784c72329"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.celik@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("fe004e02-4a7b-4439-b8b7-996967e8e1af"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 1, 25, 18, 54, 30, 588, DateTimeKind.Local).AddTicks(347),
                            CompanyId = new Guid("ed277d2d-929d-430f-a58d-8743579f714d"),
                            ConcurrencyStamp = "ae74372c-3565-4c13-98ec-f0a509953c39",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 588, DateTimeKind.Local).AddTicks(346),
                            Email = "mehmet.sahin@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "82512041542",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.SAHIN@OUTLOOK.COM",
                            NormalizedUserName = "MEHMET.SAHIN@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAFWWJ+VBqE8EDZ4UBp2kTtP16Muja8eKeaOWTQyfjfIUhI3LGNNyu5XNxklutiGvA==",
                            PhoneNumber = "+905803217031",
                            PhoneNumberConfirmed = false,
                            Profession = "Designer",
                            SecurityStamp = "NBOPLXUJHBRROXUPWU7PBSUO7VAJD3L0",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("fe2057fa-023c-4f36-b3e2-b9b0b40805c9"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.sahin@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("26371c2a-2a09-49d4-8f8c-6e53875f67c7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 6, 15, 18, 54, 30, 589, DateTimeKind.Local).AddTicks(3897),
                            CompanyId = new Guid("bef292cb-0219-4ab6-9e2d-cfa484e32518"),
                            ConcurrencyStamp = "4d6f0979-4440-4aa5-a9ea-0c42c4e2efa3",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 589, DateTimeKind.Local).AddTicks(3896),
                            Email = "ismail.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "43377275312",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "ISMAIL.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE72y/aVU5toN0fxAB+snygYSJzQPgyZjVmFd5/Ko4gWfEm3GFVQY8NSoEAJsch/8A==",
                            PhoneNumber = "+905237054081",
                            PhoneNumberConfirmed = false,
                            Profession = "Taxi driver",
                            SecurityStamp = "U12VQQ6V999FVRH12GKNWFU7CCGGH79M",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("9af97c85-6c39-44d2-b398-3c4d0cc9c39f"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("7f435165-d8d8-4b81-a6ba-9275645681d7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2050, 12, 4, 18, 54, 30, 590, DateTimeKind.Local).AddTicks(7690),
                            CompanyId = new Guid("4947e306-503c-4c10-9b1b-8c9941daf0ee"),
                            ConcurrencyStamp = "ec4f5367-05cd-479d-b7ae-96c23bcba4a4",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 590, DateTimeKind.Local).AddTicks(7688),
                            Email = "mehmet.aydin@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "14337466330",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.AYDIN@YANDEX.COM",
                            NormalizedUserName = "MEHMET.AYDIN@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJxRD+4D/rH4OskftuRfYjpHMYF+0VE6hxL8lP0x8rrs7aIm+PyfJyUu39UBc2BB7A==",
                            PhoneNumber = "+905146214009",
                            PhoneNumberConfirmed = false,
                            Profession = "Traffic warden",
                            SecurityStamp = "B99CG1XLT1U10WVMPCUH9SVVWYJP0W3F",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("f7acb68c-0aa8-48c1-9328-845a51e32325"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.aydin@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("43e8bdbd-9b7a-4bde-9141-07d30c0134bf"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2049, 1, 24, 18, 54, 30, 592, DateTimeKind.Local).AddTicks(1342),
                            CompanyId = new Guid("9f9442ac-121d-452a-a0b9-49a35e5b3d25"),
                            ConcurrencyStamp = "3921474a-66e3-4614-aa2f-00151e93beec",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 592, DateTimeKind.Local).AddTicks(1341),
                            Email = "ahmet.celik@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "50714686502",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.CELIK@YANDEX.COM",
                            NormalizedUserName = "AHMET.CELIK@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENit4q7stwpm5fhSUO30/kGxcO2Vkru2PI2sqVeTbvPxsn64UkFqQtWr1ORp3MtWkw==",
                            PhoneNumber = "+905681592467",
                            PhoneNumberConfirmed = false,
                            Profession = "Taxi driver",
                            SecurityStamp = "O35R3QTZUKTUN4M0RYVISSMUP6O1DHFQ",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("5dff7060-b04a-4d39-a32a-4ec13734e4e1"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.celik@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("eb5cd4f2-b72a-4fa1-b245-257ca19d461a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 10, 18, 18, 54, 30, 593, DateTimeKind.Local).AddTicks(5040),
                            CompanyId = new Guid("c5d106e0-4b17-494c-a5f0-0375baa585ee"),
                            ConcurrencyStamp = "635b6426-867e-4051-902f-89eb71d8f9b7",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 593, DateTimeKind.Local).AddTicks(5039),
                            Email = "huseyin.celik@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "87280766048",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.CELIK@OUTLOOK.COM",
                            NormalizedUserName = "HUSEYIN.CELIK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK215fJIoVtyeOfA0zD5P3Eq9iNZCjgRnPslXcOq/C6Ygq6h6szGIRTIYyzZsyovPQ==",
                            PhoneNumber = "+905286065777",
                            PhoneNumberConfirmed = false,
                            Profession = "Dancer",
                            SecurityStamp = "GLA2X5C4RIWUSDUVHX3FY9G6ZV7WTJSG",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("4db5b648-dcc8-49e5-9c68-9c6f5f1c2433"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.celik@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("97c9c5e5-1a22-40f4-987c-8c4b67720d83"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 5, 30, 18, 54, 30, 594, DateTimeKind.Local).AddTicks(8727),
                            CompanyId = new Guid("c2fb3767-381b-4210-80bc-0ae4e03e5947"),
                            ConcurrencyStamp = "3ff32930-f2f3-43fe-8e9b-01ad13cd7240",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 594, DateTimeKind.Local).AddTicks(8726),
                            Email = "ismail.kaya@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "83000802416",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.KAYA@YAHOO.COM",
                            NormalizedUserName = "ISMAIL.KAYA@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECbwzZ3j5ZmXfjigfHQi9bKwK4loQy1BaME8gAbP/Vw0CNDuOcSjx+hE+trOXnqMkg==",
                            PhoneNumber = "+905619582916",
                            PhoneNumberConfirmed = false,
                            Profession = "Busdriver",
                            SecurityStamp = "MFT2N7VVLMJ5T5ULFYRBZ8QJ4LBCNCC3",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("5b4a61d1-d1ba-4c83-a6cf-c815a60bdcf0"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.kaya@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("90f75b29-1bce-4a66-9d5f-7bb404117ddb"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 2, 26, 18, 54, 30, 596, DateTimeKind.Local).AddTicks(2251),
                            CompanyId = new Guid("16ddd30c-f66f-472c-8612-d81bd6e40d3a"),
                            ConcurrencyStamp = "4bf9250d-1feb-4cb6-bf34-9ddda947f194",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 596, DateTimeKind.Local).AddTicks(2249),
                            Email = "ismail.ozdemir@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "21432080088",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.OZDEMIR@GOOGLE.COM",
                            NormalizedUserName = "ISMAIL.OZDEMIR@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFSF3kKWgRoxunfYsIVgShtqZNlxg0O4URwZMI0Y3hWZRbvzDL9aOJxMtnvjgw2KzA==",
                            PhoneNumber = "+905937238732",
                            PhoneNumberConfirmed = false,
                            Profession = "Lawyer",
                            SecurityStamp = "6HD4R5Z1G8Y8QUIJZH8DFWOJWY3VPZCC",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("60d00f1b-6d11-4fde-bf0b-221d9039ade1"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.ozdemir@google.com"
                        },
                        new
                        {
                            Id = new Guid("e4a69843-c78b-4a13-a103-1ec47b9e1122"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2044, 5, 8, 18, 54, 30, 597, DateTimeKind.Local).AddTicks(6174),
                            CompanyId = new Guid("5e6c2342-a590-4013-a6bb-136808e2c4c9"),
                            ConcurrencyStamp = "d0a796ca-e963-4755-b1ba-c573369213bc",
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 597, DateTimeKind.Local).AddTicks(6172),
                            Email = "mehmet.aydin@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "58704643726",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.AYDIN@GOOGLE.COM",
                            NormalizedUserName = "MEHMET.AYDIN@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEObAF0BA4IX/r43ceajpWP2ux4NFX5J29J4bFan9QjtMA17gnogkkT/qQtQbEJJl8w==",
                            PhoneNumber = "+905589588212",
                            PhoneNumberConfirmed = false,
                            Profession = "Postman",
                            SecurityStamp = "L4CGH3CRQDSKYO6TKH3NY7MSLARA4CRA",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("2e6e1880-4847-4564-806f-2ba6bad7250a"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.aydin@google.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7106),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905919231734",
                            SectorId = new Guid("19b58672-8cc8-45c7-8140-294ee7e302d7"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9bdfbdf2-81d0-4f21-a1d7-bb099852efa0"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 578, DateTimeKind.Local).AddTicks(5502),
                            Email = "info@celiklimitedsirketi.com",
                            Name = "Çelik Limited Şirketi",
                            NumberOfEmployees = 69,
                            PhoneNumber = "+905613280631",
                            SectorId = new Guid("ff1c0275-b2d7-4564-995a-30a284dee519"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("1c6a0fd5-8a98-44de-9be3-42ba1f8a2624"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 579, DateTimeKind.Local).AddTicks(9021),
                            Email = "info@demirkomanditsirketi.com",
                            Name = "Demir Komandit Şirketi",
                            NumberOfEmployees = 66,
                            PhoneNumber = "+905641090022",
                            SectorId = new Guid("e1278f96-9aca-4447-874b-4c6e725d4722"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f87aa45c-282d-42d6-9e84-b1690004c9ac"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 581, DateTimeKind.Local).AddTicks(2592),
                            Email = "info@ozdemirkollektifsirketi.com",
                            Name = "Özdemir Kollektif Şirketi",
                            NumberOfEmployees = 50,
                            PhoneNumber = "+905429183729",
                            SectorId = new Guid("ce44a681-286f-4782-a3ce-b4c17eab3798"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("3bc14794-acbf-4da5-8290-1a3c4b9c1b80"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 582, DateTimeKind.Local).AddTicks(6066),
                            Email = "info@yilmazkooperatifsirketi.com",
                            Name = "Yılmaz Kooperatif Şirketi",
                            NumberOfEmployees = 91,
                            PhoneNumber = "+905684596133",
                            SectorId = new Guid("b5c03477-6273-4eff-8900-ae1d2a7fa718"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("71c334c9-c0c8-49f7-847a-829af84c46c8"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 583, DateTimeKind.Local).AddTicks(9522),
                            Email = "info@kayakomanditsirketi.com",
                            Name = "Kaya Komandit Şirketi",
                            NumberOfEmployees = 64,
                            PhoneNumber = "+905495305684",
                            SectorId = new Guid("1edb60d8-3a91-421f-9c56-2759d03cba36"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("0492de86-03f9-47d6-9b3b-90d7bec20aad"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 585, DateTimeKind.Local).AddTicks(3130),
                            Email = "info@yildirimkollektifsirketi.com",
                            Name = "Yıldırım Kollektif Şirketi",
                            NumberOfEmployees = 85,
                            PhoneNumber = "+905940905461",
                            SectorId = new Guid("90ef931d-aaeb-464a-95b4-528c65784975"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("a2163d66-55a5-48ff-94b8-9c6c75db4334"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 586, DateTimeKind.Local).AddTicks(6818),
                            Email = "info@celiklimitedsirketi.com",
                            Name = "Çelik Limited Şirketi",
                            NumberOfEmployees = 51,
                            PhoneNumber = "+905359258014",
                            SectorId = new Guid("5274fd18-d817-4b91-ab63-486a5aa4fd6f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("ed277d2d-929d-430f-a58d-8743579f714d"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 588, DateTimeKind.Local).AddTicks(328),
                            Email = "info@sahinlimitedsirketi.com",
                            Name = "Şahin Limited Şirketi",
                            NumberOfEmployees = 11,
                            PhoneNumber = "+905784733586",
                            SectorId = new Guid("d8ae58f4-c175-4773-a291-547fa3f8606e"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("bef292cb-0219-4ab6-9e2d-cfa484e32518"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 589, DateTimeKind.Local).AddTicks(3887),
                            Email = "info@yildizkollektifsirketi.com",
                            Name = "Yıldız Kollektif Şirketi",
                            NumberOfEmployees = 54,
                            PhoneNumber = "+905372403308",
                            SectorId = new Guid("b5c03477-6273-4eff-8900-ae1d2a7fa718"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("4947e306-503c-4c10-9b1b-8c9941daf0ee"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 590, DateTimeKind.Local).AddTicks(7668),
                            Email = "info@aydinkooperatifsirketi.com",
                            Name = "Aydın Kooperatif Şirketi",
                            NumberOfEmployees = 34,
                            PhoneNumber = "+905265624353",
                            SectorId = new Guid("b5c03477-6273-4eff-8900-ae1d2a7fa718"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("9f9442ac-121d-452a-a0b9-49a35e5b3d25"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 592, DateTimeKind.Local).AddTicks(1321),
                            Email = "info@celikkooperatifsirketi.com",
                            Name = "Çelik Kooperatif Şirketi",
                            NumberOfEmployees = 94,
                            PhoneNumber = "+905842882252",
                            SectorId = new Guid("3fe05c5c-fd30-48af-ad88-b13c4d659ed9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("c5d106e0-4b17-494c-a5f0-0375baa585ee"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 593, DateTimeKind.Local).AddTicks(5027),
                            Email = "info@celikanonimsirketi.com",
                            Name = "Çelik Anonim Şirketi",
                            NumberOfEmployees = 28,
                            PhoneNumber = "+905534545936",
                            SectorId = new Guid("321d916d-88b3-4b9a-af05-10c77d719d06"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("c2fb3767-381b-4210-80bc-0ae4e03e5947"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 594, DateTimeKind.Local).AddTicks(8715),
                            Email = "info@kayaanonimsirketi.com",
                            Name = "Kaya Anonim Şirketi",
                            NumberOfEmployees = 88,
                            PhoneNumber = "+905706635872",
                            SectorId = new Guid("d5c656fe-9a09-497b-90ba-ed6435e65e17"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("16ddd30c-f66f-472c-8612-d81bd6e40d3a"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 596, DateTimeKind.Local).AddTicks(2215),
                            Email = "info@ozdemirkollektifsirketi.com",
                            Name = "Özdemir Kollektif Şirketi",
                            NumberOfEmployees = 53,
                            PhoneNumber = "+905124589346",
                            SectorId = new Guid("fccdb25b-23fb-4548-8137-586b537da8d1"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("5e6c2342-a590-4013-a6bb-136808e2c4c9"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 597, DateTimeKind.Local).AddTicks(6160),
                            Email = "info@aydinkollektifsirketi.com",
                            Name = "Aydın Kollektif Şirketi",
                            NumberOfEmployees = 11,
                            PhoneNumber = "+905117347978",
                            SectorId = new Guid("e1278f96-9aca-4447-874b-4c6e725d4722"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("321d916d-88b3-4b9a-af05-10c77d719d06"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6835),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("19b58672-8cc8-45c7-8140-294ee7e302d7"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6852),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("90ef931d-aaeb-464a-95b4-528c65784975"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6854),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5274fd18-d817-4b91-ab63-486a5aa4fd6f"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6855),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ff1c0275-b2d7-4564-995a-30a284dee519"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6856),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("925f1dcd-00a3-4e07-9abf-545915271c60"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6858),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("98403b65-a2d4-4b19-b951-2ef30d27dc78"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6859),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1edb60d8-3a91-421f-9c56-2759d03cba36"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6863),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e1278f96-9aca-4447-874b-4c6e725d4722"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6864),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9150f447-ee56-443e-bca3-7d661cfc7ce3"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6866),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c294a152-59e7-436e-8943-baaf11aac600"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6868),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d8ae58f4-c175-4773-a291-547fa3f8606e"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6869),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("afd7d858-f4ba-4587-bb1c-d497121a5d84"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6870),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d5c656fe-9a09-497b-90ba-ed6435e65e17"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6871),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ef8693b-394c-403e-99d8-0fb9e6d6bf32"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6872),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1a4e34ee-2bb3-44a3-aa79-20db5e9da573"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6874),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fccdb25b-23fb-4548-8137-586b537da8d1"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6876),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("510b26dd-0d97-470b-8237-c0c2ee2c884d"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6878),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3fe05c5c-fd30-48af-ad88-b13c4d659ed9"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6879),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b5c03477-6273-4eff-8900-ae1d2a7fa718"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6880),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ce44a681-286f-4782-a3ce-b4c17eab3798"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6881),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b6605643-ba81-44fe-8916-c228189cc29b"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6882),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aa17b855-d24c-41a0-8b56-03017bebf3a1"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6883),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("689bdf3e-354a-4f23-b76c-2f1921adf7c4"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(6886),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a58c0cc6-60b8-4be6-adb2-9b1ad284fb4f"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7128),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("231c95c9-96e4-4454-9338-e42975c35acd"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7133),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92997569-dff8-4ce4-8e36-e1e60c48f8b2"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7134),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("390b2992-d259-4570-80f2-a9fbbaf3c394"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7135),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a27e1694-ffa4-45a7-9055-da6aba8d1350"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7136),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("491167ab-3749-49f3-9ef2-ff88367a9591"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7138),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e46a3ffa-3ce7-4555-966f-0605ec8d7e91"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7140),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("66a48ee6-65c5-4b23-a7d2-721f9cdebbe6"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7141),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2010782-7b7d-4b70-96bd-45b33be4e1f0"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7142),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("67198283-1b91-4673-9e4d-4e66ad19837e"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7145),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7fe9b09f-02c9-42c3-b296-283e1614f5be"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7146),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e4a307a8-8150-4980-8e9d-712d8ac103ee"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7148),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("65b21465-db2c-4108-b476-723805743f53"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7149),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e1a72e61-9752-4785-8d9d-bbdf07da1022"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7150),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d1c0a948-9d2c-4edc-8b12-01ecd1c4f23d"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7151),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0b09fa2d-e6ec-48a5-a18c-c2b5cffa840c"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7152),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("48ff745d-ef1c-47b9-babb-bd264d239d84"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7153),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6b5f6104-2ef1-4426-b1e0-79b1ef9f6d41"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7156),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("34d3b6e9-96c4-4675-8c8f-3082fa4a9e42"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7157),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b68f37ce-4601-4157-a036-c6262379323f"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7158),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("66064dc4-0fe2-4199-b0f2-5001a76dda9c"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7159),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fb015809-3919-4bb7-b788-a736e7131ea0"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7160),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("25bcb86f-7898-4445-98a5-9e5b0e9bc91a"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7161),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a130488d-ef46-4f37-ba14-9ce1c6670f74"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7162),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("648da832-89f7-4f1b-80d9-ee72a5de2aec"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7163),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("131f2216-2312-4309-92dc-7456b505521d"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7166),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92b61100-c445-46bb-b847-c7fd9d5dad59"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7167),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f413211e-9144-4ad3-a5ff-38df84f3a181"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7168),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0f04f817-11b7-4170-9c9f-4217cdb560d5"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7169),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4efc84ea-fa15-4027-b79d-ac49e9ddeb40"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7170),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c507020c-598b-4688-ae79-3b2c30af7236"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7171),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c91766c5-647b-4cc9-93e0-b1ae41974ca3"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7172),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("36d0f60c-abaf-4af1-b4df-3f6d96bc2635"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7173),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e8dafaf9-5a42-44c2-b346-cadf2cb1831c"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7176),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d07f3443-826f-47a0-9b88-46fbc98445f8"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7177),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3e10fd48-231f-46fb-890e-e8bb160ec2c8"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7178),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9251becb-5ab9-4a08-a616-3674356f2b14"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7179),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("37514e18-c9ae-4dcf-807d-63f5523156e9"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7180),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4878a03f-603d-4956-bed9-ac793937428b"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7181),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e67bc954-cf26-4075-ad69-9b07c362dd05"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7182),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d53b3c09-869e-4752-b88a-33f542358e9e"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7183),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4014aaa4-671a-4f01-b42f-67ebcc9d1990"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7186),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("89b79cfc-cc0f-4ec1-9bf6-4e5b130c1086"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7187),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d0247051-a72d-4b8d-b3e4-1f5fb2da6520"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7188),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9087dfd3-b318-42bb-925f-e91a6d1431fb"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7242),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8e553890-473f-420f-b451-3c9ae5f124db"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7244),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("43134a9f-073a-4ad0-9b86-7d496ac3b3ea"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7245),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5c8f1dfc-c5b4-48c0-adfe-01bea0aa5059"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7246),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9ec1898c-de8c-453b-81ba-a4ef3f6635b4"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7247),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bf666aa1-bc54-458b-9a5f-cdf7dc2d1466"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7250),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7af25a93-9ead-413b-b99e-0726e35fc927"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7251),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9e71b9c4-4999-4442-96bd-5c8878a58c6c"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7252),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a820ced9-fdc2-49e5-ba3d-68efbf40902d"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7253),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ae825905-854b-418c-8402-f5499169c31b"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7254),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0e5ef46d-06be-42e1-9fc6-31d38b9fa480"),
                            CompanyId = new Guid("7d15051b-2dfa-4251-86b2-8e1060820046"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 571, DateTimeKind.Local).AddTicks(7255),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("21abe347-3ac0-4370-8ecd-8d4892c50f48"),
                            CompanyId = new Guid("9bdfbdf2-81d0-4f21-a1d7-bb099852efa0"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 578, DateTimeKind.Local).AddTicks(5582),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("49809b9a-0a60-4751-b90b-f3cb35619eb2"),
                            CompanyId = new Guid("1c6a0fd5-8a98-44de-9be3-42ba1f8a2624"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 579, DateTimeKind.Local).AddTicks(9026),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd85f944-881c-4643-bb8b-2503469720a1"),
                            CompanyId = new Guid("f87aa45c-282d-42d6-9e84-b1690004c9ac"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 581, DateTimeKind.Local).AddTicks(2600),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("50bad660-a1c8-4342-b340-4bdba4234560"),
                            CompanyId = new Guid("3bc14794-acbf-4da5-8290-1a3c4b9c1b80"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 582, DateTimeKind.Local).AddTicks(6123),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4823e46f-4bea-42ed-bba2-3369ff01f13b"),
                            CompanyId = new Guid("71c334c9-c0c8-49f7-847a-829af84c46c8"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 583, DateTimeKind.Local).AddTicks(9526),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0379e912-28cd-4d84-b524-45cb18734aef"),
                            CompanyId = new Guid("0492de86-03f9-47d6-9b3b-90d7bec20aad"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 585, DateTimeKind.Local).AddTicks(3134),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("313d90f6-4858-4dc4-9858-040784c72329"),
                            CompanyId = new Guid("a2163d66-55a5-48ff-94b8-9c6c75db4334"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 586, DateTimeKind.Local).AddTicks(6826),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fe2057fa-023c-4f36-b3e2-b9b0b40805c9"),
                            CompanyId = new Guid("ed277d2d-929d-430f-a58d-8743579f714d"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 588, DateTimeKind.Local).AddTicks(335),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9af97c85-6c39-44d2-b398-3c4d0cc9c39f"),
                            CompanyId = new Guid("bef292cb-0219-4ab6-9e2d-cfa484e32518"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 589, DateTimeKind.Local).AddTicks(3891),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f7acb68c-0aa8-48c1-9328-845a51e32325"),
                            CompanyId = new Guid("4947e306-503c-4c10-9b1b-8c9941daf0ee"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 590, DateTimeKind.Local).AddTicks(7674),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5dff7060-b04a-4d39-a32a-4ec13734e4e1"),
                            CompanyId = new Guid("9f9442ac-121d-452a-a0b9-49a35e5b3d25"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 592, DateTimeKind.Local).AddTicks(1336),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4db5b648-dcc8-49e5-9c68-9c6f5f1c2433"),
                            CompanyId = new Guid("c5d106e0-4b17-494c-a5f0-0375baa585ee"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 593, DateTimeKind.Local).AddTicks(5030),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5b4a61d1-d1ba-4c83-a6cf-c815a60bdcf0"),
                            CompanyId = new Guid("c2fb3767-381b-4210-80bc-0ae4e03e5947"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 594, DateTimeKind.Local).AddTicks(8721),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("60d00f1b-6d11-4fde-bf0b-221d9039ade1"),
                            CompanyId = new Guid("16ddd30c-f66f-472c-8612-d81bd6e40d3a"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 596, DateTimeKind.Local).AddTicks(2220),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2e6e1880-4847-4564-806f-2ba6bad7250a"),
                            CompanyId = new Guid("5e6c2342-a590-4013-a6bb-136808e2c4c9"),
                            CreateDate = new DateTime(2023, 5, 17, 18, 54, 30, 597, DateTimeKind.Local).AddTicks(6168),
                            Name = "Safety Director",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21"),
                            ConcurrencyStamp = "BY6LKD2QTHNMVCLUDDVHOQ560FVGABVE",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b"),
                            ConcurrencyStamp = "BXY0VV0KZDCKHSXJSM8VXK63JHSZ2LZW",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("73066ff6-8b20-4619-b36f-c80cfc4e239a"),
                            ConcurrencyStamp = "AEU4MV2KUT84W5CQKVKNVETJD9XF2XF0",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ae4debf9-8d08-4d9d-8a56-3a3e7393e8eb"),
                            RoleId = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21")
                        },
                        new
                        {
                            UserId = new Guid("552fc1e4-f1cd-40c0-9e4a-da453911a08c"),
                            RoleId = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21")
                        },
                        new
                        {
                            UserId = new Guid("442e0300-e362-40eb-adbf-59c6014b3263"),
                            RoleId = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21")
                        },
                        new
                        {
                            UserId = new Guid("d6b1e09f-0b00-4376-a911-cae5a130be21"),
                            RoleId = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21")
                        },
                        new
                        {
                            UserId = new Guid("7be0ce55-0f35-4a92-95e6-aa438d744525"),
                            RoleId = new Guid("7f77b47e-a272-4ead-8a88-1c3b4f0b2d21")
                        },
                        new
                        {
                            UserId = new Guid("1bde8fad-93b8-4200-bcb5-45bb4669a0b7"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("8f275260-4249-4a04-8380-e32f2f7a883c"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("4b40736d-4b14-46d4-8621-fed8c14c7e93"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("ee4fc5aa-8731-4359-bd97-f28c2d679f54"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("ef438a07-a60d-4cd7-b08c-f2739de09cf4"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("05c382d2-0112-4410-9f0c-1f6133ae1ebe"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("47c75cb6-0d05-453a-b780-ea471e175512"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("fe004e02-4a7b-4439-b8b7-996967e8e1af"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("26371c2a-2a09-49d4-8f8c-6e53875f67c7"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("7f435165-d8d8-4b81-a6ba-9275645681d7"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("43e8bdbd-9b7a-4bde-9141-07d30c0134bf"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("eb5cd4f2-b72a-4fa1-b245-257ca19d461a"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("97c9c5e5-1a22-40f4-987c-8c4b67720d83"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("90f75b29-1bce-4a66-9d5f-7bb404117ddb"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        },
                        new
                        {
                            UserId = new Guid("e4a69843-c78b-4a13-a103-1ec47b9e1122"),
                            RoleId = new Guid("72f29bd1-4d04-436b-adf9-6154b5b3cc8b")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithOne("Address")
                        .HasForeignKey("IKApplication.Domain.Entites.Address", "AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("CashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("CashAdvances");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
