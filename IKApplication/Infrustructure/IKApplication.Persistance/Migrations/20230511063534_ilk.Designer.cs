// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230511063534_ilk")]
    partial class ilk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("94c2bcdc-7dbf-4cf8-a053-eb5534f867f6"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 10, 4, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7037),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            ConcurrencyStamp = "08098c22-b26f-4629-b4ce-27adde9129c0",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7032),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6372803762",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFKlWGP/UFsrgwUFqFC0YHoHgQ3zzKvdeN2xsK0XqZZmrSLUHAYhKwQlWw8dOCkHHQ==",
                            PhoneNumber = "+905405842315",
                            PhoneNumberConfirmed = false,
                            Profession = "Lifeguard",
                            SecurityStamp = "KVB4ARB4FMSDL688FU6VJSN1SOXOGK65",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("eb209307-66af-4e92-afbb-78c600293e2c"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("f2186b6c-4294-4448-8419-1c7b4520a964"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2060, 4, 15, 9, 35, 33, 984, DateTimeKind.Local).AddTicks(6310),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            ConcurrencyStamp = "2c252d56-e5f1-42e3-ae9a-895f6989f858",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 984, DateTimeKind.Local).AddTicks(6307),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3410213442",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAho0E0ZSvV6LSRfGE68E7dKbfxn8BcoGBuUCTZBeJIRIRpvdtPctqVBqsnyGixThA==",
                            PhoneNumber = "+905663216354",
                            PhoneNumberConfirmed = false,
                            Profession = "Photographer",
                            SecurityStamp = "5TLUSFEC6Y21H94B3UPLRLWF310TH2EL",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("0d0898bc-28ba-4c6f-98fc-bd7ed650adc5"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("a5981db3-b0d3-4e5d-8fa4-80da7416f86d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 9, 19, 9, 35, 33, 990, DateTimeKind.Local).AddTicks(5102),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            ConcurrencyStamp = "1eb4fd75-6903-4b17-bf08-fc7b4bb6d7a5",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 990, DateTimeKind.Local).AddTicks(5097),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "4032013890",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJIT5w1iNfXs+XG1YS9PHYJDjcKWa0fVqQNYW2YzeKx9yw7efrXNHHzIsVOXwOICGA==",
                            PhoneNumber = "+905618280647",
                            PhoneNumberConfirmed = false,
                            Profession = "Factory worker",
                            SecurityStamp = "0NJFZZJ3T2C2R06EE6TPCK68HNFYF5ZD",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("db779e39-77d4-40a7-9200-bd490196c7b2"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("80570c85-e7b9-425b-b67c-8a7ee4b5ab4a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 5, 5, 9, 35, 33, 996, DateTimeKind.Local).AddTicks(5732),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            ConcurrencyStamp = "419ed43b-284c-49a7-9d17-857648bce653",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 996, DateTimeKind.Local).AddTicks(5725),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "7136624830",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGAisXwsbMddvlCTgn5u5H5u8t8FOLt89sgzszr0MB+Yp9ju6zSOkuV7ZBwXRp8GRw==",
                            PhoneNumber = "+905132561053",
                            PhoneNumberConfirmed = false,
                            Profession = "Postman",
                            SecurityStamp = "20Z4D9S88HXYHLQTIPTZMTEEN8XN0CX2",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("0854e1db-35b8-482f-aaa0-590d38ef29fc"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("33cb8551-77d7-43ff-b305-2d68f1307f71"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 10, 6, 9, 35, 34, 2, DateTimeKind.Local).AddTicks(4275),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            ConcurrencyStamp = "d786d67d-fd28-456b-9ffc-34c320b0b655",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 2, DateTimeKind.Local).AddTicks(4272),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3574887620",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFV2Zor2RdjGFOKEf2eLsGTgBQPbZUIqBghhmC4VBAARg9cUOeyaMiSyv8ti4mkk4w==",
                            PhoneNumber = "+905248156946",
                            PhoneNumberConfirmed = false,
                            Profession = "Farmer",
                            SecurityStamp = "EN8CBZ7D6BSRGTWHY3TBF12JC67V4IG1",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("87b19be8-4534-4c6c-8d4a-a69d95764396"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("2cbc8181-9594-451a-ae3c-fd7c1201fa5f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 3, 18, 9, 35, 34, 8, DateTimeKind.Local).AddTicks(2786),
                            CompanyId = new Guid("790ffc62-8d24-4460-a27d-12032728aed3"),
                            ConcurrencyStamp = "5c1ca733-2b2c-4710-ab40-8cb4fbc33ef8",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 8, DateTimeKind.Local).AddTicks(2784),
                            Email = "ahmet.ozdemir@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3518670550",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.OZDEMIR@YANDEX.COM",
                            NormalizedUserName = "AHMET.OZDEMIR@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPqwbeY0YY2OlOb8NQqBfXdmmM+CWmS1fSpmtKniy9y2dpNPcQERig0Z+rwq66CQjA==",
                            PhoneNumber = "+905771173244",
                            PhoneNumberConfirmed = false,
                            Profession = "Pharmacist",
                            SecurityStamp = "OMO6BFISILFWWLRVSZJPTUAWYE08IFZM",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("6852d6b5-c4d5-4837-b5fa-50fdca7242a9"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.ozdemir@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("d5dd2363-8a11-4fd2-b6ec-91635b09e25d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2044, 7, 24, 9, 35, 34, 14, DateTimeKind.Local).AddTicks(2054),
                            CompanyId = new Guid("0b31c53a-2ef5-4872-9401-6969416aa560"),
                            ConcurrencyStamp = "18d26e1f-1579-4088-915c-03b1dd6f93d7",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 14, DateTimeKind.Local).AddTicks(2050),
                            Email = "yusuf.yildiz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "4061886542",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILDIZ@YANDEX.COM",
                            NormalizedUserName = "YUSUF.YILDIZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENmjLBr1bWYFhyDJ7FYEPeIFgJ/eQXy5zSWlGb5mjTWpHdDmD1uBPG9/Eap3H6PSTw==",
                            PhoneNumber = "+905999012820",
                            PhoneNumberConfirmed = false,
                            Profession = "Postman",
                            SecurityStamp = "R32ALKDGSKGXT0WQ4PQQ7WWM9I7GNFJ9",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("00528c90-5e87-46ec-9188-d4a235967920"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yildiz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("1c84649d-9aca-45db-967d-27b04b30ef85"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 11, 11, 9, 35, 34, 20, DateTimeKind.Local).AddTicks(694),
                            CompanyId = new Guid("df71d666-fcee-4ab9-87ab-d6e0615999cf"),
                            ConcurrencyStamp = "515da689-5f27-407a-8fc2-17ddf69c4207",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 20, DateTimeKind.Local).AddTicks(692),
                            Email = "ahmet.kaya@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6820278744",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.KAYA@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.KAYA@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEA5GW4KqhoVKlKgWtwo7jxxEPnOmxbQ+6fcfssg50yz6wQ4uo1c6osoVcRnHMoiWYg==",
                            PhoneNumber = "+905939936886",
                            PhoneNumberConfirmed = false,
                            Profession = "Chef/Cook",
                            SecurityStamp = "CSKPQ6BT1BXE5VF52TMDMAH5BCJVFBJ4",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("ad97e104-1854-4472-b989-d0c43663911e"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.kaya@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("28e06592-35f7-4387-ac28-4fa7c2b65ad7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 5, 4, 9, 35, 34, 25, DateTimeKind.Local).AddTicks(9316),
                            CompanyId = new Guid("c86e9ea3-d642-49ef-b903-2677b06c27a0"),
                            ConcurrencyStamp = "4ba4c122-0d59-4895-94c7-522b93073691",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 25, DateTimeKind.Local).AddTicks(9314),
                            Email = "yusuf.kaya@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "2818153626",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.KAYA@OUTLOOK.COM",
                            NormalizedUserName = "YUSUF.KAYA@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKjEVw/3a3VGJPGOrznB1tFSgwvILKG91iB7gKVPWGXpox0N6zT6yyV+xHZcFxX3kQ==",
                            PhoneNumber = "+905214666722",
                            PhoneNumberConfirmed = false,
                            Profession = "Model",
                            SecurityStamp = "5MKDGOLCIQP6LDXHXUJEAMJTKRBMADXO",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("fb4113de-f198-4fe1-88f2-e309ca66e518"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.kaya@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("c62b4d8f-6e77-4820-a095-e752e93d6ff2"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 1, 14, 9, 35, 34, 31, DateTimeKind.Local).AddTicks(8227),
                            CompanyId = new Guid("27181829-9cd2-4eb0-bc9f-557c57afa7a5"),
                            ConcurrencyStamp = "621a4241-7f6e-4d3c-bf35-3923af912405",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 31, DateTimeKind.Local).AddTicks(8225),
                            Email = "huseyin.ozturk@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3886336850",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.OZTURK@HOTMAIL.COM",
                            NormalizedUserName = "HUSEYIN.OZTURK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEL7ncYbUMFx5tThlX7i+LSEL41RJeBB0lagAxcjYDlbefASI1AoNaXTaXfVGJ+tw5g==",
                            PhoneNumber = "+905456437073",
                            PhoneNumberConfirmed = false,
                            Profession = "Secretary",
                            SecurityStamp = "CHLKM6IA5V8NT1TVE7DFVFOMS549V94W",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("e32c482d-eb66-44c1-b3df-9037032a986d"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.ozturk@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("ffb83a0d-8c70-4456-b277-ff418a592c63"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 3, 9, 9, 35, 34, 37, DateTimeKind.Local).AddTicks(6904),
                            CompanyId = new Guid("64a61aa1-89f7-48f3-a2f8-379eec32b3dc"),
                            ConcurrencyStamp = "cf85c15a-17e8-4255-b151-52470bc372a0",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 37, DateTimeKind.Local).AddTicks(6902),
                            Email = "ibrahim.yildiz@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "5505477788",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIZ@OUTLOOK.COM",
                            NormalizedUserName = "IBRAHIM.YILDIZ@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK5nwEzPxHG/FzeGu7bQ+zvxogtr0aE89YMJDc2MYPdt7pUtU/RiKJnH9OylvC7Gmg==",
                            PhoneNumber = "+905996248517",
                            PhoneNumberConfirmed = false,
                            Profession = "Receptionist",
                            SecurityStamp = "N716H16S3B611H6JVRZ8TVVEYA1ONQJS",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("e2092c2c-15c2-419a-8460-3bd7b728bc0f"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildiz@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("9f120828-9658-4c2d-9d1e-2d21eb3ce8b7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 12, 26, 9, 35, 34, 43, DateTimeKind.Local).AddTicks(5570),
                            CompanyId = new Guid("67ab1fa5-de44-4fac-a459-617ce25cf18e"),
                            ConcurrencyStamp = "12081f42-7ada-42de-921d-f1bb4e47d6e2",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 43, DateTimeKind.Local).AddTicks(5569),
                            Email = "mehmet.ozturk@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "8062486352",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.OZTURK@OUTLOOK.COM",
                            NormalizedUserName = "MEHMET.OZTURK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENnn4eHWwjk0opGtUj7fAmYQ7VFR0qwRAnNFBNce9tDtiAHA+8p9KXXy6MQpCZM7qg==",
                            PhoneNumber = "+905417913920",
                            PhoneNumberConfirmed = false,
                            Profession = "Shop assistant",
                            SecurityStamp = "CHHIZ3Y9Y67LPF1492TVCMXOZ488BENJ",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("b1c4068a-6c67-41ac-8da2-b7644ad78613"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.ozturk@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("c9841234-80c1-4a6f-ba91-9687f9a60ef3"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 1, 13, 9, 35, 34, 49, DateTimeKind.Local).AddTicks(8180),
                            CompanyId = new Guid("7c197d87-b380-44d7-9741-cf73e220ba09"),
                            ConcurrencyStamp = "2b13be58-0810-43be-80e7-c7c8645cae19",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 49, DateTimeKind.Local).AddTicks(8178),
                            Email = "ibrahim.demir@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6257064730",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.DEMIR@GOOGLE.COM",
                            NormalizedUserName = "IBRAHIM.DEMIR@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPmZCaxtMiANfBAy3kpn3qHD22jQ0zdW0ykmUPjDpGTRP3gnZE5VU9nfchH/3/ExAQ==",
                            PhoneNumber = "+905757210527",
                            PhoneNumberConfirmed = false,
                            Profession = "Businessman",
                            SecurityStamp = "656BZ9HXZISJHFFUH1PQLY2F3LCXDF29",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("214e6d52-646d-47b5-b443-7b9dd2d0e27c"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.demir@google.com"
                        },
                        new
                        {
                            Id = new Guid("26709fad-a014-457c-919b-b634174b0c7d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 8, 24, 9, 35, 34, 56, DateTimeKind.Local).AddTicks(503),
                            CompanyId = new Guid("6df6813a-f8d8-4df7-ae41-1165136511eb"),
                            ConcurrencyStamp = "a85442a1-cc47-427a-888f-e8b2c4c99bc5",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 56, DateTimeKind.Local).AddTicks(501),
                            Email = "yusuf.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "5575601762",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "YUSUF.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDM9y9cDlkgKwcoJ6Q8kCyXdWT/AO5GjZgoRTUBvLtBfi8XKb/3fl8NFhb9NLRf5aQ==",
                            PhoneNumber = "+905384694729",
                            PhoneNumberConfirmed = false,
                            Profession = "Teacher",
                            SecurityStamp = "FOS0GMPER8AWHN0QCMWAORI4FGC6PZ17",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("1ec51b05-98ac-42d2-9034-5ec7adb88d94"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("bf819692-436f-4569-82b8-9efdd2c7205e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 10, 3, 9, 35, 34, 61, DateTimeKind.Local).AddTicks(9046),
                            CompanyId = new Guid("8a01feda-c82e-4360-9c79-ac38fd84bff9"),
                            ConcurrencyStamp = "9d5e11ea-d2f3-44e8-ba32-afca12e48e51",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 61, DateTimeKind.Local).AddTicks(9041),
                            Email = "yusuf.ozdemir@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6056085718",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.OZDEMIR@YANDEX.COM",
                            NormalizedUserName = "YUSUF.OZDEMIR@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHAF3gch56KeTGEMYU1K18ums6BIVjlq0vhjCGyxeaueYjUeUY0u5AVOaCVF/dLI7w==",
                            PhoneNumber = "+905753590521",
                            PhoneNumberConfirmed = false,
                            Profession = "Postman",
                            SecurityStamp = "0B7LJ0ZM4X9B55MC1VZH6382NAKRC031",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("33004240-6b2f-440c-b8e7-a09f6d89649b"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.ozdemir@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("0a2ded2a-d239-48aa-9208-fd680a848f59"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2049, 1, 18, 9, 35, 34, 67, DateTimeKind.Local).AddTicks(7546),
                            CompanyId = new Guid("acad92f8-f2bf-49b5-a0ef-10126da14184"),
                            ConcurrencyStamp = "96a056c5-d09b-437d-80ba-6ce11ceeed33",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 67, DateTimeKind.Local).AddTicks(7545),
                            Email = "ibrahim.yilmaz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "4373144488",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILMAZ@YANDEX.COM",
                            NormalizedUserName = "IBRAHIM.YILMAZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECOwsJHzJo4f4+Om4hn5dRjswfXNZZT49SR7XgDt45JiCp6bXNA4218e+WeKJFQVfg==",
                            PhoneNumber = "+905219702621",
                            PhoneNumberConfirmed = false,
                            Profession = "Hairdresser",
                            SecurityStamp = "6VLL3AS0OAL19I3Q0JSFEVETWQV84LML",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("ec07587f-9de6-4756-a302-4e802201d630"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yilmaz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("d052f77a-5cd9-4132-b741-42c1cb144af9"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2042, 9, 20, 9, 35, 34, 73, DateTimeKind.Local).AddTicks(5966),
                            CompanyId = new Guid("910a74e9-dee9-49eb-bd72-b706f4b2dae0"),
                            ConcurrencyStamp = "2ec071e7-0184-4cd0-b59a-c8358d885720",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 73, DateTimeKind.Local).AddTicks(5966),
                            Email = "ismail.celik@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "8547524498",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.CELIK@MICROSOFT.COM",
                            NormalizedUserName = "ISMAIL.CELIK@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBcucec+Rm/URJBS3hkVqP4wX3FBH58W4wjmRu1z7tz3dWcRZ3/jmrS7rkFowyAT0Q==",
                            PhoneNumber = "+905670294952",
                            PhoneNumberConfirmed = false,
                            Profession = "Taxi driver",
                            SecurityStamp = "VCYB68GTAGP29NSTH0UXKOQV81KLC029",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("5522c410-dbe2-462f-8e87-6d5d1d9449c0"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.celik@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("f2d17da7-c782-4594-ba43-49f1112e6c34"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 7, 30, 9, 35, 34, 79, DateTimeKind.Local).AddTicks(4237),
                            CompanyId = new Guid("e216856a-6205-4a09-b5a2-8a9d1d524360"),
                            ConcurrencyStamp = "b34ba154-4337-4a29-a843-6a6837eb7551",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 79, DateTimeKind.Local).AddTicks(4235),
                            Email = "ali.sahin@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6388205248",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.SAHIN@GOOGLE.COM",
                            NormalizedUserName = "ALI.SAHIN@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJcu2LvvBaHlAPF9gyhrKXL6F9ETlo3TXfW/4sGAQnOMyvUs7LNHsBXieGiEhFLuiA==",
                            PhoneNumber = "+905367541559",
                            PhoneNumberConfirmed = false,
                            Profession = "Newsreader",
                            SecurityStamp = "L4YTUBCZWFK3BR8ZWL744O0RYSUJOJQA",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("81177806-7278-45b9-939a-bd14679d30c2"),
                            TwoFactorEnabled = false,
                            UserName = "ali.sahin@google.com"
                        },
                        new
                        {
                            Id = new Guid("cbfc66cc-6a8f-4e72-a5fd-69049955c23b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 1, 13, 9, 35, 34, 85, DateTimeKind.Local).AddTicks(3186),
                            CompanyId = new Guid("036e34c7-64cb-4e3f-a3f9-6d6de28b0436"),
                            ConcurrencyStamp = "b6c7af36-0e76-4285-bfc1-a6ddd7182121",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 85, DateTimeKind.Local).AddTicks(3184),
                            Email = "ali.ozturk@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "2358608248",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.OZTURK@YANDEX.COM",
                            NormalizedUserName = "ALI.OZTURK@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMTVLDIqGh5ziimh9tn9SKU9CHgTPPTiNTZhITyihIK7sz9BJIVOnPzJX7J2qvZhzA==",
                            PhoneNumber = "+905433387488",
                            PhoneNumberConfirmed = false,
                            Profession = "Politician",
                            SecurityStamp = "YHWGHUQ86E57L9BSSHZ2KZMK7LK7O3M3",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("008bcb91-496c-4ca9-aead-0a547c4a86f1"),
                            TwoFactorEnabled = false,
                            UserName = "ali.ozturk@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("b5f9cace-bfd5-4554-bd6d-90b118e90a75"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 11, 6, 9, 35, 34, 91, DateTimeKind.Local).AddTicks(162),
                            CompanyId = new Guid("a4fb67e1-40f7-4f2d-8ae6-a84fdf0d426c"),
                            ConcurrencyStamp = "eaf080d2-23e7-4731-9b09-9283c58828af",
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 91, DateTimeKind.Local).AddTicks(161),
                            Email = "ali.ozturk@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6656737460",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.OZTURK@YAHOO.COM",
                            NormalizedUserName = "ALI.OZTURK@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEENtv+uDCpZZwjnje0EXCpENCIOwRtXrDgNilO+viPa+PoYtXTkvb6TPQfK594KlRQ==",
                            PhoneNumber = "+905229246010",
                            PhoneNumberConfirmed = false,
                            Profession = "Receptionist",
                            SecurityStamp = "YWJS9W7KE1PJ4J4SALYUDL1BYR39ZI0A",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("8db85304-b891-430e-aa1b-7064132b7b56"),
                            TwoFactorEnabled = false,
                            UserName = "ali.ozturk@yahoo.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6877),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905431590896",
                            SectorId = new Guid("85cdadfd-32db-4884-85a3-cd683d8a787e"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("790ffc62-8d24-4460-a27d-12032728aed3"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 8, DateTimeKind.Local).AddTicks(2771),
                            Email = "info@ozdemirkooperatifsirketi.com",
                            Name = "Özdemir Kooperatif Şirketi",
                            NumberOfEmployees = 31,
                            PhoneNumber = "+905977264693",
                            SectorId = new Guid("3ebc660e-1594-4e9c-beab-1dd3c3e485dd"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("0b31c53a-2ef5-4872-9401-6969416aa560"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 14, DateTimeKind.Local).AddTicks(1997),
                            Email = "info@yildizkooperatifsirketi.com",
                            Name = "Yıldız Kooperatif Şirketi",
                            NumberOfEmployees = 66,
                            PhoneNumber = "+905986051274",
                            SectorId = new Guid("f00820f6-6c7c-4b9f-b097-fbd9f2211f06"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("df71d666-fcee-4ab9-87ab-d6e0615999cf"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 20, DateTimeKind.Local).AddTicks(681),
                            Email = "info@kayaanonimsirketi.com",
                            Name = "Kaya Anonim Şirketi",
                            NumberOfEmployees = 51,
                            PhoneNumber = "+905238474308",
                            SectorId = new Guid("879ee182-4aac-4ec7-bed0-accb171b44d2"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("c86e9ea3-d642-49ef-b903-2677b06c27a0"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 25, DateTimeKind.Local).AddTicks(9293),
                            Email = "info@kayakomanditsirketi.com",
                            Name = "Kaya Komandit Şirketi",
                            NumberOfEmployees = 3,
                            PhoneNumber = "+905895688938",
                            SectorId = new Guid("7e8de850-9c36-467b-ab01-f34d0f2607c3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("27181829-9cd2-4eb0-bc9f-557c57afa7a5"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 31, DateTimeKind.Local).AddTicks(8206),
                            Email = "info@ozturkanonimsirketi.com",
                            Name = "Öztürk Anonim Şirketi",
                            NumberOfEmployees = 21,
                            PhoneNumber = "+905364176748",
                            SectorId = new Guid("f00820f6-6c7c-4b9f-b097-fbd9f2211f06"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("64a61aa1-89f7-48f3-a2f8-379eec32b3dc"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 37, DateTimeKind.Local).AddTicks(6889),
                            Email = "info@yildizkomanditsirketi.com",
                            Name = "Yıldız Komandit Şirketi",
                            NumberOfEmployees = 75,
                            PhoneNumber = "+905245637873",
                            SectorId = new Guid("1f689906-d592-4caf-bd7d-fb9c38a0de4f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("67ab1fa5-de44-4fac-a459-617ce25cf18e"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 43, DateTimeKind.Local).AddTicks(5557),
                            Email = "info@ozturklimitedsirketi.com",
                            Name = "Öztürk Limited Şirketi",
                            NumberOfEmployees = 56,
                            PhoneNumber = "+905472699854",
                            SectorId = new Guid("51e11be5-b5ea-49e2-8c47-873429ca287c"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("7c197d87-b380-44d7-9741-cf73e220ba09"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 49, DateTimeKind.Local).AddTicks(8145),
                            Email = "info@demiranonimsirketi.com",
                            Name = "Demir Anonim Şirketi",
                            NumberOfEmployees = 87,
                            PhoneNumber = "+905968719491",
                            SectorId = new Guid("879ee182-4aac-4ec7-bed0-accb171b44d2"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("6df6813a-f8d8-4df7-ae41-1165136511eb"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 56, DateTimeKind.Local).AddTicks(492),
                            Email = "info@yildizkomanditsirketi.com",
                            Name = "Yıldız Komandit Şirketi",
                            NumberOfEmployees = 94,
                            PhoneNumber = "+905464204859",
                            SectorId = new Guid("6d2fd800-6c3a-4875-9e12-20b1a3dfce63"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("8a01feda-c82e-4360-9c79-ac38fd84bff9"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 61, DateTimeKind.Local).AddTicks(9025),
                            Email = "info@ozdemirkooperatifsirketi.com",
                            Name = "Özdemir Kooperatif Şirketi",
                            NumberOfEmployees = 52,
                            PhoneNumber = "+905604296860",
                            SectorId = new Guid("7e8de850-9c36-467b-ab01-f34d0f2607c3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("acad92f8-f2bf-49b5-a0ef-10126da14184"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 67, DateTimeKind.Local).AddTicks(7534),
                            Email = "info@yilmazkooperatifsirketi.com",
                            Name = "Yılmaz Kooperatif Şirketi",
                            NumberOfEmployees = 60,
                            PhoneNumber = "+905778416167",
                            SectorId = new Guid("027703bc-c9ba-454b-a58e-c90873d50312"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("910a74e9-dee9-49eb-bd72-b706f4b2dae0"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 73, DateTimeKind.Local).AddTicks(5959),
                            Email = "info@celikkomanditsirketi.com",
                            Name = "Çelik Komandit Şirketi",
                            NumberOfEmployees = 30,
                            PhoneNumber = "+905162000735",
                            SectorId = new Guid("11805b22-108e-4eef-82bf-98323191473d"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e216856a-6205-4a09-b5a2-8a9d1d524360"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 79, DateTimeKind.Local).AddTicks(4228),
                            Email = "info@sahinkomanditsirketi.com",
                            Name = "Şahin Komandit Şirketi",
                            NumberOfEmployees = 45,
                            PhoneNumber = "+905151872925",
                            SectorId = new Guid("7e8de850-9c36-467b-ab01-f34d0f2607c3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("036e34c7-64cb-4e3f-a3f9-6d6de28b0436"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 85, DateTimeKind.Local).AddTicks(3174),
                            Email = "info@ozturkkollektifsirketi.com",
                            Name = "Öztürk Kollektif Şirketi",
                            NumberOfEmployees = 82,
                            PhoneNumber = "+905352706233",
                            SectorId = new Guid("7e8de850-9c36-467b-ab01-f34d0f2607c3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("a4fb67e1-40f7-4f2d-8ae6-a84fdf0d426c"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 91, DateTimeKind.Local).AddTicks(154),
                            Email = "info@ozturkkooperatifsirketi.com",
                            Name = "Öztürk Kooperatif Şirketi",
                            NumberOfEmployees = 65,
                            PhoneNumber = "+905633549186",
                            SectorId = new Guid("14e34f21-709a-4e7a-9953-83455e7eb0cf"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e0e4fb6-7339-467f-9600-4570f83123ff"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6704),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("85cdadfd-32db-4884-85a3-cd683d8a787e"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6728),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0e47ba62-811c-4a5f-8696-6756f6ae4694"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6730),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("14e34f21-709a-4e7a-9953-83455e7eb0cf"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6731),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7e8de850-9c36-467b-ab01-f34d0f2607c3"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6733),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("201fe1a0-5eed-44d9-b9af-259576068b48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6737),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6d2fd800-6c3a-4875-9e12-20b1a3dfce63"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6738),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ffd7cb7-16da-43d7-9da7-404cb6950120"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6740),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("51e11be5-b5ea-49e2-8c47-873429ca287c"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6741),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("730d8e43-a0ec-4bdc-bb82-7f77c1fbdda1"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6746),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("548615b0-3b6a-40d6-81cc-e3269f176762"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6747),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b06b9cde-adb7-4582-b4c5-d77d150cec7d"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6749),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("879ee182-4aac-4ec7-bed0-accb171b44d2"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6750),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d6b4c1fe-ea9e-43b4-a9d5-aca59cca5c26"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6752),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("027703bc-c9ba-454b-a58e-c90873d50312"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6753),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f00820f6-6c7c-4b9f-b097-fbd9f2211f06"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6754),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1f689906-d592-4caf-bd7d-fb9c38a0de4f"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6756),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("11805b22-108e-4eef-82bf-98323191473d"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6760),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ebc660e-1594-4e9c-beab-1dd3c3e485dd"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6761),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f82484b5-7b1a-4b2a-87f4-dc371eede3cd"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6763),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("089f61ae-6a71-41e6-9f6a-b874fc660176"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6764),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ec97eb4d-a910-438f-8178-7338f61b26e0"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6766),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2f9265e5-fc95-4288-a811-7a79a329fbe3"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6767),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("341657f2-b7e2-4626-8e42-1656e726f52e"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6768),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e034aa6-3352-4648-8976-802eb64b28ec"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6894),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("eb209307-66af-4e92-afbb-78c600293e2c"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6899),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4d4b64a-f6a4-4c27-8ebb-93de587ca3b4"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6901),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd333a63-0c2b-48bd-996d-ece26fa88792"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6904),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0db87f4b-24e4-4479-a95c-66001f94d330"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6906),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("152827ce-5112-4b3c-b32b-3a3ce3ebd3ac"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6909),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2b72b1b3-010d-4e6d-b6e8-20505332c4e2"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6911),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("db779e39-77d4-40a7-9200-bd490196c7b2"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6912),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4fe08181-bff4-44f1-b801-03922b0a654d"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6914),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3303e12d-a1af-481b-8359-c9a1364b2985"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6916),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("94cecfb3-c050-45f9-a4b4-1b29b0152d58"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6918),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b38676d7-6f75-4797-8069-0bbaddab7a11"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6921),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("950facce-0519-42bd-be40-09d1a6f3f4f3"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6923),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ed771faa-7989-4840-b654-936a983a64c7"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6924),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a4bf8a84-401e-4056-b497-1cdc64660086"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6926),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d835af41-ec70-4e35-acea-8654fa8dec8e"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6927),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9b3c1327-0260-48b5-9bd1-cb29514dfb63"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6929),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0f168fa1-413e-4702-97dc-9f909c761916"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6953),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("39ca5a8b-4232-4ffc-9c9e-35a559e5877b"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6955),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8763469a-9b54-4df6-94ef-24afc6369fee"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6959),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0854e1db-35b8-482f-aaa0-590d38ef29fc"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6960),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("170dba08-b306-46e5-b74b-c7d23e5001bf"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6962),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ba9e159-4122-4ad6-be41-f288110fbcfa"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6963),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1cc0dabe-6649-4d90-bc4f-fd92269400c1"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6965),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0d0898bc-28ba-4c6f-98fc-bd7ed650adc5"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6966),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("661e16ca-063d-4ace-980c-361410fca613"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6968),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2b58e2d8-3dc6-451f-bb6b-46117d875fcd"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6969),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("28bc1084-73d1-4e45-8efc-895b737165b9"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6973),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("62f7b4e6-4034-46a2-a645-102b15b1a756"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6974),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b10300c9-f418-4457-b1ca-2159baa99d9d"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6975),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("86a0ed4c-f17b-44a8-8992-f29c9a795082"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6977),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5fe9307e-c52a-46b2-9cce-e5ceb595fe28"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6978),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7d3c9a07-9658-4b03-8e37-11eab7345502"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6980),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7fef34e8-d9a4-4ea3-9a6b-dd15d620b3b0"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6982),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("82ad5882-cd55-4f30-84d5-9a83501305eb"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6984),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("73308397-5391-4b37-9f73-3527297c50ba"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6987),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("61205078-dfd6-42b2-87a0-e83eb49ecc16"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6988),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d49b0a32-eb83-45b6-a9c3-e572314561da"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6990),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5b3966b5-24c9-43c4-9366-d26996d502a3"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6991),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("53f40433-0a52-44b2-9a8d-166d18367516"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6993),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("87b19be8-4534-4c6c-8d4a-a69d95764396"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6994),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("334832c2-d284-449f-89ce-ac3c17d397c8"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6996),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ac35b919-4ad7-4007-83d5-006d79ea9f1e"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(6997),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d06e90e9-2be2-4f83-978b-9ce0d03fa775"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7000),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("db9da90c-1074-4dd0-b07d-f2b88383527c"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7002),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4011f2e-38a8-4bc6-961d-bb7e733d29b1"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7003),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8360c5e9-ab87-46b1-a3f4-e3baceca298c"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7005),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7e1e95b1-7033-4359-a249-4f871f8764a0"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7006),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2a54579f-92e1-4f35-b4e4-4b48ae7e697e"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7008),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7067a817-a98c-459e-b631-7412a02a6fd9"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7009),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("00f39cae-bbe6-45c5-ae4b-8b354063093e"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7011),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("93dd06bd-8807-4ce2-a1ce-c62e79c6e215"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7014),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("60ee3640-2bbc-4af7-a83f-f02b4740de05"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7016),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b79a3d77-5766-46c2-854f-29662c06bbf6"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7017),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f15b8616-dd03-4187-ad67-4e837c2b8fb1"),
                            CompanyId = new Guid("0c7e4e02-c78a-410c-a4a9-1b32a7f2df48"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 33, 978, DateTimeKind.Local).AddTicks(7019),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6852d6b5-c4d5-4837-b5fa-50fdca7242a9"),
                            CompanyId = new Guid("790ffc62-8d24-4460-a27d-12032728aed3"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 8, DateTimeKind.Local).AddTicks(2779),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("00528c90-5e87-46ec-9188-d4a235967920"),
                            CompanyId = new Guid("0b31c53a-2ef5-4872-9401-6969416aa560"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 14, DateTimeKind.Local).AddTicks(2039),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ad97e104-1854-4472-b989-d0c43663911e"),
                            CompanyId = new Guid("df71d666-fcee-4ab9-87ab-d6e0615999cf"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 20, DateTimeKind.Local).AddTicks(685),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fb4113de-f198-4fe1-88f2-e309ca66e518"),
                            CompanyId = new Guid("c86e9ea3-d642-49ef-b903-2677b06c27a0"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 25, DateTimeKind.Local).AddTicks(9309),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e32c482d-eb66-44c1-b3df-9037032a986d"),
                            CompanyId = new Guid("27181829-9cd2-4eb0-bc9f-557c57afa7a5"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 31, DateTimeKind.Local).AddTicks(8217),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2092c2c-15c2-419a-8460-3bd7b728bc0f"),
                            CompanyId = new Guid("64a61aa1-89f7-48f3-a2f8-379eec32b3dc"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 37, DateTimeKind.Local).AddTicks(6898),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b1c4068a-6c67-41ac-8da2-b7644ad78613"),
                            CompanyId = new Guid("67ab1fa5-de44-4fac-a459-617ce25cf18e"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 43, DateTimeKind.Local).AddTicks(5562),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("214e6d52-646d-47b5-b443-7b9dd2d0e27c"),
                            CompanyId = new Guid("7c197d87-b380-44d7-9741-cf73e220ba09"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 49, DateTimeKind.Local).AddTicks(8170),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1ec51b05-98ac-42d2-9034-5ec7adb88d94"),
                            CompanyId = new Guid("6df6813a-f8d8-4df7-ae41-1165136511eb"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 56, DateTimeKind.Local).AddTicks(497),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("33004240-6b2f-440c-b8e7-a09f6d89649b"),
                            CompanyId = new Guid("8a01feda-c82e-4360-9c79-ac38fd84bff9"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 61, DateTimeKind.Local).AddTicks(9033),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ec07587f-9de6-4756-a302-4e802201d630"),
                            CompanyId = new Guid("acad92f8-f2bf-49b5-a0ef-10126da14184"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 67, DateTimeKind.Local).AddTicks(7538),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5522c410-dbe2-462f-8e87-6d5d1d9449c0"),
                            CompanyId = new Guid("910a74e9-dee9-49eb-bd72-b706f4b2dae0"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 73, DateTimeKind.Local).AddTicks(5962),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("81177806-7278-45b9-939a-bd14679d30c2"),
                            CompanyId = new Guid("e216856a-6205-4a09-b5a2-8a9d1d524360"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 79, DateTimeKind.Local).AddTicks(4232),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("008bcb91-496c-4ca9-aead-0a547c4a86f1"),
                            CompanyId = new Guid("036e34c7-64cb-4e3f-a3f9-6d6de28b0436"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 85, DateTimeKind.Local).AddTicks(3180),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8db85304-b891-430e-aa1b-7064132b7b56"),
                            CompanyId = new Guid("a4fb67e1-40f7-4f2d-8ae6-a84fdf0d426c"),
                            CreateDate = new DateTime(2023, 5, 11, 9, 35, 34, 91, DateTimeKind.Local).AddTicks(156),
                            Name = "Data Analyst",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd59a103-db7f-4dff-aead-c7832328af56"),
                            ConcurrencyStamp = "4L7DHBDND3VQIXGHEX54CT1QZ7WG6ONN",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61"),
                            ConcurrencyStamp = "Z4N6XVFY893N85R4ASH31DLLWBZZYF8I",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("451747c1-45d5-4f1f-a00a-e56c5c7b1d74"),
                            ConcurrencyStamp = "XHSSY0TI1UZ6AL0E7STK1PUKNCKF88LB",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("94c2bcdc-7dbf-4cf8-a053-eb5534f867f6"),
                            RoleId = new Guid("dd59a103-db7f-4dff-aead-c7832328af56")
                        },
                        new
                        {
                            UserId = new Guid("f2186b6c-4294-4448-8419-1c7b4520a964"),
                            RoleId = new Guid("dd59a103-db7f-4dff-aead-c7832328af56")
                        },
                        new
                        {
                            UserId = new Guid("a5981db3-b0d3-4e5d-8fa4-80da7416f86d"),
                            RoleId = new Guid("dd59a103-db7f-4dff-aead-c7832328af56")
                        },
                        new
                        {
                            UserId = new Guid("80570c85-e7b9-425b-b67c-8a7ee4b5ab4a"),
                            RoleId = new Guid("dd59a103-db7f-4dff-aead-c7832328af56")
                        },
                        new
                        {
                            UserId = new Guid("33cb8551-77d7-43ff-b305-2d68f1307f71"),
                            RoleId = new Guid("dd59a103-db7f-4dff-aead-c7832328af56")
                        },
                        new
                        {
                            UserId = new Guid("2cbc8181-9594-451a-ae3c-fd7c1201fa5f"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("d5dd2363-8a11-4fd2-b6ec-91635b09e25d"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("1c84649d-9aca-45db-967d-27b04b30ef85"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("28e06592-35f7-4387-ac28-4fa7c2b65ad7"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("c62b4d8f-6e77-4820-a095-e752e93d6ff2"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("ffb83a0d-8c70-4456-b277-ff418a592c63"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("9f120828-9658-4c2d-9d1e-2d21eb3ce8b7"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("c9841234-80c1-4a6f-ba91-9687f9a60ef3"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("26709fad-a014-457c-919b-b634174b0c7d"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("bf819692-436f-4569-82b8-9efdd2c7205e"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("0a2ded2a-d239-48aa-9208-fd680a848f59"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("d052f77a-5cd9-4132-b741-42c1cb144af9"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("f2d17da7-c782-4594-ba43-49f1112e6c34"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("cbfc66cc-6a8f-4e72-a5fd-69049955c23b"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        },
                        new
                        {
                            UserId = new Guid("b5f9cace-bfd5-4554-bd6d-90b118e90a75"),
                            RoleId = new Guid("d3b0cd8e-3a2e-4d23-abf0-3c8c7e16ab61")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId");

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
