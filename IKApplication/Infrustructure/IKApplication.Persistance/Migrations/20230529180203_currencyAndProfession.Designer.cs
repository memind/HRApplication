// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230529180203_currencyAndProfession")]
    partial class currencyAndProfession
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProfessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PatronId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ebed8a1-2d62-4c4d-ba24-364b37aa794d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 1, 22, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(480),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            ConcurrencyStamp = "1f29075b-8a77-4541-af7d-b0a664f36a3f",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(476),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "85048331620",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECVWJjgTSgd4da294WClrrpNhMM/9X8GHTDhY0QybLOWdbDA5S7HVCq+/T57+FX+FA==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905657351451",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "T272UJZ65K63XGILMGMFYOLJ5MZS23Y4",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("9e050e41-f5ea-4451-a1c8-1bb4ade067ad"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("8f86018a-91f8-43ef-b491-ef2061a813b5"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2064, 8, 30, 21, 2, 3, 101, DateTimeKind.Local).AddTicks(3561),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            ConcurrencyStamp = "b41403e2-8e49-4ec1-b805-65a8123476af",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 101, DateTimeKind.Local).AddTicks(3560),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "61242547326",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC2g+dZeUGkEp+ASguc6mRWdplI8lRohYEyowMp57MrIR06TOZ6TfMfKMprTmc4PhQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905858268415",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "P6JC53JEV6IKL9QCUHQ62DZ8GI5VU224",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("85290556-c190-464c-ad12-4ae6e1ade63a"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("b2755225-14e5-4f00-9434-1f88df384aab"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 4, 13, 21, 2, 3, 102, DateTimeKind.Local).AddTicks(6543),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            ConcurrencyStamp = "77d0fa6d-305b-48ac-92dc-07aa3c99abb4",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 102, DateTimeKind.Local).AddTicks(6542),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "58488124718",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBDtDoZtcQR9ggathIggjrQq6kvvWAfoBcspyz1A/0wR66JwgJZjw0o3txiACxnNrQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905880951586",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "76M8XNEMO35IUCYWK0BUO32MLS4G67TP",
                            Status = 1,
                            Surname = "Yıldırım",
                            TitleId = new Guid("294e4a64-a769-4790-ad96-176987a2891f"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("2a8d4ef3-6f78-4a90-af33-605da31d278a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 11, 15, 21, 2, 3, 103, DateTimeKind.Local).AddTicks(8913),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            ConcurrencyStamp = "6977a974-4d78-4f22-8a3e-8d32857e1c9b",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 103, DateTimeKind.Local).AddTicks(8912),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "45082326044",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMhqGvPuFfOCXJ3N+T1ohhAC0TddqYC+kZrgHldSM5pN9DLBqGylbuFEy+kWLY7z2w==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905120960678",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "YUZK5K8SK3DV5E1IQIZ19KQMWHBEEE5L",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("0a688378-ef8b-493a-97e8-0ca243378b05"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("61ee232a-1f82-4983-b582-9d21d6408248"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 10, 9, 21, 2, 3, 105, DateTimeKind.Local).AddTicks(1470),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            ConcurrencyStamp = "9ca7947f-731f-4914-bcd9-5987cce27b4a",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 105, DateTimeKind.Local).AddTicks(1469),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "87870744364",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEH90MWGZvJPA8kppZB788jCggrF/ZPYDf+HmEVLjfuYjTVEN2NrFzTQlj3dFZ/MvHA==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905954547552",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "MNTQAYT3NARBNUIA75WHWZZN37TQ6QVY",
                            Status = 1,
                            Surname = "Öztürk",
                            TitleId = new Guid("fb99977f-93ca-4c15-8335-ddd9beb6c093"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("8f043985-d8a6-42fc-ac06-8cf594f861b3"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 12, 23, 21, 2, 3, 106, DateTimeKind.Local).AddTicks(3984),
                            CompanyId = new Guid("b3e54d51-7039-4211-9238-a80bd94b7ed5"),
                            ConcurrencyStamp = "dbccb588-e0f9-4b40-94a6-7b52b0d23eb1",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 106, DateTimeKind.Local).AddTicks(3982),
                            Email = "ibrahim.yildiz@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "70526853466",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIZ@MICROSOFT.COM",
                            NormalizedUserName = "IBRAHIM.YILDIZ@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDmAxNp+BGDVb3lx752uJFEZ+e6XP/J8F6hL/QEy4ZayifqzD2PePRDSOsLbtg8KdA==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905481525113",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "R129D5DJY8BRX8XJ93H5D6IG1QWHB1MI",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("9458593b-dc0d-463e-abd9-5846a6926073"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildiz@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("775a3978-c2ce-4c82-8c4b-350e18876ddb"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 2, 25, 21, 2, 3, 107, DateTimeKind.Local).AddTicks(6283),
                            CompanyId = new Guid("d9800162-e8a7-48af-8033-d4efe3875b97"),
                            ConcurrencyStamp = "0410cc1c-6ffc-4c4b-a860-882eb4f3bd17",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 107, DateTimeKind.Local).AddTicks(6282),
                            Email = "ismail.yildirim@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "81727284188",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIRIM@GOOGLE.COM",
                            NormalizedUserName = "ISMAIL.YILDIRIM@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHgCimPIlX+S4ss3L2NKHGXj8slAv88zq12LylfLOnwtGYKhiMt0RDwO30k2oY7AiA==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905876184779",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "NK636DRYQCAOM38N3MVQHD6AWZ5BDADC",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("4a38a5e7-fa7c-4f35-8983-595ce4f8dad3"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildirim@google.com"
                        },
                        new
                        {
                            Id = new Guid("78267705-c7f1-4313-8812-e31275a67bee"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2053, 10, 16, 21, 2, 3, 108, DateTimeKind.Local).AddTicks(8766),
                            CompanyId = new Guid("e9efaf95-c9d3-4991-abb7-b08e02818d95"),
                            ConcurrencyStamp = "622fb6d8-7733-412f-9989-8a60e43d9555",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 108, DateTimeKind.Local).AddTicks(8766),
                            Email = "mehmet.celik@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "51633825294",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.CELIK@YAHOO.COM",
                            NormalizedUserName = "MEHMET.CELIK@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEO31YOEIVZatX6UTSsPfhnHn9krBGqywafI0LaMAUgx+OoOJ1uSnSASHQxDH++HUFg==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905866677043",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "U67ICKWQU3HVEV7FMI89XMV5BNEMX1ZA",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("b21a65f2-a52d-4f16-b348-895bac64bc4c"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.celik@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("2039f5ba-8513-4ced-92cf-2c401d61443d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 2, 18, 21, 2, 3, 110, DateTimeKind.Local).AddTicks(958),
                            CompanyId = new Guid("a4dbf9f7-2382-4d5f-9ada-bb6af5284a29"),
                            ConcurrencyStamp = "9ecf5f7d-69bf-43ec-8690-c4170d5f62d8",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 110, DateTimeKind.Local).AddTicks(957),
                            Email = "ahmet.yildiz@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "44315316142",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIZ@MICROSOFT.COM",
                            NormalizedUserName = "AHMET.YILDIZ@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED4xsSGmVXCbQL/cIb6Xf1EGltN4RQueY+ZwayEA2esSelEZ3kzH5p4GVD0kDZICNQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905874668465",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "0CLZTORG10VJY1YH07XSYCU8L1L729YE",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("7761dfb8-bdf4-480e-8278-b783a3c6b5ee"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildiz@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("a4deab07-b233-4700-88bf-d002d0ebc27f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 8, 27, 21, 2, 3, 111, DateTimeKind.Local).AddTicks(3262),
                            CompanyId = new Guid("b57cb575-9690-4b1f-9be0-d486bf89e2f0"),
                            ConcurrencyStamp = "4823ba26-b746-45f3-bd3b-5b7777c7a61b",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 111, DateTimeKind.Local).AddTicks(3261),
                            Email = "ahmet.sahin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "80575001220",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.SAHIN@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.SAHIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOJVxAOXC5/I8bZ4qh3fjIGVZj5gV+Pyb9TJnmyVYvq/RoZJNK9Mfq0vqXdrHxmOfQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905756771814",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "ZYQ2XK91RT47D35VLWETY1DP83VANKG2",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("aa618c50-7121-4146-8d38-042a41e6dde0"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.sahin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("619f341e-0b60-4b27-8eab-b68a93563804"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 4, 19, 21, 2, 3, 112, DateTimeKind.Local).AddTicks(5535),
                            CompanyId = new Guid("0301f8a6-9827-4fe9-8e87-4eed41170833"),
                            ConcurrencyStamp = "4dce4e9f-121c-47a0-8f54-aafdf348d8d1",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 112, DateTimeKind.Local).AddTicks(5534),
                            Email = "ibrahim.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "17387448530",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "IBRAHIM.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBRaRmKbMSQmisdffp7OeUY+uGQEzsG2x2gbKxr+/dEWVc3EXBlXfVTE0VbxEYTbSQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905599163574",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "WRW50S1E013YTQ63ISFPBAR7SBBQK5VS",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("6dcc8973-ae06-47e2-9383-b67925c30482"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("c48d740f-4a63-495e-9e8c-be099e9355da"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 10, 28, 21, 2, 3, 113, DateTimeKind.Local).AddTicks(8747),
                            CompanyId = new Guid("ac17ab07-bef7-4a3c-9acf-5d46f4203e86"),
                            ConcurrencyStamp = "25544542-1049-4f28-9d2b-ff4d85b2f7e8",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 113, DateTimeKind.Local).AddTicks(8746),
                            Email = "osman.yildiz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "55445343632",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.YILDIZ@YANDEX.COM",
                            NormalizedUserName = "OSMAN.YILDIZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIGvSCJJ82o3nt6wtsE1P3yyP6NkPeEOVDHomyOKkcSG46IdsxwXPWUxZagXfcXCRg==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905757103561",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "PJHN53TRN13TA6WF1JEQ0CZBD7CVVHWH",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("c62bfe62-7a37-412b-8e72-53e00b9cf330"),
                            TwoFactorEnabled = false,
                            UserName = "osman.yildiz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("f89dfe4b-6ced-4316-8d19-751221b346d3"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 4, 16, 21, 2, 3, 115, DateTimeKind.Local).AddTicks(1832),
                            CompanyId = new Guid("56c07785-dcc5-4448-b5aa-af011bf7711e"),
                            ConcurrencyStamp = "77d6bf48-272c-4c10-a71e-7b545d765f73",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 115, DateTimeKind.Local).AddTicks(1832),
                            Email = "ahmet.yildiz@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "45200314526",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIZ@YANDEX.COM",
                            NormalizedUserName = "AHMET.YILDIZ@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMh4sbPKPPvXbl3IRFGp1gEfQgm7Khlriq9WesVksFSKFGTaMesNS+HxZVJSk/akCA==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905443950885",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "AVDA5USRTSF2QJL7PPSA3PATIPIG0M15",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("a50df42d-9a40-4c1a-b0b9-95e6ae07aa8c"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildiz@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("53691b9b-7af3-4521-9e38-e46f88593f41"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 7, 11, 21, 2, 3, 116, DateTimeKind.Local).AddTicks(4839),
                            CompanyId = new Guid("85544b4c-3077-4c1d-8c8d-129b7a7b5ec5"),
                            ConcurrencyStamp = "53324d92-4a20-4a7d-9177-7dec53688b11",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 116, DateTimeKind.Local).AddTicks(4839),
                            Email = "ahmet.yildirim@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "13122452640",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIRIM@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.YILDIRIM@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELlUT1aLtp/9WaFoaxX4wKF7MdzksCY7R3M1RbCrF0wcyN430hmUbZyBrvopKPxxhg==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905426073471",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "LJ648FI91S1CRAJVQBZKJR1T1LZVB7RF",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("791ad158-e7b0-458c-ba9a-c85093eb2345"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildirim@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("2fe634f7-12ff-42a8-bf98-1986950b0723"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2076, 3, 19, 21, 2, 3, 117, DateTimeKind.Local).AddTicks(7393),
                            CompanyId = new Guid("44750478-0513-4836-95c1-8b537427d58d"),
                            ConcurrencyStamp = "ea33a22b-6568-40f9-adab-37785e311031",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 117, DateTimeKind.Local).AddTicks(7393),
                            Email = "ahmet.aydin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "28657682790",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.AYDIN@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.AYDIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELR7EIK1CYc1AK5cqREs4zkyl1XWzCgU0aO/W0JXgs95ecmgHgGqQo9bNEdYABq/Iw==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905635998889",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "20H6JWXF4JDSKPNI10CL2Y8XVHIE3IYU",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("35d4d68a-cec9-4a40-b866-209927e5bf49"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.aydin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("dd531f7d-9594-47fa-a5e8-83aba3148072"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 11, 28, 21, 2, 3, 118, DateTimeKind.Local).AddTicks(9749),
                            CompanyId = new Guid("2e436b3d-3a62-4221-9548-9163631aa310"),
                            ConcurrencyStamp = "d3e9d0a8-b3d0-43f8-8422-ae15c885e8e7",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 118, DateTimeKind.Local).AddTicks(9748),
                            Email = "ahmet.yildirim@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "82017532446",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.YILDIRIM@GOOGLE.COM",
                            NormalizedUserName = "AHMET.YILDIRIM@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENAO7TFuzbPg1kY5CuGeZpiWhV5algctL+4waeX4/vEiI6aUgf7aKsh1v+4CDdiNNw==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905615968013",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "OSX5APK435VESFMF1E82P0Z41L1H1SGW",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("e1672b77-2766-487d-bafd-a5f40b7d5f72"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.yildirim@google.com"
                        },
                        new
                        {
                            Id = new Guid("0b7a5bd6-ce40-4dca-a22d-c0cde22cd952"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 11, 28, 21, 2, 3, 120, DateTimeKind.Local).AddTicks(2133),
                            CompanyId = new Guid("25c98067-29d2-4df6-9af9-19817b07e803"),
                            ConcurrencyStamp = "9cf652a3-f87e-4222-a73a-43f45d244631",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 120, DateTimeKind.Local).AddTicks(2133),
                            Email = "ibrahim.ozturk@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "43008714692",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.OZTURK@HOTMAIL.COM",
                            NormalizedUserName = "IBRAHIM.OZTURK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMPW+g6Pfxi8pnFGI+Bt+SJkizY6CtiYCf+EvwYqb/7EZ9JLlHEou0riFDJg0/sP3A==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905369522651",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "30NA0IKCPW84PKD0KBBXWYVZQXYDL5KQ",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("320f52ff-7c7b-4aee-a8f5-4c6201d9d8e5"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.ozturk@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("4bd0d033-b30f-4d13-b298-630c8b565685"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 6, 1, 21, 2, 3, 121, DateTimeKind.Local).AddTicks(4802),
                            CompanyId = new Guid("bb952bd3-1858-4901-b151-62793d718f76"),
                            ConcurrencyStamp = "eb19e1e5-7136-41d8-872d-64d650aa6554",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 121, DateTimeKind.Local).AddTicks(4801),
                            Email = "ismail.yildirim@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "33600657718",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIRIM@OUTLOOK.COM",
                            NormalizedUserName = "ISMAIL.YILDIRIM@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGM1aA2Z3eJ6C0LnTjNvYedjt/exWUNfe6f+HAlVwbleGImPq+m+rkEZUHZaZfv1zQ==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905940533433",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "HOQE7HL8RHKX4JTBXCI18896JRBEW5Y8",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("b7b4707e-847f-4dd7-bed8-f8b2cee431e4"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildirim@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("248754ac-60c0-44db-91c5-5e46819b55c8"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 4, 19, 21, 2, 3, 122, DateTimeKind.Local).AddTicks(7157),
                            CompanyId = new Guid("40a011d8-7b9e-4b40-8a56-ce1af7d65568"),
                            ConcurrencyStamp = "fefd5ee8-dc00-4f99-bdfa-46ea78852ad7",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 122, DateTimeKind.Local).AddTicks(7156),
                            Email = "mehmet.aydin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "74528758354",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.AYDIN@HOTMAIL.COM",
                            NormalizedUserName = "MEHMET.AYDIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEO7z42tV0+WY1uGFlgdy8HTJmoE/0zbUhwQ47Ep4JgTrSyCNtze1MZZ05VGDek7Alg==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905790294979",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "RGFAI49A1BXXASA2B1PENHGDDMTHPFSM",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("e8c924ce-c325-4713-8ef2-f37dfdaec070"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.aydin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("f3320430-7163-4a44-abd1-9ed0e312a244"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2062, 5, 17, 21, 2, 3, 123, DateTimeKind.Local).AddTicks(9473),
                            CompanyId = new Guid("0986b5ae-b2d2-4271-977f-f78633d9ccc1"),
                            ConcurrencyStamp = "195689ec-ee7e-42b4-ad2a-ae300c304178",
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 123, DateTimeKind.Local).AddTicks(9472),
                            Email = "ibrahim.demir@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "45670053314",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.DEMIR@GOOGLE.COM",
                            NormalizedUserName = "IBRAHIM.DEMIR@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIYRwLdDAf03BA2H6PZPG3UPTIk0dTo1D8r+tlv6K1ieNhvMlBpGOzphMl6C1ptR2A==",
                            PatronId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "+905331439296",
                            PhoneNumberConfirmed = false,
                            ProfessionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SecurityStamp = "YSRXLMHOKAI1TVCMWIDRYFHES5QSZYK7",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("d4e8c337-fd69-427e-afee-5690a35ed77f"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.demir@google.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvanceToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceToId");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(346),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905522109252",
                            SectorId = new Guid("433c932c-26c9-4483-a901-46cb7717356c"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b3e54d51-7039-4211-9238-a80bd94b7ed5"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 106, DateTimeKind.Local).AddTicks(3973),
                            Email = "info@yildizlimitedsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 50,
                            PhoneNumber = "+905172622486",
                            SectorId = new Guid("ab522e9c-668e-4b8a-94d5-96c6d399c746"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("d9800162-e8a7-48af-8033-d4efe3875b97"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 107, DateTimeKind.Local).AddTicks(6276),
                            Email = "info@yildirimlimitedsirketi.com",
                            Name = "Yıldırım Limited Şirketi",
                            NumberOfEmployees = 55,
                            PhoneNumber = "+905552422911",
                            SectorId = new Guid("8c2b5483-1a24-4413-871a-8a2e395623a9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e9efaf95-c9d3-4991-abb7-b08e02818d95"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 108, DateTimeKind.Local).AddTicks(8706),
                            Email = "info@celikkollektifsirketi.com",
                            Name = "Çelik Kollektif Şirketi",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905777750056",
                            SectorId = new Guid("cb44e437-f28c-43a3-af55-5e0d9e7e19c4"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("a4dbf9f7-2382-4d5f-9ada-bb6af5284a29"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 110, DateTimeKind.Local).AddTicks(947),
                            Email = "info@yildizlimitedsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 70,
                            PhoneNumber = "+905311577213",
                            SectorId = new Guid("862c2289-e355-4f49-b301-e2d26ab66b5a"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("b57cb575-9690-4b1f-9be0-d486bf89e2f0"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 111, DateTimeKind.Local).AddTicks(3255),
                            Email = "info@sahinanonimsirketi.com",
                            Name = "Şahin Anonim Şirketi",
                            NumberOfEmployees = 84,
                            PhoneNumber = "+905134689735",
                            SectorId = new Guid("966b691a-31a1-4480-ab06-1d4683daebed"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("0301f8a6-9827-4fe9-8e87-4eed41170833"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 112, DateTimeKind.Local).AddTicks(5528),
                            Email = "info@yildizkomanditsirketi.com",
                            Name = "Yıldız Komandit Şirketi",
                            NumberOfEmployees = 38,
                            PhoneNumber = "+905908544585",
                            SectorId = new Guid("0875d4fd-dd9f-4d9f-8dff-895d1141ac8c"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("ac17ab07-bef7-4a3c-9acf-5d46f4203e86"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 113, DateTimeKind.Local).AddTicks(8735),
                            Email = "info@yildizanonimsirketi.com",
                            Name = "Yıldız Anonim Şirketi",
                            NumberOfEmployees = 69,
                            PhoneNumber = "+905647800403",
                            SectorId = new Guid("3ec797d4-8fc8-4057-aa42-d8c2163c6ccd"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("56c07785-dcc5-4448-b5aa-af011bf7711e"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 115, DateTimeKind.Local).AddTicks(1816),
                            Email = "info@yildizkollektifsirketi.com",
                            Name = "Yıldız Kollektif Şirketi",
                            NumberOfEmployees = 61,
                            PhoneNumber = "+905739302688",
                            SectorId = new Guid("5d77ab61-8cf6-4068-b493-13769ed912cb"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("85544b4c-3077-4c1d-8c8d-129b7a7b5ec5"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 116, DateTimeKind.Local).AddTicks(4832),
                            Email = "info@yildirimanonimsirketi.com",
                            Name = "Yıldırım Anonim Şirketi",
                            NumberOfEmployees = 74,
                            PhoneNumber = "+905803178295",
                            SectorId = new Guid("0dbf7859-3826-4841-b403-905d24c4fa41"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("44750478-0513-4836-95c1-8b537427d58d"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 117, DateTimeKind.Local).AddTicks(7356),
                            Email = "info@aydinkooperatifsirketi.com",
                            Name = "Aydın Kooperatif Şirketi",
                            NumberOfEmployees = 15,
                            PhoneNumber = "+905591219007",
                            SectorId = new Guid("ead9161f-649e-4f4b-ad91-0ee5477c2093"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("2e436b3d-3a62-4221-9548-9163631aa310"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 118, DateTimeKind.Local).AddTicks(9742),
                            Email = "info@yildirimlimitedsirketi.com",
                            Name = "Yıldırım Limited Şirketi",
                            NumberOfEmployees = 14,
                            PhoneNumber = "+905196450752",
                            SectorId = new Guid("8c2b5483-1a24-4413-871a-8a2e395623a9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("25c98067-29d2-4df6-9af9-19817b07e803"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 120, DateTimeKind.Local).AddTicks(2125),
                            Email = "info@ozturkkomanditsirketi.com",
                            Name = "Öztürk Komandit Şirketi",
                            NumberOfEmployees = 4,
                            PhoneNumber = "+905956890149",
                            SectorId = new Guid("8c2b5483-1a24-4413-871a-8a2e395623a9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("bb952bd3-1858-4901-b151-62793d718f76"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 121, DateTimeKind.Local).AddTicks(4794),
                            Email = "info@yildirimkollektifsirketi.com",
                            Name = "Yıldırım Kollektif Şirketi",
                            NumberOfEmployees = 54,
                            PhoneNumber = "+905165574294",
                            SectorId = new Guid("ead9161f-649e-4f4b-ad91-0ee5477c2093"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("40a011d8-7b9e-4b40-8a56-ce1af7d65568"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 122, DateTimeKind.Local).AddTicks(7149),
                            Email = "info@aydinlimitedsirketi.com",
                            Name = "Aydın Limited Şirketi",
                            NumberOfEmployees = 6,
                            PhoneNumber = "+905903759899",
                            SectorId = new Guid("cd20a820-42c8-4281-bfd2-36926c62f93d"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("0986b5ae-b2d2-4271-977f-f78633d9ccc1"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 123, DateTimeKind.Local).AddTicks(9466),
                            Email = "info@demiranonimsirketi.com",
                            Name = "Demir Anonim Şirketi",
                            NumberOfEmployees = 36,
                            PhoneNumber = "+905120208551",
                            SectorId = new Guid("cd20a820-42c8-4281-bfd2-36926c62f93d"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeaveDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ApprovedById");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac54939d-6f61-488c-8d88-fcdfeb1559dd"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(176),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("433c932c-26c9-4483-a901-46cb7717356c"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(190),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cb44e437-f28c-43a3-af55-5e0d9e7e19c4"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(191),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("862c2289-e355-4f49-b301-e2d26ab66b5a"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(192),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd20a820-42c8-4281-bfd2-36926c62f93d"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(193),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("966b691a-31a1-4480-ab06-1d4683daebed"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(222),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("05179807-32ec-4605-8fe1-133a29be87b6"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(225),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ead9161f-649e-4f4b-ad91-0ee5477c2093"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(226),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5d77ab61-8cf6-4068-b493-13769ed912cb"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(227),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("224880b4-56ad-4670-a72c-ebbf88242708"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(229),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cce3025e-7d82-4f61-b3c4-01b4921cef72"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(230),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8c2b5483-1a24-4413-871a-8a2e395623a9"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(231),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("865993b9-2ec0-47bd-8821-407d68f736e3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(232),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd73e2d5-856a-49a1-ab95-db055727640f"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(233),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7dc590fb-0fe8-4e77-91c8-c92feada899e"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(236),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4e9179d-5cd2-4b70-afea-2f32bf348c68"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(237),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b456118c-ebaa-4fcd-9b50-c4a5f048a752"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(238),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("34e967bb-240a-4f25-b501-3afbdc823c5a"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(240),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ec797d4-8fc8-4057-aa42-d8c2163c6ccd"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(241),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ab522e9c-668e-4b8a-94d5-96c6d399c746"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(242),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0875d4fd-dd9f-4d9f-8dff-895d1141ac8c"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(243),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2895a566-9b28-4ad8-82c5-cfbe1ad24d04"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(244),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("11f937dd-f85a-477c-8e9f-8f68fa67c1ec"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(246),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0dbf7859-3826-4841-b403-905d24c4fa41"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(247),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0ac2dc1-3fe8-46e3-ad7e-628c1881be41"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(364),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d705fcf7-2452-4d86-8ae4-6ffae7b0391d"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(367),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("13b1b52f-21de-428a-8c8b-49c670421efe"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(368),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("085a3ce3-3e27-4047-9fa8-a0715c4ee865"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(369),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8b303ba7-5aaf-4478-b079-b1c591ac1b0d"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(370),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1e8c36af-6828-42a9-8f95-8aed3412985b"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(372),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3abd9d54-4e5d-48a8-b5e0-07cf414e3298"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(373),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4984fea8-da23-4f05-bd76-eeaba2e73f14"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(374),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9e050e41-f5ea-4451-a1c8-1bb4ade067ad"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(377),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9b9c64c0-3000-4154-a70f-0dce26522539"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(379),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("30ab3241-bd68-42f5-9188-53460c38df59"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(380),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("514f3cfa-4c4e-4926-b73c-a31f05d2da3c"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(381),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bdc7043d-bac3-4e0b-ac47-57aa861d9bac"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(382),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1bb92b9f-37af-4ac8-af48-301557a16924"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(383),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bfdbe8f7-8201-451e-a699-d9daf40b2d90"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(384),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fcee848a-743d-4121-a527-b3bf977b0df1"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(385),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3d464f78-8818-4aac-b236-b1470532b0e6"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(388),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("294e4a64-a769-4790-ad96-176987a2891f"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(390),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("333d7054-6729-42e6-a921-5f4147e49615"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(391),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("73559151-1590-4da7-849a-bcc5ba506bba"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(392),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6d169411-a691-4735-b83d-ededbcaf53ad"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(393),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("65758767-4be4-49bf-adc2-147d24237bbe"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(394),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("da55e8ee-4f76-4ca4-a943-7880df55c7c4"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(395),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f511426a-d354-4fc1-9177-81d5d4c243e7"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(396),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("23cfb3ef-8d4f-46d4-b8e9-4f968ef0b3da"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(398),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f7a4ca58-6aac-4b0c-b9dd-b976d8338ea1"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(399),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e5637d75-6042-42e4-98ab-730aa336ced8"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(400),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0a688378-ef8b-493a-97e8-0ca243378b05"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(401),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9163456b-b4b9-4a40-a870-37ffec6f404a"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(425),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("56e58557-f444-48a8-a5ea-d1dbf6305f2d"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(427),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f11d9c99-fc2d-47fa-ae84-3179d168bc64"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(428),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ab108018-1967-42db-a1c0-97dbd37d255e"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(429),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0d6b370f-3a5a-4e49-bc50-09a05aaf08f1"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(432),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e505c11a-8fd3-46b2-ab61-560649ea8200"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(434),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7a85791e-6083-4880-bfc5-4bad6725380b"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(435),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1d63aacb-48aa-4635-889a-ce8a17f82caa"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(436),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("85290556-c190-464c-ad12-4ae6e1ade63a"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(437),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8f60841a-6fdb-4a09-9d32-bedf24f0d27b"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(437),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f1d07bb3-1a15-40ae-bfa1-3c014d98d704"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(438),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("79ba5f29-8602-47aa-aab6-e7a212a9e43d"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(439),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("499789d1-9dde-49be-97b5-12d4014ca161"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(442),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c47df793-a049-4c97-baad-d824260b5a11"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(443),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("38d7f2d5-80f7-44ff-a812-380d3125f9ba"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(444),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f23262ad-ad3f-431c-9cef-74767a5e1f10"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(445),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92772e36-af22-4dbc-b130-dca7f90642b9"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(446),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("61f17925-de30-4269-b2f5-9681192c7738"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(447),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("151e1236-86eb-420c-9ebe-a3e5c35ed4a5"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(448),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ed1229bc-65e2-4e5e-8182-6dae771e8ebd"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(448),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ea62747a-f235-4419-a3be-b662b49124bf"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(451),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("81e1df0e-df9d-487a-b5fc-48f0cae6f017"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(452),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("13baa901-4424-478e-98e3-12460187676a"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(453),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("903c8dcf-2696-4b36-b9e1-07e38adac7e9"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(454),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f36b2473-7799-4075-a41b-dd2a295601ca"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(454),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("287eebcd-636c-4aa5-ac5f-754c6a2d913b"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(455),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fb99977f-93ca-4c15-8335-ddd9beb6c093"),
                            CompanyId = new Guid("e6a8661e-1ce1-480d-8b4d-d5bf4a30e0d3"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 100, DateTimeKind.Local).AddTicks(456),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9458593b-dc0d-463e-abd9-5846a6926073"),
                            CompanyId = new Guid("b3e54d51-7039-4211-9238-a80bd94b7ed5"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 106, DateTimeKind.Local).AddTicks(3977),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4a38a5e7-fa7c-4f35-8983-595ce4f8dad3"),
                            CompanyId = new Guid("d9800162-e8a7-48af-8033-d4efe3875b97"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 107, DateTimeKind.Local).AddTicks(6278),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b21a65f2-a52d-4f16-b348-895bac64bc4c"),
                            CompanyId = new Guid("e9efaf95-c9d3-4991-abb7-b08e02818d95"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 108, DateTimeKind.Local).AddTicks(8709),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7761dfb8-bdf4-480e-8278-b783a3c6b5ee"),
                            CompanyId = new Guid("a4dbf9f7-2382-4d5f-9ada-bb6af5284a29"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 110, DateTimeKind.Local).AddTicks(951),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aa618c50-7121-4146-8d38-042a41e6dde0"),
                            CompanyId = new Guid("b57cb575-9690-4b1f-9be0-d486bf89e2f0"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 111, DateTimeKind.Local).AddTicks(3257),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6dcc8973-ae06-47e2-9383-b67925c30482"),
                            CompanyId = new Guid("0301f8a6-9827-4fe9-8e87-4eed41170833"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 112, DateTimeKind.Local).AddTicks(5530),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c62bfe62-7a37-412b-8e72-53e00b9cf330"),
                            CompanyId = new Guid("ac17ab07-bef7-4a3c-9acf-5d46f4203e86"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 113, DateTimeKind.Local).AddTicks(8740),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a50df42d-9a40-4c1a-b0b9-95e6ae07aa8c"),
                            CompanyId = new Guid("56c07785-dcc5-4448-b5aa-af011bf7711e"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 115, DateTimeKind.Local).AddTicks(1823),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("791ad158-e7b0-458c-ba9a-c85093eb2345"),
                            CompanyId = new Guid("85544b4c-3077-4c1d-8c8d-129b7a7b5ec5"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 116, DateTimeKind.Local).AddTicks(4835),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("35d4d68a-cec9-4a40-b866-209927e5bf49"),
                            CompanyId = new Guid("44750478-0513-4836-95c1-8b537427d58d"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 117, DateTimeKind.Local).AddTicks(7358),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e1672b77-2766-487d-bafd-a5f40b7d5f72"),
                            CompanyId = new Guid("2e436b3d-3a62-4221-9548-9163631aa310"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 118, DateTimeKind.Local).AddTicks(9744),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("320f52ff-7c7b-4aee-a8f5-4c6201d9d8e5"),
                            CompanyId = new Guid("25c98067-29d2-4df6-9af9-19817b07e803"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 120, DateTimeKind.Local).AddTicks(2127),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b7b4707e-847f-4dd7-bed8-f8b2cee431e4"),
                            CompanyId = new Guid("bb952bd3-1858-4901-b151-62793d718f76"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 121, DateTimeKind.Local).AddTicks(4797),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e8c924ce-c325-4713-8ef2-f37dfdaec070"),
                            CompanyId = new Guid("40a011d8-7b9e-4b40-8a56-ce1af7d65568"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 122, DateTimeKind.Local).AddTicks(7151),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4e8c337-fd69-427e-afee-5690a35ed77f"),
                            CompanyId = new Guid("0986b5ae-b2d2-4271-977f-f78633d9ccc1"),
                            CreateDate = new DateTime(2023, 5, 29, 21, 2, 3, 123, DateTimeKind.Local).AddTicks(9468),
                            Name = "Teacher",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac"),
                            ConcurrencyStamp = "3341HXXKV3QS3KVVIM9F3KL3Z1LK4YTM",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66"),
                            ConcurrencyStamp = "DHYD102FJKSVGV7U6Q6MN56GDJ3E09HY",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("719553c4-19fa-47b0-bf35-a29604b475cc"),
                            ConcurrencyStamp = "DJ2AHRFNTUIPANG9A8LQ1PJ3MQJTBHR7",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0ebed8a1-2d62-4c4d-ba24-364b37aa794d"),
                            RoleId = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac")
                        },
                        new
                        {
                            UserId = new Guid("8f86018a-91f8-43ef-b491-ef2061a813b5"),
                            RoleId = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac")
                        },
                        new
                        {
                            UserId = new Guid("b2755225-14e5-4f00-9434-1f88df384aab"),
                            RoleId = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac")
                        },
                        new
                        {
                            UserId = new Guid("2a8d4ef3-6f78-4a90-af33-605da31d278a"),
                            RoleId = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac")
                        },
                        new
                        {
                            UserId = new Guid("61ee232a-1f82-4983-b582-9d21d6408248"),
                            RoleId = new Guid("783be846-6d5a-4b95-963a-bdd977ab24ac")
                        },
                        new
                        {
                            UserId = new Guid("8f043985-d8a6-42fc-ac06-8cf594f861b3"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("775a3978-c2ce-4c82-8c4b-350e18876ddb"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("78267705-c7f1-4313-8812-e31275a67bee"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("2039f5ba-8513-4ced-92cf-2c401d61443d"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("a4deab07-b233-4700-88bf-d002d0ebc27f"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("619f341e-0b60-4b27-8eab-b68a93563804"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("c48d740f-4a63-495e-9e8c-be099e9355da"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("f89dfe4b-6ced-4316-8d19-751221b346d3"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("53691b9b-7af3-4521-9e38-e46f88593f41"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("2fe634f7-12ff-42a8-bf98-1986950b0723"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("dd531f7d-9594-47fa-a5e8-83aba3148072"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("0b7a5bd6-ce40-4dca-a22d-c0cde22cd952"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("4bd0d033-b30f-4d13-b298-630c8b565685"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("248754ac-60c0-44db-91c5-5e46819b55c8"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        },
                        new
                        {
                            UserId = new Guid("f3320430-7163-4a44-abd1-9ed0e312a244"),
                            RoleId = new Guid("29b2fd25-ec67-40e3-8518-492cfa91ac66")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Address", "Address")
                        .WithOne("AppUser")
                        .HasForeignKey("IKApplication.Domain.Entites.AppUser", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Patron")
                        .WithMany("Employees")
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Profession", "Profession")
                        .WithMany("AppUsers")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Patron");

                    b.Navigation("Profession");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AdvanceTo")
                        .WithMany("CashAdvances")
                        .HasForeignKey("AdvanceToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("ApproveCashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceTo");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveExpenses")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ApprovedBy")
                        .WithMany("ApproveLeaves")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("ApprovedBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Navigation("AppUser")
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("ApproveCashAdvances");

                    b.Navigation("ApproveExpenses");

                    b.Navigation("ApproveLeaves");

                    b.Navigation("CashAdvances");

                    b.Navigation("Employees");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Profession", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
