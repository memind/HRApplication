// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230518153311_advanceSync")]
    partial class advanceSync
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c655f87-fe0d-43b5-887a-6c88f78eadc4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 1, 17, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9484),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            ConcurrencyStamp = "fb47fae7-0613-4e72-8922-1a111a9d3780",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9479),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "63248761478",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEItVHV5fHw9X3DbQVtQHCRgTO7NZwc1Mot58WEeO3eulSEBqv1m4574r4sCzO+N+Fg==",
                            PhoneNumber = "+905430457249",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "GY2IECDM6N4FYLSBBGLD5IP06FL28JUB",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("f774a8f0-0999-401f-b1d2-89790dcae4d2"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("681478c6-242c-4dcc-85ec-2ea7baf47a85"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 7, 22, 18, 33, 11, 629, DateTimeKind.Local).AddTicks(3874),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            ConcurrencyStamp = "96d71591-8893-4081-8d8a-048411013ab7",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 629, DateTimeKind.Local).AddTicks(3866),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "85080847448",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJZVTSBEPrkD9bYP12pU8B9wkKVcEi+bNADf83uW1vhe3RNldFXx1XKgZpJJpOwQbA==",
                            PhoneNumber = "+905377075247",
                            PhoneNumberConfirmed = false,
                            Profession = "Pharmacist",
                            SecurityStamp = "BH7Z9KFQAYIWZVBV0BAIX0KPHCTIIZDZ",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("05caa53e-3f29-4ce2-afba-424236382fda"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("cd0f0b99-69ba-474c-90ed-0cccdb963a7c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2056, 12, 7, 18, 33, 11, 630, DateTimeKind.Local).AddTicks(7572),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            ConcurrencyStamp = "8265a3ef-0ff8-41a2-8255-5b5dff0a640c",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 630, DateTimeKind.Local).AddTicks(7569),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "71527055866",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDFzQGCVdq7pSfHLesVk025k5NKyTuHG+JOwUQuWFzvAOJ4oBtP5XGhdjlIPKjIktg==",
                            PhoneNumber = "+905973236068",
                            PhoneNumberConfirmed = false,
                            Profession = "Newsreader",
                            SecurityStamp = "LMSXI1L9VBUY3T5MJPXS6BKR7E525WWO",
                            Status = 1,
                            Surname = "Özdemir",
                            TitleId = new Guid("4a36243e-313e-47f8-9834-86ad1bfdf011"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("f6ce342a-561f-4d9b-9c60-5fa299e73f61"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2075, 7, 18, 18, 33, 11, 632, DateTimeKind.Local).AddTicks(1525),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            ConcurrencyStamp = "c6f7d5e1-0635-451e-8d8f-567674238799",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 632, DateTimeKind.Local).AddTicks(1522),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "54325656466",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHU12jYvjl8WaDmX5NWU6GfnS4BAEcdGPmOPEcO4ThHjt9+Mp9zgj/1V990OINqxOw==",
                            PhoneNumber = "+905997064325",
                            PhoneNumberConfirmed = false,
                            Profession = "Soldier",
                            SecurityStamp = "PXBFEW7EX2W5AYTZ8VDC1IAYPRQOI926",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("f0fbaf29-cb40-445d-aad1-529cba19d1e2"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("679e9d0b-d12b-472a-b52c-0df33a5ced10"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2053, 10, 12, 18, 33, 11, 633, DateTimeKind.Local).AddTicks(5220),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            ConcurrencyStamp = "256e5e1d-94a2-47c0-84d9-0400b96f40ba",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 633, DateTimeKind.Local).AddTicks(5218),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "41334103234",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN8i0RxEtXUzqT5Pm970ePgYHcDbHNB8ZsnkI1UCcE3izH0fac6zMCAQPH98KLmHEA==",
                            PhoneNumber = "+905198165989",
                            PhoneNumberConfirmed = false,
                            Profession = "Florist",
                            SecurityStamp = "FVOLS5YE7IM50GBVWEVBNJHVENVFMZG8",
                            Status = 1,
                            Surname = "Demir",
                            TitleId = new Guid("df2955ba-4e4a-407b-a6fe-73ad411b9127"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("f0c10cd8-d165-4c12-93f6-4b6887127a0e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2046, 10, 4, 18, 33, 11, 634, DateTimeKind.Local).AddTicks(9022),
                            CompanyId = new Guid("868440d4-ab7f-4155-8a1d-698fadda0644"),
                            ConcurrencyStamp = "384ade3d-e954-4051-8f5b-85646b90e8c2",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 634, DateTimeKind.Local).AddTicks(9020),
                            Email = "osman.yildirim@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "38414776426",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.YILDIRIM@OUTLOOK.COM",
                            NormalizedUserName = "OSMAN.YILDIRIM@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBisoH0/IrJ6Sl/ZaPN99FWlXDnGhCeMuIi6lM2LoDriMeo/Tc7qCpRmrm8U6YHmhA==",
                            PhoneNumber = "+905312083794",
                            PhoneNumberConfirmed = false,
                            Profession = "Shop assistant",
                            SecurityStamp = "2J3W1UN95N140S1H09SOSOL6L8A88P0U",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("047a5115-2b1c-4123-95df-dbdd59c55a43"),
                            TwoFactorEnabled = false,
                            UserName = "osman.yildirim@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("3e783ca2-5b37-420e-971a-69cfb1d8d749"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 5, 2, 18, 33, 11, 636, DateTimeKind.Local).AddTicks(2792),
                            CompanyId = new Guid("ae628b87-907f-4daa-a2c5-06e884ac606f"),
                            ConcurrencyStamp = "0f70137c-148b-4a80-8fd6-1930317b5f08",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 636, DateTimeKind.Local).AddTicks(2791),
                            Email = "osman.yilmaz@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "72728578758",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.YILMAZ@HOTMAIL.COM",
                            NormalizedUserName = "OSMAN.YILMAZ@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELWESCoGNvWufLkflVd3qIUNFKL0XYbJ/zWdIjBdBNOVIyiNgykkzzhPgkjWyWpp5A==",
                            PhoneNumber = "+905716810708",
                            PhoneNumberConfirmed = false,
                            Profession = "Tailor",
                            SecurityStamp = "2FEU3E8EDSBZSCMESG787VYBFRXLD1UE",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("d4035060-daf9-47cf-8e7f-fb6778f2c024"),
                            TwoFactorEnabled = false,
                            UserName = "osman.yilmaz@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("50f9458f-1931-4f0e-9fdb-f6c04e4946d4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 4, 23, 18, 33, 11, 637, DateTimeKind.Local).AddTicks(6501),
                            CompanyId = new Guid("176e8a94-9006-41f0-8134-898438aa012a"),
                            ConcurrencyStamp = "f053bff7-eb34-4a3f-9c76-06e93d12d0f0",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 637, DateTimeKind.Local).AddTicks(6500),
                            Email = "yusuf.yildiz@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "63007420080",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILDIZ@MICROSOFT.COM",
                            NormalizedUserName = "YUSUF.YILDIZ@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOffcAofiuAdd1PVK4suT+f3BECwBlp40y3dMmyeWL9dEsAU67dyklPcDs+4wy4pOg==",
                            PhoneNumber = "+905896045247",
                            PhoneNumberConfirmed = false,
                            Profession = "Butcher",
                            SecurityStamp = "1C1ZD392KRXV25O1TM3HF1OEKB232M9F",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("7fe70f6d-69a8-414e-90d9-1163f73de5df"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yildiz@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("b11aad72-9709-4e51-a7fe-cec4ba278173"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2042, 9, 14, 18, 33, 11, 639, DateTimeKind.Local).AddTicks(627),
                            CompanyId = new Guid("99fb68cb-3b77-41b8-9f75-94ce45d51e6b"),
                            ConcurrencyStamp = "934eae9b-6c6b-4a70-8816-20701df1dd70",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 639, DateTimeKind.Local).AddTicks(625),
                            Email = "osman.kaya@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "10423453574",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.KAYA@YANDEX.COM",
                            NormalizedUserName = "OSMAN.KAYA@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKH2xRCep2CREs2yUB0RyikfgUzPS8P+iNO3P2ugLsgkEv1aJfUugoEt/krDX7MfVA==",
                            PhoneNumber = "+905601392036",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "N1K2A7C5B4ATK1IXOKA4HORA297CGYNT",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("0d6275ff-4fa1-4a06-a647-888f70819ed5"),
                            TwoFactorEnabled = false,
                            UserName = "osman.kaya@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("10083ba2-0926-4297-926a-9196ed002c30"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2076, 4, 11, 18, 33, 11, 640, DateTimeKind.Local).AddTicks(4601),
                            CompanyId = new Guid("aefb6d3e-b970-4bac-9659-170a63b731a7"),
                            ConcurrencyStamp = "3185e374-0664-4105-a12b-39fe81e31f15",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 640, DateTimeKind.Local).AddTicks(4600),
                            Email = "mehmet.ozdemir@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "25037337820",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "MEHMET.OZDEMIR@OUTLOOK.COM",
                            NormalizedUserName = "MEHMET.OZDEMIR@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELIOWr2SckuEfipAMkGViCsPyJejonYacvZx1De6JlarBSSwVQOh4DglmY3wtTBABQ==",
                            PhoneNumber = "+905494482847",
                            PhoneNumberConfirmed = false,
                            Profession = "Waiter/Waitress",
                            SecurityStamp = "PVCOW6NNGANFRMF36GOZ28X8C7O5FXWB",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("1af05b79-c2b9-48f3-806d-5ead23223620"),
                            TwoFactorEnabled = false,
                            UserName = "mehmet.ozdemir@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("5415c26e-556e-4392-9ac9-dafac9d49329"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 9, 12, 18, 33, 11, 641, DateTimeKind.Local).AddTicks(8034),
                            CompanyId = new Guid("64aee2e4-bc6e-4f37-b314-0eac30a77aa8"),
                            ConcurrencyStamp = "8714f7e0-801a-4c8c-92d7-7f9bca1327cc",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 641, DateTimeKind.Local).AddTicks(8032),
                            Email = "huseyin.celik@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "31813215756",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.CELIK@GOOGLE.COM",
                            NormalizedUserName = "HUSEYIN.CELIK@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOGrSHmU/lOn4oqo8X4Np8ludiAH9X1GwsNjYt7UFGm60iRx+eWiWNGXevWh7VdnfQ==",
                            PhoneNumber = "+905607547861",
                            PhoneNumberConfirmed = false,
                            Profession = "Secretary",
                            SecurityStamp = "S2WPUJAHUM3JTQY82B8NYMJ4BE592PUZ",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("54f37ed2-9900-4f24-9600-5c40239d3f41"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.celik@google.com"
                        },
                        new
                        {
                            Id = new Guid("57f0cc7b-4a3d-4d7d-bcbb-0c46ac56bd18"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 9, 19, 18, 33, 11, 643, DateTimeKind.Local).AddTicks(1834),
                            CompanyId = new Guid("a67e8bae-1b8f-489a-83d1-5617377613b8"),
                            ConcurrencyStamp = "98bb8195-06f3-4163-af85-1d99b1f421d4",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 643, DateTimeKind.Local).AddTicks(1832),
                            Email = "mustafa.yilmaz@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "50382646532",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILMAZ@YAHOO.COM",
                            NormalizedUserName = "MUSTAFA.YILMAZ@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOQhNRNDbEtqzP7Gbww3LQqQqc8KwsCZsN9vlSV7EljjXbj3M1+qI+tvLcjCc0v9cA==",
                            PhoneNumber = "+905944637240",
                            PhoneNumberConfirmed = false,
                            Profession = "Mechanic",
                            SecurityStamp = "SJEPYD77IPFMLD5PRN0H7X4087AMCSQZ",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("bbebd5b3-86de-4829-8ee2-a79b02095a17"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yilmaz@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("49e4161c-eda9-4543-8937-5902f78da11a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2047, 9, 7, 18, 33, 11, 644, DateTimeKind.Local).AddTicks(5594),
                            CompanyId = new Guid("d28f5f9a-7010-444c-ad0f-2d4dd98a288c"),
                            ConcurrencyStamp = "af140036-af4e-47d0-85bc-dd55f9b72ab2",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 644, DateTimeKind.Local).AddTicks(5593),
                            Email = "huseyin.aydin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "67654807430",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.AYDIN@HOTMAIL.COM",
                            NormalizedUserName = "HUSEYIN.AYDIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF1PtMYsV0I8boHm53QKE1iqNw2suNKFemZww9dCbsJAeZ0xTj1ydTPyHY7tVNBsKw==",
                            PhoneNumber = "+905224638182",
                            PhoneNumberConfirmed = false,
                            Profession = "Farmer",
                            SecurityStamp = "8G1ERCIXPWYQZ40ULKO430UQ9D4V8BQL",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("7d4271ab-ec91-4d3a-acfc-9085397d49d5"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.aydin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("7efe0ef2-774d-48d1-90fb-c3ae16877087"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2065, 10, 30, 18, 33, 11, 645, DateTimeKind.Local).AddTicks(9229),
                            CompanyId = new Guid("302f8fea-9db4-416a-8a47-31c4a21bc34f"),
                            ConcurrencyStamp = "13bfcd23-4d68-491f-9ee9-0e684f5f90b2",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 645, DateTimeKind.Local).AddTicks(9228),
                            Email = "hasan.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "72877348264",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "HASAN.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJT6IlwuGw8mtAIEXb+g0Jf5Em28wpFC2mm0tPyjpM7c1KWourV8lRX6HWBl4pfilw==",
                            PhoneNumber = "+905431855951",
                            PhoneNumberConfirmed = false,
                            Profession = "Scientist",
                            SecurityStamp = "9INRPBGGQKIRSANFVQPSMSPP4W0S96C8",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("3ee2ff34-aaeb-4c4b-8323-8c9ae397fd20"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("96b83eb2-b6db-4834-b126-7472424254dd"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2056, 10, 4, 18, 33, 11, 647, DateTimeKind.Local).AddTicks(2889),
                            CompanyId = new Guid("e2de0c2f-cddf-4c21-b392-7e190f16dab1"),
                            ConcurrencyStamp = "57947c19-955b-4c0c-98fe-e722cd10edec",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 647, DateTimeKind.Local).AddTicks(2888),
                            Email = "ismail.yildiz@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "51002034500",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIZ@OUTLOOK.COM",
                            NormalizedUserName = "ISMAIL.YILDIZ@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENNIpREZhoEyun13+y0cgzoD9OMJxui0jrMJxsLID31EhYxxfJn2D6cSbYxsln6VUQ==",
                            PhoneNumber = "+905755463426",
                            PhoneNumberConfirmed = false,
                            Profession = "Busdriver",
                            SecurityStamp = "FKSREAUU7XNC5SHFQH2UJSCFIO15S59G",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("1c6d4af5-9657-4512-b569-225b09e8c19e"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildiz@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("0ff0eba9-3c7b-41ca-b770-9ca74a7a7c41"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 4, 20, 18, 33, 11, 648, DateTimeKind.Local).AddTicks(6538),
                            CompanyId = new Guid("1ac947c4-c3d1-4cd5-9394-2b4cb6812f5b"),
                            ConcurrencyStamp = "fec94ef8-df4c-4eeb-845b-74d68ba4837b",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 648, DateTimeKind.Local).AddTicks(6537),
                            Email = "ibrahim.celik@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "78412362160",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.CELIK@MICROSOFT.COM",
                            NormalizedUserName = "IBRAHIM.CELIK@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFwZ93WOhzueO65Aphye+7pzR0Boogj+L9J3NIUVkWXFHYVlK/cvJBig87g2RdcjGw==",
                            PhoneNumber = "+905281466673",
                            PhoneNumberConfirmed = false,
                            Profession = "Lawyer",
                            SecurityStamp = "RHB5E56ZV349LPN25Y4RKBNZXWKVUV5B",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("ac78e419-04b5-44d1-bc3c-c6db8db6361d"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.celik@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("72f5f61f-5063-4363-b951-94f5b82ddcf7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2063, 12, 24, 18, 33, 11, 650, DateTimeKind.Local).AddTicks(171),
                            CompanyId = new Guid("10d4756c-632f-444f-b3d1-cb76360bb181"),
                            ConcurrencyStamp = "65b8df58-5255-4095-bcf7-4295055f881a",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 650, DateTimeKind.Local).AddTicks(170),
                            Email = "huseyin.demir@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "76260757718",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.DEMIR@OUTLOOK.COM",
                            NormalizedUserName = "HUSEYIN.DEMIR@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAeApJ6i0lft13hcDDgsPC/Ed0dG4irm5qM95yFlwDSD3qgbO7NsmtwMSRfh7q8HHg==",
                            PhoneNumber = "+905903783758",
                            PhoneNumberConfirmed = false,
                            Profession = "Teacher",
                            SecurityStamp = "FMNTVJK9XSLVK9JNEX18OLG29JMGE8HM",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("32cd6a5b-78ae-49a7-903b-ad41e02c5629"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.demir@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("05f638e8-e75d-464a-bdeb-33a4e0ceabe9"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 4, 27, 18, 33, 11, 651, DateTimeKind.Local).AddTicks(3671),
                            CompanyId = new Guid("e75594dd-6197-4608-8add-3ae264c52a79"),
                            ConcurrencyStamp = "8298031e-cb6e-43d5-8cdf-557e83a6ae56",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 651, DateTimeKind.Local).AddTicks(3670),
                            Email = "ismail.ozdemir@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "11213035512",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.OZDEMIR@HOTMAIL.COM",
                            NormalizedUserName = "ISMAIL.OZDEMIR@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF8XzoqMP0nNHQEHqbu9cOsmB8xSj7nJbuu+wed7IN4OzWF/8mlHQRsFjHrI4wmr0Q==",
                            PhoneNumber = "+905351796122",
                            PhoneNumberConfirmed = false,
                            Profession = "Judge",
                            SecurityStamp = "UN2IVSMLIY9KK12JGND6PME32ILKXS30",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("3373e07d-339a-4af9-8070-0379e4d6fea3"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.ozdemir@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("e1370e43-fd21-4c85-97d2-a45f897be275"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 1, 6, 18, 33, 11, 652, DateTimeKind.Local).AddTicks(7501),
                            CompanyId = new Guid("f8cb8e4a-2788-4ef1-9f8b-d70e5f4b5a87"),
                            ConcurrencyStamp = "95fcf270-a7e0-4e7c-b5c9-bc13a8e607d1",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 652, DateTimeKind.Local).AddTicks(7500),
                            Email = "osman.celik@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "47788085096",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.CELIK@OUTLOOK.COM",
                            NormalizedUserName = "OSMAN.CELIK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEZqwLmDlE7FvtqOlZbu4e0qcUY1/icNCdolNrOQHUA/UDEur21iHMAD95UF9pGwQg==",
                            PhoneNumber = "+905506548596",
                            PhoneNumberConfirmed = false,
                            Profession = "Doctor",
                            SecurityStamp = "86F9YBE1T3CXFLYZ5LT6UBX1724Z0ZZ2",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("4148b0f2-35d8-4552-8714-ffc92dc694ae"),
                            TwoFactorEnabled = false,
                            UserName = "osman.celik@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("54fa39d6-b8d2-4881-bc31-7218c1697b49"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 10, 8, 18, 33, 11, 654, DateTimeKind.Local).AddTicks(1524),
                            CompanyId = new Guid("729811ae-3eb3-44e9-a016-ba70480db52b"),
                            ConcurrencyStamp = "0ccef7c2-8a53-43dc-b4c5-880076280a9c",
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 654, DateTimeKind.Local).AddTicks(1523),
                            Email = "ismail.yildirim@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "22382823640",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.YILDIRIM@OUTLOOK.COM",
                            NormalizedUserName = "ISMAIL.YILDIRIM@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOR6XR9qbVE+cTIA+y4T4JP9VIFptk0COp9Hzsl3Bb3ufT55C5STl/fyyEY1PcQT4g==",
                            PhoneNumber = "+905584163216",
                            PhoneNumberConfirmed = false,
                            Profession = "Traffic warden",
                            SecurityStamp = "2AQO8GWM5HDQ4F5HAAB3NZKMH86Y5W7P",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("d0da5f8b-2b20-4e25-a56d-d57371f6ec10"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.yildirim@outlook.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvanceToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceToId");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9328),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905308599091",
                            SectorId = new Guid("a6d9efe9-9359-402c-be1f-3c16d1e4b06f"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("868440d4-ab7f-4155-8a1d-698fadda0644"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 634, DateTimeKind.Local).AddTicks(9003),
                            Email = "info@yildirimkooperatifsirketi.com",
                            Name = "Yıldırım Kooperatif Şirketi",
                            NumberOfEmployees = 63,
                            PhoneNumber = "+905703084298",
                            SectorId = new Guid("a14aeeed-cbc5-42ae-ab87-395a396adbc8"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("ae628b87-907f-4daa-a2c5-06e884ac606f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 636, DateTimeKind.Local).AddTicks(2780),
                            Email = "info@yilmazkollektifsirketi.com",
                            Name = "Yılmaz Kollektif Şirketi",
                            NumberOfEmployees = 84,
                            PhoneNumber = "+905374623765",
                            SectorId = new Guid("30447641-e436-4a04-8dc1-c025a1043819"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("176e8a94-9006-41f0-8134-898438aa012a"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 637, DateTimeKind.Local).AddTicks(6490),
                            Email = "info@yildizanonimsirketi.com",
                            Name = "Yıldız Anonim Şirketi",
                            NumberOfEmployees = 74,
                            PhoneNumber = "+905356615208",
                            SectorId = new Guid("b5c16064-d333-4e7c-8c29-eb350ec50c90"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("99fb68cb-3b77-41b8-9f75-94ce45d51e6b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 639, DateTimeKind.Local).AddTicks(607),
                            Email = "info@kayakollektifsirketi.com",
                            Name = "Kaya Kollektif Şirketi",
                            NumberOfEmployees = 34,
                            PhoneNumber = "+905809005198",
                            SectorId = new Guid("30447641-e436-4a04-8dc1-c025a1043819"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("aefb6d3e-b970-4bac-9659-170a63b731a7"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 640, DateTimeKind.Local).AddTicks(4586),
                            Email = "info@ozdemirlimitedsirketi.com",
                            Name = "Özdemir Limited Şirketi",
                            NumberOfEmployees = 56,
                            PhoneNumber = "+905267356770",
                            SectorId = new Guid("cc46ea27-66fe-4c29-8b61-4af6c2ac11c4"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("64aee2e4-bc6e-4f37-b314-0eac30a77aa8"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 641, DateTimeKind.Local).AddTicks(8025),
                            Email = "info@celikkooperatifsirketi.com",
                            Name = "Çelik Kooperatif Şirketi",
                            NumberOfEmployees = 64,
                            PhoneNumber = "+905496908782",
                            SectorId = new Guid("4c60741c-a0bf-4e9b-b920-4c735e09008f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("a67e8bae-1b8f-489a-83d1-5617377613b8"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 643, DateTimeKind.Local).AddTicks(1823),
                            Email = "info@yilmazkomanditsirketi.com",
                            Name = "Yılmaz Komandit Şirketi",
                            NumberOfEmployees = 61,
                            PhoneNumber = "+905797845817",
                            SectorId = new Guid("ae8c34af-6033-4a5a-8a34-65d401027387"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("d28f5f9a-7010-444c-ad0f-2d4dd98a288c"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 644, DateTimeKind.Local).AddTicks(5578),
                            Email = "info@aydinkooperatifsirketi.com",
                            Name = "Aydın Kooperatif Şirketi",
                            NumberOfEmployees = 74,
                            PhoneNumber = "+905546498281",
                            SectorId = new Guid("0328465e-f461-4c4c-8857-283d548e61aa"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("302f8fea-9db4-416a-8a47-31c4a21bc34f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 645, DateTimeKind.Local).AddTicks(9170),
                            Email = "info@yildizkomanditsirketi.com",
                            Name = "Yıldız Komandit Şirketi",
                            NumberOfEmployees = 87,
                            PhoneNumber = "+905816525037",
                            SectorId = new Guid("a6d9efe9-9359-402c-be1f-3c16d1e4b06f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e2de0c2f-cddf-4c21-b392-7e190f16dab1"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 647, DateTimeKind.Local).AddTicks(2877),
                            Email = "info@yildizkomanditsirketi.com",
                            Name = "Yıldız Komandit Şirketi",
                            NumberOfEmployees = 66,
                            PhoneNumber = "+905451725137",
                            SectorId = new Guid("cc46ea27-66fe-4c29-8b61-4af6c2ac11c4"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("1ac947c4-c3d1-4cd5-9394-2b4cb6812f5b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 648, DateTimeKind.Local).AddTicks(6526),
                            Email = "info@celikkollektifsirketi.com",
                            Name = "Çelik Kollektif Şirketi",
                            NumberOfEmployees = 32,
                            PhoneNumber = "+905354704631",
                            SectorId = new Guid("d13b573e-d00c-4be2-be6a-39c533f3b922"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("10d4756c-632f-444f-b3d1-cb76360bb181"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 650, DateTimeKind.Local).AddTicks(160),
                            Email = "info@demirlimitedsirketi.com",
                            Name = "Demir Limited Şirketi",
                            NumberOfEmployees = 35,
                            PhoneNumber = "+905658424132",
                            SectorId = new Guid("0328465e-f461-4c4c-8857-283d548e61aa"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e75594dd-6197-4608-8add-3ae264c52a79"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 651, DateTimeKind.Local).AddTicks(3660),
                            Email = "info@ozdemirkomanditsirketi.com",
                            Name = "Özdemir Komandit Şirketi",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905522477156",
                            SectorId = new Guid("f99d7f68-e9b6-4005-ac20-2ec1a2dd6231"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f8cb8e4a-2788-4ef1-9f8b-d70e5f4b5a87"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 652, DateTimeKind.Local).AddTicks(7492),
                            Email = "info@celikanonimsirketi.com",
                            Name = "Çelik Anonim Şirketi",
                            NumberOfEmployees = 86,
                            PhoneNumber = "+905966025138",
                            SectorId = new Guid("a14aeeed-cbc5-42ae-ab87-395a396adbc8"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("729811ae-3eb3-44e9-a016-ba70480db52b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 654, DateTimeKind.Local).AddTicks(1514),
                            Email = "info@yildirimkollektifsirketi.com",
                            Name = "Yıldırım Kollektif Şirketi",
                            NumberOfEmployees = 53,
                            PhoneNumber = "+905578329313",
                            SectorId = new Guid("d7315504-1c02-449c-bae1-32512b28fd7b"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d15183a3-d619-4df6-ac25-cf5502d91ba5"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9169),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a6d9efe9-9359-402c-be1f-3c16d1e4b06f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9186),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("79a5bd0b-ff1d-4e67-8b69-8c00ffb79eed"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9188),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d7315504-1c02-449c-bae1-32512b28fd7b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9189),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("80ef694a-a15f-4bee-82a1-af06d20544a0"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9190),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b5c16064-d333-4e7c-8c29-eb350ec50c90"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9202),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d13b573e-d00c-4be2-be6a-39c533f3b922"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9203),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b996f13b-2f88-4403-a2b9-321645ae2f6a"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9204),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a14aeeed-cbc5-42ae-ab87-395a396adbc8"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9205),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d473c4ce-2b57-48d0-b4c1-a4e62fbe2790"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9208),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b916dcdb-03fa-4921-8414-c9e9917b05c3"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9210),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f99d7f68-e9b6-4005-ac20-2ec1a2dd6231"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9211),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("016b3554-058c-42ab-abdc-f1cc2170ca5b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9212),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("10b59d3b-ed99-48fb-a9cc-be3a4ccbd2b6"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9215),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ae8c34af-6033-4a5a-8a34-65d401027387"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9216),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cc46ea27-66fe-4c29-8b61-4af6c2ac11c4"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9217),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0328465e-f461-4c4c-8857-283d548e61aa"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9218),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("84741a65-6803-4a9f-afef-2620e8d0739b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9220),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("45396d21-a3ed-456b-abc8-f272cb1b3d21"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9221),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("30447641-e436-4a04-8dc1-c025a1043819"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9222),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("081c32df-6971-475c-aa03-4b0a580a590b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9223),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4c60741c-a0bf-4e9b-b920-4c735e09008f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9226),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2f7dd057-f6b2-41de-9751-f17af5a97890"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9227),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2b0c0c9-d16c-4073-810b-5d460058d5e5"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9228),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31a81584-1c91-4118-91de-b8fb6082dd20"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9346),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fc040a7d-50a8-4e5f-8a4d-afa33992c3db"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9348),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7abf2cd6-c520-4041-94b1-a2e963a93352"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9350),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("df2955ba-4e4a-407b-a6fe-73ad411b9127"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9351),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("675a1f92-6fef-4b45-a62b-4b9bfe6fabaf"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9352),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8b8ed7af-5e84-4919-98bf-2b7f63947819"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9354),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8790ad3f-fcc4-41cc-8a20-3d679848f137"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9355),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cda99746-ccc3-4a0c-8fee-5399e1d321b8"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9359),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f252690f-5704-45d4-997a-69b0ee250dff"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9360),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("49ef8f54-41f7-456b-861f-039c80587488"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9362),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f774a8f0-0999-401f-b1d2-89790dcae4d2"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9364),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("55eb126d-d1ed-49ef-ac34-9df80cf8c202"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9365),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1ad93ebd-5116-4847-aeb6-5fdb5987f5fb"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9366),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f0fbaf29-cb40-445d-aad1-529cba19d1e2"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9368),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6a998d48-e3a1-4bc7-b900-a0c668be7c0d"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9369),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9b6703d1-eb49-46fe-b40d-3ba6a9a94b9a"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9372),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("41fcd104-d295-4222-b329-d289d9cb449c"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9374),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f86073f8-2f83-494e-982f-4b7fcc2a64f0"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9376),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4a36243e-313e-47f8-9834-86ad1bfdf011"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9377),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4ae06e7b-1126-45f4-8988-3059d3b1bc75"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9378),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("68f6dd66-7832-453d-895b-2be59bf85322"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9380),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("52cb8774-1c8e-45b1-bd5a-1b85fc8aefbd"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9381),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2b45a8bd-cd45-4cab-aafd-807f7f3ab127"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9410),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("de9b35c6-4990-4a3d-854e-817f4d876728"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9414),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2e36bc7-2457-4f85-80bf-02176e8c3f8f"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9416),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("61158f2e-a458-4c3b-abc0-0d4255fa9627"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9417),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a257a8d8-d5a6-48f8-864c-3990957f6729"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9419),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("313f267f-98a4-4f46-8785-b5e69e705943"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9420),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("05caa53e-3f29-4ce2-afba-424236382fda"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9421),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("469c81da-ac27-4b57-b4f8-b6bddb000924"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9422),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3cbf169a-4637-4901-af9a-964e55aa7842"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9424),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2d3f02a5-7b97-479c-8b95-a3e72209b821"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9427),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e8f84c01-af00-487c-a3c5-c5f6a5685a35"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9429),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4c7cca1e-67ff-45b0-abba-6c1a3a8cedd6"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9431),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("537196b6-5ccf-481c-953f-8e40e1b0653b"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9432),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a95e9560-93e8-418a-8b7e-01b12d277499"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9433),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a63ca779-c327-4e4f-872c-a7f00459e774"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9435),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3d69d750-871b-450d-880e-159d3a1d8f82"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9436),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b95961b5-3075-4ccb-91e5-1592f392ca24"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9437),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c7e81b0f-ec79-4c86-a67d-41f9eda86f5e"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9441),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d83a560f-19d3-4d55-899e-0fea955dcbe1"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9442),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("28022b0d-786e-4a95-8028-a920c96b3201"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9444),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1a63add8-5008-4429-8baa-7ed856d78d15"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9445),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2ca303b8-e86c-443f-a0a4-7bdaf7348ee1"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9446),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0248b36d-775e-4ff9-89b5-8c12f62a85e4"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9448),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b3049a0f-a97d-4baa-933b-78ed3c3ec495"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9449),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("03bcffe3-26b0-42f7-a0cf-bf41cb55164e"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9450),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("07f737cf-25a5-482f-a5e4-de097ac9b970"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9453),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("83fbdb17-0e74-4432-9e6b-39fe6dde5392"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9455),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0c077de1-afa9-47ee-bd8e-529ef5d1fdb2"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9456),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("78d1004a-e3e0-42ed-9c0c-4849b8ad2ed0"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9457),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("43d89918-fd0b-4950-8cb3-76a0a7511be6"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9458),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("323a2f9c-f8c8-46dc-9013-159d2fa3a759"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9460),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b891bfa3-dbaf-48b6-8708-0fd697d77bff"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9461),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ebe22364-925a-41c7-bb29-1c7308b17de0"),
                            CompanyId = new Guid("8ecd092c-4e1f-4a64-aea1-7a4bcd4a9a22"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 627, DateTimeKind.Local).AddTicks(9463),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("047a5115-2b1c-4123-95df-dbdd59c55a43"),
                            CompanyId = new Guid("868440d4-ab7f-4155-8a1d-698fadda0644"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 634, DateTimeKind.Local).AddTicks(9011),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4035060-daf9-47cf-8e7f-fb6778f2c024"),
                            CompanyId = new Guid("ae628b87-907f-4daa-a2c5-06e884ac606f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 636, DateTimeKind.Local).AddTicks(2785),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7fe70f6d-69a8-414e-90d9-1163f73de5df"),
                            CompanyId = new Guid("176e8a94-9006-41f0-8134-898438aa012a"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 637, DateTimeKind.Local).AddTicks(6496),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0d6275ff-4fa1-4a06-a647-888f70819ed5"),
                            CompanyId = new Guid("99fb68cb-3b77-41b8-9f75-94ce45d51e6b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 639, DateTimeKind.Local).AddTicks(621),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1af05b79-c2b9-48f3-806d-5ead23223620"),
                            CompanyId = new Guid("aefb6d3e-b970-4bac-9659-170a63b731a7"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 640, DateTimeKind.Local).AddTicks(4591),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("54f37ed2-9900-4f24-9600-5c40239d3f41"),
                            CompanyId = new Guid("64aee2e4-bc6e-4f37-b314-0eac30a77aa8"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 641, DateTimeKind.Local).AddTicks(8028),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bbebd5b3-86de-4829-8ee2-a79b02095a17"),
                            CompanyId = new Guid("a67e8bae-1b8f-489a-83d1-5617377613b8"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 643, DateTimeKind.Local).AddTicks(1827),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7d4271ab-ec91-4d3a-acfc-9085397d49d5"),
                            CompanyId = new Guid("d28f5f9a-7010-444c-ad0f-2d4dd98a288c"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 644, DateTimeKind.Local).AddTicks(5588),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3ee2ff34-aaeb-4c4b-8323-8c9ae397fd20"),
                            CompanyId = new Guid("302f8fea-9db4-416a-8a47-31c4a21bc34f"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 645, DateTimeKind.Local).AddTicks(9174),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1c6d4af5-9657-4512-b569-225b09e8c19e"),
                            CompanyId = new Guid("e2de0c2f-cddf-4c21-b392-7e190f16dab1"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 647, DateTimeKind.Local).AddTicks(2881),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ac78e419-04b5-44d1-bc3c-c6db8db6361d"),
                            CompanyId = new Guid("1ac947c4-c3d1-4cd5-9394-2b4cb6812f5b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 648, DateTimeKind.Local).AddTicks(6531),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("32cd6a5b-78ae-49a7-903b-ad41e02c5629"),
                            CompanyId = new Guid("10d4756c-632f-444f-b3d1-cb76360bb181"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 650, DateTimeKind.Local).AddTicks(166),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3373e07d-339a-4af9-8070-0379e4d6fea3"),
                            CompanyId = new Guid("e75594dd-6197-4608-8add-3ae264c52a79"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 651, DateTimeKind.Local).AddTicks(3664),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4148b0f2-35d8-4552-8714-ffc92dc694ae"),
                            CompanyId = new Guid("f8cb8e4a-2788-4ef1-9f8b-d70e5f4b5a87"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 652, DateTimeKind.Local).AddTicks(7495),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d0da5f8b-2b20-4e25-a56d-d57371f6ec10"),
                            CompanyId = new Guid("729811ae-3eb3-44e9-a016-ba70480db52b"),
                            CreateDate = new DateTime(2023, 5, 18, 18, 33, 11, 654, DateTimeKind.Local).AddTicks(1519),
                            Name = "Pharmacy Technician",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7"),
                            ConcurrencyStamp = "U5QJ0HO2IF3VAE1M1W07LOOUZQ9UEEM7",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245"),
                            ConcurrencyStamp = "1C8731K85PV6PERQDX1FS80LMCN4BAQF",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("ec6467e8-9188-48b7-a103-1dbd9a7592cc"),
                            ConcurrencyStamp = "KFVRBD77FFNSZ1RPEKE6EU4SJXPDVS8A",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6c655f87-fe0d-43b5-887a-6c88f78eadc4"),
                            RoleId = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7")
                        },
                        new
                        {
                            UserId = new Guid("681478c6-242c-4dcc-85ec-2ea7baf47a85"),
                            RoleId = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7")
                        },
                        new
                        {
                            UserId = new Guid("cd0f0b99-69ba-474c-90ed-0cccdb963a7c"),
                            RoleId = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7")
                        },
                        new
                        {
                            UserId = new Guid("f6ce342a-561f-4d9b-9c60-5fa299e73f61"),
                            RoleId = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7")
                        },
                        new
                        {
                            UserId = new Guid("679e9d0b-d12b-472a-b52c-0df33a5ced10"),
                            RoleId = new Guid("ca212714-3182-45bd-ae6e-98920a78a6b7")
                        },
                        new
                        {
                            UserId = new Guid("f0c10cd8-d165-4c12-93f6-4b6887127a0e"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("3e783ca2-5b37-420e-971a-69cfb1d8d749"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("50f9458f-1931-4f0e-9fdb-f6c04e4946d4"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("b11aad72-9709-4e51-a7fe-cec4ba278173"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("10083ba2-0926-4297-926a-9196ed002c30"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("5415c26e-556e-4392-9ac9-dafac9d49329"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("57f0cc7b-4a3d-4d7d-bcbb-0c46ac56bd18"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("49e4161c-eda9-4543-8937-5902f78da11a"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("7efe0ef2-774d-48d1-90fb-c3ae16877087"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("96b83eb2-b6db-4834-b126-7472424254dd"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("0ff0eba9-3c7b-41ca-b770-9ca74a7a7c41"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("72f5f61f-5063-4363-b951-94f5b82ddcf7"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("05f638e8-e75d-464a-bdeb-33a4e0ceabe9"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("e1370e43-fd21-4c85-97d2-a45f897be275"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        },
                        new
                        {
                            UserId = new Guid("54fa39d6-b8d2-4881-bc31-7218c1697b49"),
                            RoleId = new Guid("b2a02c7c-9c65-4eed-9860-2a16470df245")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithOne("Address")
                        .HasForeignKey("IKApplication.Domain.Entites.Address", "AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AdvanceTo")
                        .WithMany()
                        .HasForeignKey("AdvanceToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("CashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceTo");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("CashAdvances");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
