// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    partial class IKAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bf1ad77-d254-403d-84a5-fda515a10451"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2074, 12, 7, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5876),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            ConcurrencyStamp = "45a3b645-42d9-4e79-bf33-078a47988206",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5873),
                            Email = "test0@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "5360401548",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST0@TEST.COM",
                            NormalizedUserName = "TEST0@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPBxUgtebd+MVI2CLLLlWFCmcMhr/p/U7U9zPWLVvXMW+7kWtKijeY5mxeEK9dVxxg==",
                            PhoneNumber = "+905708003192",
                            PhoneNumberConfirmed = false,
                            Profession = "Butcher",
                            SecurityStamp = "EMQW2FPB8RLBV3L2XMH2QFRCPN5H0XG9",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("99978318-d25f-4577-bae4-b3f89365c8f2"),
                            TwoFactorEnabled = false,
                            UserName = "test0@test.com"
                        },
                        new
                        {
                            Id = new Guid("97b3e779-2ad1-40a0-882f-e59d74f09243"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2053, 7, 8, 10, 59, 21, 576, DateTimeKind.Local).AddTicks(4825),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            ConcurrencyStamp = "55fdad41-c4ff-4e88-8e4a-f177e7f40986",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 576, DateTimeKind.Local).AddTicks(4822),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6234353860",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mehmet",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECVpgvipb9Wc3Lf++5YEqFHaUhU3KbWI4OmZeyqDcQ5joMOqaWlqgYF0FBM46xplHA==",
                            PhoneNumber = "+905816032042",
                            PhoneNumberConfirmed = false,
                            Profession = "Lifeguard",
                            SecurityStamp = "EGFQTA7GVVG50ZMJP88W14XVZ3NXTPXL",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("6aa8e93d-cff1-44bb-86eb-2aaca322a3e4"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("9ed5089c-9058-4779-a414-540e4ef15299"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 8, 17, 10, 59, 21, 582, DateTimeKind.Local).AddTicks(2313),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            ConcurrencyStamp = "2d87ea4d-11b9-4c07-8140-a8db48ea332d",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 582, DateTimeKind.Local).AddTicks(2311),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "7336178162",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAD31lS6uVqYsGWT7JgLKBqjWv2jyhJG+dQrZERsHQXZ52l+QQtyle/k3b64U8y1/A==",
                            PhoneNumber = "+905545142235",
                            PhoneNumberConfirmed = false,
                            Profession = "Traffic warden",
                            SecurityStamp = "B1V6KFS1WA526GVJL74I6S3Y1YVCB47R",
                            Status = 1,
                            Surname = "Kaya",
                            TitleId = new Guid("2b9f6c95-bd09-4ab7-bc1c-8e9bbd2931d5"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("9ce6fa87-a6b5-44f0-a5cc-16629f80a745"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 10, 26, 10, 59, 21, 588, DateTimeKind.Local).AddTicks(1187),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            ConcurrencyStamp = "8c4552ca-cbe8-4497-93f1-de4b5533fbaa",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 588, DateTimeKind.Local).AddTicks(1183),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6083881284",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEA3kZMXdkoXwb8pkzS+8Nqp/a5xXWo/+jTVBelwqMqLpdT97+rI5VEpTZKHy1Ir10A==",
                            PhoneNumber = "+905417900323",
                            PhoneNumberConfirmed = false,
                            Profession = "Dentist",
                            SecurityStamp = "O1TJWOSGB1IZ5TA1RW825NTG76FGEXWD",
                            Status = 1,
                            Surname = "Yıldız",
                            TitleId = new Guid("5531095b-e912-4cd1-8374-68b9da72fc38"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("e273428b-2ff3-4a73-9cf0-292699c5d3bc"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 8, 14, 10, 59, 21, 593, DateTimeKind.Local).AddTicks(8189),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            ConcurrencyStamp = "b63690d6-39ed-48ea-a3e0-02b040e7dc8d",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 593, DateTimeKind.Local).AddTicks(8187),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3755873592",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENQ9y8sjGZ4+jDWtL+FkPZWgc1rNRig0471JmP3HWOFJ7HJcdUL0j21c0YSm2+nm8A==",
                            PhoneNumber = "+905835435766",
                            PhoneNumberConfirmed = false,
                            Profession = "Busdriver",
                            SecurityStamp = "55YYQSTRE1A1RD5614I2OHGCM1AYPWXM",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("012a5b9c-9d64-4013-92e5-830a0b586c26"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("ae9c039e-cf83-4561-9d26-d27561f67c99"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 12, 26, 10, 59, 21, 599, DateTimeKind.Local).AddTicks(5328),
                            CompanyId = new Guid("e63470f7-522e-4209-a3dc-056593a063f6"),
                            ConcurrencyStamp = "8ab7de84-940e-45dd-bb05-f60bbf850fbe",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 599, DateTimeKind.Local).AddTicks(5326),
                            Email = "ismail.demir@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "5637614394",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.DEMIR@HOTMAIL.COM",
                            NormalizedUserName = "ISMAIL.DEMIR@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOgjb49xWUg0MKhqcQCx/URi7fokGxOyjOKAyejaFu+lc2aFDR6rLEjbcTHOSTzOSg==",
                            PhoneNumber = "+905857363360",
                            PhoneNumberConfirmed = false,
                            Profession = "Traffic warden",
                            SecurityStamp = "XXZ3MMBRDZHVMEFW0FSHBPNVGOSKPG1E",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("dbbbb3e5-5cb7-4221-a27e-499768e3f74e"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.demir@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("53d9a0b1-89f6-4587-9dc7-a6d36232e35c"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 9, 23, 10, 59, 21, 605, DateTimeKind.Local).AddTicks(2967),
                            CompanyId = new Guid("f633590b-6832-4639-8019-52050ebe81b3"),
                            ConcurrencyStamp = "57e3cc20-bf78-429a-b926-132599162847",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 605, DateTimeKind.Local).AddTicks(2966),
                            Email = "hasan.yildirim@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "7600647550",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILDIRIM@YANDEX.COM",
                            NormalizedUserName = "HASAN.YILDIRIM@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEInAVd8Hi5HzbQHgW/5JS8m7R5NNuGehL+RC7g4Cls2Ol5cNcJBPvvLqm9H7qI846A==",
                            PhoneNumber = "+905741729597",
                            PhoneNumberConfirmed = false,
                            Profession = "Carpenter",
                            SecurityStamp = "IAUXM7D2EPJE4X3BAWIQUH1OX05TVC48",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("157264d2-0411-4c8a-a5e9-13e0c8ac2d37"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yildirim@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("6f101a49-324b-40b5-a7eb-7612dd104a4f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 6, 27, 10, 59, 21, 611, DateTimeKind.Local).AddTicks(1261),
                            CompanyId = new Guid("81b12ec9-da90-47c6-ab90-fb1b8ea7dbd4"),
                            ConcurrencyStamp = "4ef8e019-1bce-4a04-97ea-a0a1d69de827",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 611, DateTimeKind.Local).AddTicks(1259),
                            Email = "huseyin.ozturk@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "4516726034",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.OZTURK@MICROSOFT.COM",
                            NormalizedUserName = "HUSEYIN.OZTURK@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAJWx45bDSFVrUdXgLxNNgXx8/TfSSlhDawgXvl8hdOjZs9v4hNhGAXxh6mHGIKKxw==",
                            PhoneNumber = "+905233749205",
                            PhoneNumberConfirmed = false,
                            Profession = "Model",
                            SecurityStamp = "5VJAYH3FNTWQ038WOJWKILLJVNQBETZK",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("61eec2d6-0ef9-4517-bc18-84a205ee0fad"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.ozturk@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("48da37b6-0065-4ae9-ae7c-dbf4d00ee742"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2057, 9, 5, 10, 59, 21, 616, DateTimeKind.Local).AddTicks(8433),
                            CompanyId = new Guid("c0fa8b33-0e67-4e3a-b1a9-66ef6c1721ee"),
                            ConcurrencyStamp = "538743ed-be27-42c5-8234-7e7c9172098f",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 616, DateTimeKind.Local).AddTicks(8432),
                            Email = "ali.celik@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "3848070246",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.CELIK@GOOGLE.COM",
                            NormalizedUserName = "ALI.CELIK@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMtjV8T7yTqt+EK8n9xADNFesTYvVYoNuPeVlCGWhDysnf2FU1hkIVvb+qdyAWmQIw==",
                            PhoneNumber = "+905672366938",
                            PhoneNumberConfirmed = false,
                            Profession = "Cleaner",
                            SecurityStamp = "HWZFFOU3WGLVHDMBUMGGKYL7VTB93BPU",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("af94727c-fed1-4cb0-a078-e63e44939afc"),
                            TwoFactorEnabled = false,
                            UserName = "ali.celik@google.com"
                        },
                        new
                        {
                            Id = new Guid("f66ec653-fcda-4994-a3ca-91c145065a0b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 10, 31, 10, 59, 21, 622, DateTimeKind.Local).AddTicks(5547),
                            CompanyId = new Guid("8a1f69b4-98fa-43d0-8f47-75ac79553f5b"),
                            ConcurrencyStamp = "f1506422-cbe1-4aa2-8de7-213878d1c142",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 622, DateTimeKind.Local).AddTicks(5546),
                            Email = "ali.celik@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "1843088394",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.CELIK@HOTMAIL.COM",
                            NormalizedUserName = "ALI.CELIK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKubSpHGVjLmN3qQx2/lrqruBtNa7ptFwzreI+/e3R1ebMfENafTdpP8gvjUDytxJQ==",
                            PhoneNumber = "+905160012281",
                            PhoneNumberConfirmed = false,
                            Profession = "Bricklayer",
                            SecurityStamp = "T9TN89G646QOEWXWVF3G4DQSBJDHCZ3W",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("22747ab2-6406-4781-b80e-be01523c6706"),
                            TwoFactorEnabled = false,
                            UserName = "ali.celik@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("2df709e8-9478-4247-aeb5-608d0c273224"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2043, 1, 7, 10, 59, 21, 628, DateTimeKind.Local).AddTicks(3230),
                            CompanyId = new Guid("935ed7bb-a385-4c3f-8377-22a40d4ec03a"),
                            ConcurrencyStamp = "2c16c466-ac8c-47fe-a5b9-07fc41cedbfc",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 628, DateTimeKind.Local).AddTicks(3228),
                            Email = "yusuf.sahin@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "1071834790",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.SAHIN@YAHOO.COM",
                            NormalizedUserName = "YUSUF.SAHIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC2kqwtMi7jIOzaOueyi/9zDcwno9afpRT8npsBxvYgNrDkC+okwNUj4yo8r6dSPlQ==",
                            PhoneNumber = "+905636778337",
                            PhoneNumberConfirmed = false,
                            Profession = "Model",
                            SecurityStamp = "4QUD4XE1WTRU2U0REZSMX1ECRVYPVNHN",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("398fc98a-c435-4186-9a67-503e7fed6cfd"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.sahin@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("cbc386c4-c86b-4009-86dc-7ab16996bc0a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 6, 4, 10, 59, 21, 634, DateTimeKind.Local).AddTicks(292),
                            CompanyId = new Guid("975b516d-ca6c-4e65-906b-b6376c7aeb1a"),
                            ConcurrencyStamp = "6ef1293e-5be8-4807-b0e8-73b56b3b00c0",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 634, DateTimeKind.Local).AddTicks(290),
                            Email = "ibrahim.demir@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "8031313706",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.DEMIR@YAHOO.COM",
                            NormalizedUserName = "IBRAHIM.DEMIR@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPwL1YhCDCnORF01O8S7jxBQRf9Cs71wCvXssE8XYOp3KjazejBVIV/9xvQ13Q8gdQ==",
                            PhoneNumber = "+905663474789",
                            PhoneNumberConfirmed = false,
                            Profession = "Politician",
                            SecurityStamp = "SLEJ2MF9BIA973M7NBR7TJI3N8XS77XP",
                            Status = 3,
                            Surname = "Demir",
                            TitleId = new Guid("deca627e-b731-46b0-81a1-87925d62ed61"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.demir@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("c67d9cbf-7f4e-4953-ab2d-bfb5c323b823"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2054, 2, 1, 10, 59, 21, 639, DateTimeKind.Local).AddTicks(7337),
                            CompanyId = new Guid("c1b583df-72e3-4461-a136-f304c55a155a"),
                            ConcurrencyStamp = "eee3ae28-d844-4116-a7bf-0fa1dd4f4317",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 639, DateTimeKind.Local).AddTicks(7336),
                            Email = "hasan.yildiz@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "7778588246",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILDIZ@OUTLOOK.COM",
                            NormalizedUserName = "HASAN.YILDIZ@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBwPwkg+UEL+K8K8uEx2RZSHvPN+WHX9nqh0i+cyK+tD7gTMsA10cq3rIlMQ8cPESA==",
                            PhoneNumber = "+905285654457",
                            PhoneNumberConfirmed = false,
                            Profession = "Real estate agent",
                            SecurityStamp = "C1JHT9RXPW44DS5F1FQSKP11CCXAMAA0",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("ea37ae29-0fcf-46a7-8b78-d92095d5a8be"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yildiz@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("7604f0b7-5032-47ec-a246-eda6388047a7"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2065, 3, 4, 10, 59, 21, 645, DateTimeKind.Local).AddTicks(3527),
                            CompanyId = new Guid("52b2624e-c2bb-4388-8ca5-0b1883500992"),
                            ConcurrencyStamp = "eacf9cf3-6de5-4409-9206-9e7b3bb8467c",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 645, DateTimeKind.Local).AddTicks(3526),
                            Email = "ahmet.ozturk@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6040371012",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.OZTURK@OUTLOOK.COM",
                            NormalizedUserName = "AHMET.OZTURK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEH4WqS2GC6TT0X8an+uMFY2iwfUD4Q+4J1KlAqZTpkBvk/1MlK8PW2I2PCSes/lWCA==",
                            PhoneNumber = "+905199946077",
                            PhoneNumberConfirmed = false,
                            Profession = "Policeman/Policewoman",
                            SecurityStamp = "CM7OCOBKOWLXVLCZWZZ2R5BYNF07HTS7",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("fdad674c-4956-40cc-8adb-5dac84d9240f"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.ozturk@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("ef846b45-24c4-45c5-b87b-d84a9958ed05"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 4, 29, 10, 59, 21, 651, DateTimeKind.Local).AddTicks(506),
                            CompanyId = new Guid("7295f361-d22f-47d4-a242-408119c1eb6b"),
                            ConcurrencyStamp = "b20b501f-87f2-4e20-aebe-3329532dcb70",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 651, DateTimeKind.Local).AddTicks(504),
                            Email = "yusuf.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "6467814792",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "YUSUF.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECYf89DGnZF3DmyqVaD09VNO/EtL1eKKFi4n1UjqGlURm4+kwdx01MsOOUTu+Dk0SA==",
                            PhoneNumber = "+905687019787",
                            PhoneNumberConfirmed = false,
                            Profession = "Taxi driver",
                            SecurityStamp = "EXZ1MTX5RQTUA0OXAGUMM6ECHYP1L37Z",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("1935b337-e6d1-4a62-991a-c2af101d01fd"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("5dc08428-481b-44f3-be90-cca3f1d5225d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2041, 6, 26, 10, 59, 21, 656, DateTimeKind.Local).AddTicks(6289),
                            CompanyId = new Guid("ab8c212d-b262-4fc4-9e55-ef59a4c86daf"),
                            ConcurrencyStamp = "16d99286-0370-4149-a61d-af0b39ddc20a",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 656, DateTimeKind.Local).AddTicks(6287),
                            Email = "mustafa.yildirim@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "1315865100",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILDIRIM@HOTMAIL.COM",
                            NormalizedUserName = "MUSTAFA.YILDIRIM@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENIH2H9K0LyvzygiK8d8b7gZLlXAvOk/YowoEtVJH6WPUFi3AO5qLzIunIkUGu+mLw==",
                            PhoneNumber = "+905977313064",
                            PhoneNumberConfirmed = false,
                            Profession = "Cleaner",
                            SecurityStamp = "FHIF7JVF5JVGYTO6NIT8N8N960NSOXNB",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("6852e40a-336d-4816-a3e7-df530a72b9bd"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yildirim@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("4375c33f-37b5-450b-b9c0-642d9c7515a0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2063, 10, 9, 10, 59, 21, 662, DateTimeKind.Local).AddTicks(2492),
                            CompanyId = new Guid("27b061ab-87c3-40c5-95b0-b1e694bea44b"),
                            ConcurrencyStamp = "e90a33ca-96e0-4db6-b848-0ff9ce1281f1",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 662, DateTimeKind.Local).AddTicks(2491),
                            Email = "ali.ozturk@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "1843701004",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.OZTURK@YANDEX.COM",
                            NormalizedUserName = "ALI.OZTURK@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKq8Ue0fSS4CNB2iYFY/MqBHGNp7BbzHmjIluEqPwEL/sn6n+CgR7zdccKK1jfhyhA==",
                            PhoneNumber = "+905735406823",
                            PhoneNumberConfirmed = false,
                            Profession = "Doctor",
                            SecurityStamp = "CFREL0UKB6U46OII91ANFJ5CV6SG6R4B",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("99d141fa-cdf8-4c1c-9bf9-784fa8ed0ae9"),
                            TwoFactorEnabled = false,
                            UserName = "ali.ozturk@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("dac58c81-03f6-4eaa-8e22-0ed5c00e6b3e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2069, 4, 9, 10, 59, 21, 667, DateTimeKind.Local).AddTicks(9179),
                            CompanyId = new Guid("71db8e77-31db-4b05-93f3-8391aba50655"),
                            ConcurrencyStamp = "ad0b692b-c169-40b6-b2a4-a96eae97af76",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 667, DateTimeKind.Local).AddTicks(9177),
                            Email = "hasan.yildiz@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "1254358446",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.YILDIZ@GOOGLE.COM",
                            NormalizedUserName = "HASAN.YILDIZ@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECHbU8rmWf06IYoyp7SsmhzaMZRz560yVMZGA8O2pOcA18+tyfBIHVQ4NnSGtRdDyw==",
                            PhoneNumber = "+905904892165",
                            PhoneNumberConfirmed = false,
                            Profession = "Artist",
                            SecurityStamp = "GKSF0QOMLYVNXUSPFLJMS56ZA3XAU56P",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("e1cdf8fa-0d15-46e6-8239-25d18502d861"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.yildiz@google.com"
                        },
                        new
                        {
                            Id = new Guid("8ae10070-462a-4545-8f91-57064334a5f4"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 2, 21, 10, 59, 21, 673, DateTimeKind.Local).AddTicks(5390),
                            CompanyId = new Guid("b8939d8f-e18b-469f-b9bb-917f3468bbbd"),
                            ConcurrencyStamp = "ddf5254e-72a1-4e15-ac2f-8a313eb96b7e",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 673, DateTimeKind.Local).AddTicks(5389),
                            Email = "ahmet.ozturk@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "7747516726",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.OZTURK@MICROSOFT.COM",
                            NormalizedUserName = "AHMET.OZTURK@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBkIf2rq8tu/1D6L/uVlNyvwiSnPzXXYE36j6wmtlT22xQJm48IPezey1UigCp79vA==",
                            PhoneNumber = "+905176537789",
                            PhoneNumberConfirmed = false,
                            Profession = "Dancer",
                            SecurityStamp = "4IZIC02AD6NAMLP6YD7NVMTCCIE76SJB",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("468ba217-c0dd-4318-9ae1-9b185b66f1c2"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.ozturk@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("f0c2c53c-61d6-4ebc-944d-ee8706919bf6"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 9, 8, 10, 59, 21, 679, DateTimeKind.Local).AddTicks(1671),
                            CompanyId = new Guid("850b038c-2e4f-4035-9bdb-fa264da09a84"),
                            ConcurrencyStamp = "79f460e3-1133-4e7c-adeb-8907edd24a5e",
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 679, DateTimeKind.Local).AddTicks(1670),
                            Email = "hasan.ozdemir@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "2327030142",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "HASAN.OZDEMIR@YAHOO.COM",
                            NormalizedUserName = "HASAN.OZDEMIR@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMjh/XOQr/tds53O0XcnpSUGIIYUq2928VGiBI+4EAmqbdP74Qwzl363Sf5WF3JozQ==",
                            PhoneNumber = "+905258874836",
                            PhoneNumberConfirmed = false,
                            Profession = "Librarian",
                            SecurityStamp = "M4EBNRT8RH3MUTRD45GMEHQIYLCPYF9H",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("ef57645b-0cd3-4b57-8a2d-c75ca508b780"),
                            TwoFactorEnabled = false,
                            UserName = "hasan.ozdemir@yahoo.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5740),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905463813258",
                            SectorId = new Guid("35721b3c-b4b6-415c-bac6-af039cc66c6b"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e63470f7-522e-4209-a3dc-056593a063f6"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 599, DateTimeKind.Local).AddTicks(5312),
                            Email = "info@demirkollektifsirketi.com",
                            Name = "Demir Kollektif Şirketi",
                            NumberOfEmployees = 19,
                            PhoneNumber = "+905786733832",
                            SectorId = new Guid("934ad3dd-a32e-4d4f-a129-e3023bba7059"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f633590b-6832-4639-8019-52050ebe81b3"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 605, DateTimeKind.Local).AddTicks(2956),
                            Email = "info@yildirimanonimsirketi.com",
                            Name = "Yıldırım Kollektif Şirketi",
                            NumberOfEmployees = 7,
                            PhoneNumber = "+905208290364",
                            SectorId = new Guid("4696db45-be46-43e3-b1b9-e535f2eba7a8"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("81b12ec9-da90-47c6-ab90-fb1b8ea7dbd4"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 611, DateTimeKind.Local).AddTicks(1244),
                            Email = "info@ozturkkomanditsirketi.com",
                            Name = "Öztürk Komandit Şirketi",
                            NumberOfEmployees = 8,
                            PhoneNumber = "+905703075699",
                            SectorId = new Guid("0efcd5c9-9104-4bb5-93d5-39eaa77c50df"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("c0fa8b33-0e67-4e3a-b1a9-66ef6c1721ee"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 616, DateTimeKind.Local).AddTicks(8420),
                            Email = "info@celikkollektifsirketi.com",
                            Name = "Çelik Kollektif Şirketi",
                            NumberOfEmployees = 97,
                            PhoneNumber = "+905375585510",
                            SectorId = new Guid("934ad3dd-a32e-4d4f-a129-e3023bba7059"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("8a1f69b4-98fa-43d0-8f47-75ac79553f5b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 622, DateTimeKind.Local).AddTicks(5535),
                            Email = "info@celikkomanditsirketi.com",
                            Name = "Çelik Kollektif Şirketi",
                            NumberOfEmployees = 89,
                            PhoneNumber = "+905778579682",
                            SectorId = new Guid("c30f3a33-5fc9-4b92-b59d-a8d419f73686"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("935ed7bb-a385-4c3f-8377-22a40d4ec03a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 628, DateTimeKind.Local).AddTicks(3213),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Limited Şirketi",
                            NumberOfEmployees = 28,
                            PhoneNumber = "+905907596943",
                            SectorId = new Guid("75ab3467-bb74-4c93-8f46-20e438f9a1c6"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("975b516d-ca6c-4e65-906b-b6376c7aeb1a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 634, DateTimeKind.Local).AddTicks(282),
                            Email = "info@demirkooperatifsirketi.com",
                            Name = "Demir Limited Şirketi",
                            NumberOfEmployees = 59,
                            PhoneNumber = "+905685005279",
                            SectorId = new Guid("e3fc7f33-e773-4f9b-92c8-1c5980b87235"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("c1b583df-72e3-4461-a136-f304c55a155a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 639, DateTimeKind.Local).AddTicks(7325),
                            Email = "info@yildizkollektifsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 73,
                            PhoneNumber = "+905200901915",
                            SectorId = new Guid("dcb97d68-d508-4b0f-8fb9-c44e8715920c"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("52b2624e-c2bb-4388-8ca5-0b1883500992"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 645, DateTimeKind.Local).AddTicks(3519),
                            Email = "info@ozturkkollektifsirketi.com",
                            Name = "Öztürk Komandit Şirketi",
                            NumberOfEmployees = 65,
                            PhoneNumber = "+905332051574",
                            SectorId = new Guid("43d66745-1058-4b76-93d0-f3f89a0216fc"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("7295f361-d22f-47d4-a242-408119c1eb6b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 651, DateTimeKind.Local).AddTicks(486),
                            Email = "info@yildizkooperatifsirketi.com",
                            Name = "Yıldız Anonim Şirketi",
                            NumberOfEmployees = 58,
                            PhoneNumber = "+905281103084",
                            SectorId = new Guid("4696db45-be46-43e3-b1b9-e535f2eba7a8"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("ab8c212d-b262-4fc4-9e55-ef59a4c86daf"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 656, DateTimeKind.Local).AddTicks(6236),
                            Email = "info@yildirimkomanditsirketi.com",
                            Name = "Yıldırım Kollektif Şirketi",
                            NumberOfEmployees = 35,
                            PhoneNumber = "+905901900813",
                            SectorId = new Guid("9e9f2ddd-e399-4996-9226-0ac92eb56a22"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("27b061ab-87c3-40c5-95b0-b1e694bea44b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 662, DateTimeKind.Local).AddTicks(2484),
                            Email = "info@ozturkkooperatifsirketi.com",
                            Name = "Öztürk Anonim Şirketi",
                            NumberOfEmployees = 80,
                            PhoneNumber = "+905718240521",
                            SectorId = new Guid("375b1a96-2220-40e3-a6ac-9500dfb38a57"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("71db8e77-31db-4b05-93f3-8391aba50655"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 667, DateTimeKind.Local).AddTicks(9168),
                            Email = "info@yildizkooperatifsirketi.com",
                            Name = "Yıldız Limited Şirketi",
                            NumberOfEmployees = 58,
                            PhoneNumber = "+905405121077",
                            SectorId = new Guid("934ad3dd-a32e-4d4f-a129-e3023bba7059"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("b8939d8f-e18b-469f-b9bb-917f3468bbbd"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 673, DateTimeKind.Local).AddTicks(5379),
                            Email = "info@ozturkkollektifsirketi.com",
                            Name = "Öztürk Limited Şirketi",
                            NumberOfEmployees = 20,
                            PhoneNumber = "+905988236496",
                            SectorId = new Guid("375b1a96-2220-40e3-a6ac-9500dfb38a57"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("850b038c-2e4f-4035-9bdb-fa264da09a84"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 679, DateTimeKind.Local).AddTicks(1661),
                            Email = "info@ozdemirlimitedsirketi.com",
                            Name = "Özdemir Anonim Şirketi",
                            NumberOfEmployees = 26,
                            PhoneNumber = "+905954270206",
                            SectorId = new Guid("997e21d1-45d8-4b85-96d3-36023d909750"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52cb8ccc-7f80-40f4-8c80-20082ec5d8cc"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5556),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("35721b3c-b4b6-415c-bac6-af039cc66c6b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5571),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("75ab3467-bb74-4c93-8f46-20e438f9a1c6"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5588),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9e9f2ddd-e399-4996-9226-0ac92eb56a22"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5589),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("934ad3dd-a32e-4d4f-a129-e3023bba7059"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5591),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dcb97d68-d508-4b0f-8fb9-c44e8715920c"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5594),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4696db45-be46-43e3-b1b9-e535f2eba7a8"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5595),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e3fc7f33-e773-4f9b-92c8-1c5980b87235"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5620),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("86f3b215-bf14-4dd4-9c0a-dc0887ed7791"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5621),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d98bbfee-ffed-4282-b228-4a7d2dbcf5ab"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5623),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e18c0b92-b7c5-4262-84ba-492b23e17b53"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5627),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8af8e9a3-3df1-4477-933c-1dee9db110be"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5628),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f731d347-045e-427e-bfc7-b5dd534be21b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5629),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0efcd5c9-9104-4bb5-93d5-39eaa77c50df"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5631),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("daa79903-2cdb-4522-a8c1-997727703ba0"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5632),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("493365a6-0723-4262-8a86-666da1c281c7"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5633),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("306a1776-c093-4c78-8487-4ed2afe4b0c2"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5635),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("43d66745-1058-4b76-93d0-f3f89a0216fc"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5637),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("997e21d1-45d8-4b85-96d3-36023d909750"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5641),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c30f3a33-5fc9-4b92-b59d-a8d419f73686"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5642),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("375b1a96-2220-40e3-a6ac-9500dfb38a57"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5644),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fa699c77-08d0-49a1-bfe9-bd2e1f171170"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5645),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ff0e4b8b-0d58-4fa1-b4c5-17d6828c5273"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5646),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7304cf78-6888-47ab-806d-6f624aecbca8"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5648),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9a5c0c5-e4d3-4270-856e-6a8969371f90"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5754),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a17456da-4015-4d08-ba06-f1973b99ecbc"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5756),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b0418781-57fd-4bb4-97ef-75205cd56de7"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5758),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ff32f235-fb99-4bb1-b047-3236e2741db7"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5759),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aec71e47-4433-4ab1-8e85-9b4d625a2747"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5762),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0fbd9908-e9d9-4a3e-b4a6-62b860286ada"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5765),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("41f8ae5e-2d87-4145-b710-6eb3cfd628fe"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5766),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fe031f48-94fb-4c94-b65f-c848d7a761a9"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5767),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("61f3cab8-fd5e-4765-86c9-b4cdccd867b6"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5769),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b4a2488a-650a-4c11-a024-c83b7f145e31"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5771),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6aa8e93d-cff1-44bb-86eb-2aaca322a3e4"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5772),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd032e86-f522-4b53-acff-c18ac50308ed"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5773),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b958ff00-fa34-40c4-9615-5a4436ef6d40"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5777),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("87e930e5-7a74-4ce2-9a15-194bf5ba8013"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5778),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7ea456f7-a335-48fd-88f1-a934597e72fc"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5779),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2b9f6c95-bd09-4ab7-bc1c-8e9bbd2931d5"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5780),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ff6bffab-ef00-4130-9001-7a5b839deacd"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5782),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("317f0b14-e194-4e6f-8e1c-c299630f59dd"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5784),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("99978318-d25f-4577-bae4-b3f89365c8f2"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5785),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fb311c61-e3f8-4489-a594-1e8379f1dae8"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5786),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5ee7c677-70e2-424a-91b8-02e115fdee2a"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5789),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("42c7d449-01d1-4e01-b469-f96db1c00b27"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5791),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("45060650-82c2-4444-a8a0-e75f52605523"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5792),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4ee96015-cbdb-4d00-bfd6-c46344da4629"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5793),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("71751f4f-951f-49fb-ac64-e052b2f8144f"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5795),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("189782ef-1f94-481f-8044-9dbc87c55189"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5796),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("65429260-52f7-45e7-b2a9-b3a9c212bc6f"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5797),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d77a3c7a-0205-4ae6-9078-8e9d9afeda3e"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5798),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c7f61837-ea3a-4258-9b0d-da97162da128"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5801),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("34865807-1657-4708-8c5b-6ffa5d1e87c3"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5803),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cf116d9a-12c0-40df-9d75-6576c6ec6876"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5824),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9d763319-90b2-48ec-83b2-fbe593e04e0a"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5826),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e9a16a6f-6fcd-4334-abc7-643ce02a6e17"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5827),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("705da81d-318b-439e-8850-a1dc4086268b"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5829),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bfbf67d7-8026-4917-aa24-46025b218d15"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5831),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5531095b-e912-4cd1-8374-68b9da72fc38"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5832),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("012a5b9c-9d64-4013-92e5-830a0b586c26"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5835),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d85fdbe0-fbbd-4f76-83fd-332db5c19e3c"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5836),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3365f2ab-bf13-43ea-ae55-655081070da0"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5837),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9b3c57b7-b996-4b39-8e23-e4f1514ceadd"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5839),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6312ea8a-a7f4-4848-aa53-04586d21d43f"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5840),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("740570ee-845b-4c46-96ff-29c765141dec"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5841),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d241ab24-1dc9-4cf3-832f-2a42bbf9611e"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5842),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("09081201-35fa-4eac-9c07-7e69c0632d5e"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5844),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6d65904a-3236-47d6-9a67-fd48b81f1206"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5847),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2d81cefe-8968-42df-8dbc-64730f8175b3"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5848),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("be157216-35bd-4c8c-9f45-681a25785c50"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5849),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4885b988-326b-4e73-9a21-2c44de3e5681"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5851),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("51e1e65f-62a0-4867-877d-1bbbdcd16535"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5852),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("13dd469d-66af-4fb5-a902-571f31035515"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5853),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d0a7e9d2-f18a-4aa4-8748-1aa6888cb943"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5854),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f4a18f19-b5b7-4330-a0d7-74d6bf744b9d"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5856),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a8899a31-48be-4319-beed-f01d5b754779"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5859),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d3f70fd5-b4ed-41d5-a709-f644dfbcae4a"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5860),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cbe4cc4e-078c-4739-a678-46d05d54531c"),
                            CompanyId = new Guid("55a97588-97c1-4088-b180-63ff2ec78e3e"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 570, DateTimeKind.Local).AddTicks(5861),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dbbbb3e5-5cb7-4221-a27e-499768e3f74e"),
                            CompanyId = new Guid("e63470f7-522e-4209-a3dc-056593a063f6"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 599, DateTimeKind.Local).AddTicks(5320),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("157264d2-0411-4c8a-a5e9-13e0c8ac2d37"),
                            CompanyId = new Guid("f633590b-6832-4639-8019-52050ebe81b3"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 605, DateTimeKind.Local).AddTicks(2959),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("61eec2d6-0ef9-4517-bc18-84a205ee0fad"),
                            CompanyId = new Guid("81b12ec9-da90-47c6-ab90-fb1b8ea7dbd4"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 611, DateTimeKind.Local).AddTicks(1253),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("af94727c-fed1-4cb0-a078-e63e44939afc"),
                            CompanyId = new Guid("c0fa8b33-0e67-4e3a-b1a9-66ef6c1721ee"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 616, DateTimeKind.Local).AddTicks(8428),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("22747ab2-6406-4781-b80e-be01523c6706"),
                            CompanyId = new Guid("8a1f69b4-98fa-43d0-8f47-75ac79553f5b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 622, DateTimeKind.Local).AddTicks(5541),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("398fc98a-c435-4186-9a67-503e7fed6cfd"),
                            CompanyId = new Guid("935ed7bb-a385-4c3f-8377-22a40d4ec03a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 628, DateTimeKind.Local).AddTicks(3219),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("deca627e-b731-46b0-81a1-87925d62ed61"),
                            CompanyId = new Guid("975b516d-ca6c-4e65-906b-b6376c7aeb1a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 634, DateTimeKind.Local).AddTicks(286),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ea37ae29-0fcf-46a7-8b78-d92095d5a8be"),
                            CompanyId = new Guid("c1b583df-72e3-4461-a136-f304c55a155a"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 639, DateTimeKind.Local).AddTicks(7332),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fdad674c-4956-40cc-8adb-5dac84d9240f"),
                            CompanyId = new Guid("52b2624e-c2bb-4388-8ca5-0b1883500992"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 645, DateTimeKind.Local).AddTicks(3522),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1935b337-e6d1-4a62-991a-c2af101d01fd"),
                            CompanyId = new Guid("7295f361-d22f-47d4-a242-408119c1eb6b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 651, DateTimeKind.Local).AddTicks(492),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6852e40a-336d-4816-a3e7-df530a72b9bd"),
                            CompanyId = new Guid("ab8c212d-b262-4fc4-9e55-ef59a4c86daf"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 656, DateTimeKind.Local).AddTicks(6240),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("99d141fa-cdf8-4c1c-9bf9-784fa8ed0ae9"),
                            CompanyId = new Guid("27b061ab-87c3-40c5-95b0-b1e694bea44b"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 662, DateTimeKind.Local).AddTicks(2488),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e1cdf8fa-0d15-46e6-8239-25d18502d861"),
                            CompanyId = new Guid("71db8e77-31db-4b05-93f3-8391aba50655"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 667, DateTimeKind.Local).AddTicks(9173),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("468ba217-c0dd-4318-9ae1-9b185b66f1c2"),
                            CompanyId = new Guid("b8939d8f-e18b-469f-b9bb-917f3468bbbd"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 673, DateTimeKind.Local).AddTicks(5383),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ef57645b-0cd3-4b57-8a2d-c75ca508b780"),
                            CompanyId = new Guid("850b038c-2e4f-4035-9bdb-fa264da09a84"),
                            CreateDate = new DateTime(2023, 5, 10, 10, 59, 21, 679, DateTimeKind.Local).AddTicks(1666),
                            Name = "VP of Finance",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d"),
                            ConcurrencyStamp = "NUBOZJBK57D7K55YX5JUDNCEZFZ40LA8",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINITRATOR"
                        },
                        new
                        {
                            Id = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b"),
                            ConcurrencyStamp = "7B3JJ3RSBPP5HAS3M9TPQM1XZRMIMEG2",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINITRATOR"
                        },
                        new
                        {
                            Id = new Guid("fc1c96b4-c0d8-4b43-ba6e-24128bd1407a"),
                            ConcurrencyStamp = "BVPK0ZK5N6BV6LC0SEIG3302D6F92YLN",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("2bf1ad77-d254-403d-84a5-fda515a10451"),
                            RoleId = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d")
                        },
                        new
                        {
                            UserId = new Guid("97b3e779-2ad1-40a0-882f-e59d74f09243"),
                            RoleId = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d")
                        },
                        new
                        {
                            UserId = new Guid("9ed5089c-9058-4779-a414-540e4ef15299"),
                            RoleId = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d")
                        },
                        new
                        {
                            UserId = new Guid("9ce6fa87-a6b5-44f0-a5cc-16629f80a745"),
                            RoleId = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d")
                        },
                        new
                        {
                            UserId = new Guid("e273428b-2ff3-4a73-9cf0-292699c5d3bc"),
                            RoleId = new Guid("efca208f-a077-42a8-ae00-2ddb74878a3d")
                        },
                        new
                        {
                            UserId = new Guid("ae9c039e-cf83-4561-9d26-d27561f67c99"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("53d9a0b1-89f6-4587-9dc7-a6d36232e35c"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("6f101a49-324b-40b5-a7eb-7612dd104a4f"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("48da37b6-0065-4ae9-ae7c-dbf4d00ee742"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("f66ec653-fcda-4994-a3ca-91c145065a0b"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("2df709e8-9478-4247-aeb5-608d0c273224"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("cbc386c4-c86b-4009-86dc-7ab16996bc0a"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("c67d9cbf-7f4e-4953-ab2d-bfb5c323b823"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("7604f0b7-5032-47ec-a246-eda6388047a7"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("ef846b45-24c4-45c5-b87b-d84a9958ed05"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("5dc08428-481b-44f3-be90-cca3f1d5225d"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("4375c33f-37b5-450b-b9c0-642d9c7515a0"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("dac58c81-03f6-4eaa-8e22-0ed5c00e6b3e"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("8ae10070-462a-4545-8f91-57064334a5f4"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        },
                        new
                        {
                            UserId = new Guid("f0c2c53c-61d6-4ebc-944d-ee8706919bf6"),
                            RoleId = new Guid("f7e3193a-5710-447e-a5d8-a80b0464e77b")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId");

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
