// <auto-generated />
using System;
using IKApplication.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IKApplication.Persistance.Migrations
{
    [DbContext(typeof(IKAppDbContext))]
    [Migration("20230517220003_LeaveFix")]
    partial class LeaveFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("OpenAddress")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Profession")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TitleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("96060ffd-b1e8-45c5-a28e-dbc0eb5e55b5"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2072, 10, 4, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2522),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            ConcurrencyStamp = "17c66b1a-3d3f-4a44-a903-fa9a0fa9bf51",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2517),
                            Email = "test1@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "31411415336",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "TEST1@TEST.COM",
                            NormalizedUserName = "TEST1@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEM+62sFIGmvCH8hW6QqKmfvx58Y5JXkCQROT/04vm6sGBROQQXjJRnWE8UlqGBmt2A==",
                            PhoneNumber = "+905718290040",
                            PhoneNumberConfirmed = false,
                            Profession = "Businessman",
                            SecurityStamp = "UDYUUQNVIQ7LYGKCOH1PGLT0GTNT2AUM",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("23177dfe-b7e4-44bc-95b9-a75b89a92fa4"),
                            TwoFactorEnabled = false,
                            UserName = "test1@test.com"
                        },
                        new
                        {
                            Id = new Guid("e513d7df-d9de-437f-9585-4421c2a1f5d5"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2071, 1, 14, 1, 0, 3, 59, DateTimeKind.Local).AddTicks(6289),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            ConcurrencyStamp = "ccb5c545-fb79-48f5-82d4-dbe67494f4d3",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 59, DateTimeKind.Local).AddTicks(6285),
                            Email = "test2@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "65217882122",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "TEST2@TEST.COM",
                            NormalizedUserName = "TEST2@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED3ZDvi/gDSfMZetuVN8Qx9OB6U8zOidPMMspUWMB4wV2109x2HE6DZjnbnsMsAJiw==",
                            PhoneNumber = "+905696361001",
                            PhoneNumberConfirmed = false,
                            Profession = "Painter",
                            SecurityStamp = "WC3PZREBFEXGRG98SJZNRIC3EMA9A3EY",
                            Status = 1,
                            Surname = "Şahin",
                            TitleId = new Guid("afb82938-963c-4155-a8ed-bd24100b2fad"),
                            TwoFactorEnabled = false,
                            UserName = "test2@test.com"
                        },
                        new
                        {
                            Id = new Guid("bca2b50e-373e-44a1-96c0-5745296dc60d"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 3, 20, 1, 0, 3, 61, DateTimeKind.Local).AddTicks(21),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            ConcurrencyStamp = "b229ff8f-94b7-4de9-97e7-bfd88bc303e7",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 61, DateTimeKind.Local).AddTicks(19),
                            Email = "test3@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "41312110698",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "TEST3@TEST.COM",
                            NormalizedUserName = "TEST3@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECNSuB1L5cq9PF14ZpOTIv0+GdgHaEBcTvvZaqdGUQFUKCNxBQSGMNsNPRxTkGb9jA==",
                            PhoneNumber = "+905694704105",
                            PhoneNumberConfirmed = false,
                            Profession = "Electrician",
                            SecurityStamp = "RSC2TCPVNNZ0TVC4MQ9G6BUAB51GE096",
                            Status = 1,
                            Surname = "Yılmaz",
                            TitleId = new Guid("6afc3b1d-8911-4b09-a407-308bc5b2f57b"),
                            TwoFactorEnabled = false,
                            UserName = "test3@test.com"
                        },
                        new
                        {
                            Id = new Guid("a45ddfbc-a786-4bde-89cf-f12fe91d4a33"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 1, 13, 1, 0, 3, 62, DateTimeKind.Local).AddTicks(3373),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            ConcurrencyStamp = "363e68b0-6918-4f11-8f0b-0431e0d8883a",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 62, DateTimeKind.Local).AddTicks(3372),
                            Email = "test4@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "66414387694",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hasan",
                            NormalizedEmail = "TEST4@TEST.COM",
                            NormalizedUserName = "TEST4@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBYMieb2eXGm+DF6mXoVJYcW+JOQS5IFbbuq8QE+8qo6oHn3LydCCt6glwa8wix6Yw==",
                            PhoneNumber = "+905712689520",
                            PhoneNumberConfirmed = false,
                            Profession = "Real estate agent",
                            SecurityStamp = "BCKM84UY3MDYDXF072KBYESTS4J2TB7D",
                            Status = 1,
                            Surname = "Çelik",
                            TitleId = new Guid("13027ed5-9dcf-4fd9-a93e-3106007ef5c4"),
                            TwoFactorEnabled = false,
                            UserName = "test4@test.com"
                        },
                        new
                        {
                            Id = new Guid("f30271ef-8e25-4b0b-ae87-e028bc8ccfdf"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2055, 8, 17, 1, 0, 3, 63, DateTimeKind.Local).AddTicks(6891),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            ConcurrencyStamp = "1f7660e0-9414-4513-bcae-6abb059e24ae",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 63, DateTimeKind.Local).AddTicks(6889),
                            Email = "test5@test.com",
                            EmailConfirmed = false,
                            IdentityNumber = "84801066250",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "TEST5@TEST.COM",
                            NormalizedUserName = "TEST5@TEST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK0H7B9yShvozJ6mPHTYAMnzKsQGrDuLpsTzLVLdXxvZuLFvE64FgJ+j5trhQ2mgEw==",
                            PhoneNumber = "+905934070952",
                            PhoneNumberConfirmed = false,
                            Profession = "Politician",
                            SecurityStamp = "F0KFF5Y4K97XIHYJGF2I6VKW88S06D7F",
                            Status = 1,
                            Surname = "Aydın",
                            TitleId = new Guid("5472b47c-fa4c-49eb-a1cf-ffb035ff7367"),
                            TwoFactorEnabled = false,
                            UserName = "test5@test.com"
                        },
                        new
                        {
                            Id = new Guid("b513846d-27e7-411d-a1f1-fe5ce90c733e"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2067, 5, 21, 1, 0, 3, 65, DateTimeKind.Local).AddTicks(566),
                            CompanyId = new Guid("e4914c49-d66a-4bc1-881a-cd997b2a0b60"),
                            ConcurrencyStamp = "5fe0345d-a90b-47ff-998c-a7f733c797fa",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 65, DateTimeKind.Local).AddTicks(564),
                            Email = "ismail.sahin@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "50515748072",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.SAHIN@YAHOO.COM",
                            NormalizedUserName = "ISMAIL.SAHIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFcUFomenVgFl3zr0lR8V37uwuGAqZL+qub0kqJufkLGlR4FXQrlHAG7P4/oOejgYg==",
                            PhoneNumber = "+905438569610",
                            PhoneNumberConfirmed = false,
                            Profession = "Chef/Cook",
                            SecurityStamp = "EOCFWTXDIUHJRRMCA7EF4JYKI98K77HK",
                            Status = 3,
                            Surname = "Şahin",
                            TitleId = new Guid("b0ba5296-73fc-49ed-8bb3-9d44cc334afe"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.sahin@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("e741e7bd-e3e7-4a22-be9a-049fdf72758a"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2063, 5, 1, 1, 0, 3, 66, DateTimeKind.Local).AddTicks(4012),
                            CompanyId = new Guid("f2f3ec6a-7ffd-42b3-a903-840c158611c4"),
                            ConcurrencyStamp = "879e247d-8334-42a7-a05a-bd4e4550e95d",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 66, DateTimeKind.Local).AddTicks(4011),
                            Email = "ali.ozturk@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "63552687136",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ali",
                            NormalizedEmail = "ALI.OZTURK@YAHOO.COM",
                            NormalizedUserName = "ALI.OZTURK@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED4pC2Iq65FCCLPT3LaVrlCcdtpvYOwuOnWd9aSp+vO7ysfcv448BL7VxiWcliYfTg==",
                            PhoneNumber = "+905494203784",
                            PhoneNumberConfirmed = false,
                            Profession = "Teacher",
                            SecurityStamp = "ZHOS2AEIA0Z8KWI70E48BEE8R61HPKH2",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("2b4c3fa4-5f01-4e6c-b87c-65a62269adbe"),
                            TwoFactorEnabled = false,
                            UserName = "ali.ozturk@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("7e311a61-31eb-4365-af8f-59bc515dad10"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2051, 7, 28, 1, 0, 3, 67, DateTimeKind.Local).AddTicks(7471),
                            CompanyId = new Guid("d873d817-3756-43d4-a9cb-8c530e75bc95"),
                            ConcurrencyStamp = "de8dcb71-f256-4e45-a3e4-785bc04b58a8",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 67, DateTimeKind.Local).AddTicks(7470),
                            Email = "ismail.kaya@yahoo.com",
                            EmailConfirmed = false,
                            IdentityNumber = "55767358444",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.KAYA@YAHOO.COM",
                            NormalizedUserName = "ISMAIL.KAYA@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELAlBKr0BIsKe1IAXdfObacbic/oeGSTB6eGHX+8WDLoDk1bNiDX5KPVmXCv8uRZiA==",
                            PhoneNumber = "+905123535383",
                            PhoneNumberConfirmed = false,
                            Profession = "Busdriver",
                            SecurityStamp = "0E5XGVVRRZ0V51FJDSCCFRNQJKK9JTKA",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("97e1b018-9717-451b-9bf8-bb57f5b1e21b"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.kaya@yahoo.com"
                        },
                        new
                        {
                            Id = new Guid("87694f3c-2a20-4457-9e0b-d3ad364ba23f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2049, 3, 3, 1, 0, 3, 69, DateTimeKind.Local).AddTicks(1268),
                            CompanyId = new Guid("7908e0a1-1c1f-4579-8df8-021ea2fdf3f7"),
                            ConcurrencyStamp = "41902e54-447a-41f5-9032-b0396bf90ec8",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 69, DateTimeKind.Local).AddTicks(1267),
                            Email = "ibrahim.aydin@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "63606564208",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.AYDIN@HOTMAIL.COM",
                            NormalizedUserName = "IBRAHIM.AYDIN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC3tn2vRszuoIU6ne/r1DEcFwWB7IwLG/04YGXbqyKBGJ2L1UI1LO5PEuy8SGhiovQ==",
                            PhoneNumber = "+905136278958",
                            PhoneNumberConfirmed = false,
                            Profession = "Doctor",
                            SecurityStamp = "GLJLVSJQLN3DR6RL22B4R7N6ZHJJNWY1",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("fba0323f-088f-40f2-b5ef-061f8ff83f3c"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.aydin@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("481e0a35-3cfa-4aa3-b803-e78c084408b9"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2073, 7, 24, 1, 0, 3, 70, DateTimeKind.Local).AddTicks(4812),
                            CompanyId = new Guid("d043db2b-ce58-439c-9788-875da71ea18b"),
                            ConcurrencyStamp = "fad04948-ce86-44ed-9e80-7fd168a351dd",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 70, DateTimeKind.Local).AddTicks(4811),
                            Email = "huseyin.yildirim@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "56845274472",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.YILDIRIM@GOOGLE.COM",
                            NormalizedUserName = "HUSEYIN.YILDIRIM@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECT3QpaiYWLd1mx1DTik4wrSFWkFP4oe4BBMHQSoFNaxx94sQcdMHsV+OfX9HnVt5w==",
                            PhoneNumber = "+905390232002",
                            PhoneNumberConfirmed = false,
                            Profession = "Artist",
                            SecurityStamp = "YAXHSADPBAMWQ26QOUAPY34L55YXAZEX",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("851282f8-330a-49fe-ae6e-8119dd7cc302"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.yildirim@google.com"
                        },
                        new
                        {
                            Id = new Guid("2a3864f6-068f-4466-8893-8f1f0d8546e0"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2045, 12, 16, 1, 0, 3, 71, DateTimeKind.Local).AddTicks(8175),
                            CompanyId = new Guid("e7f49565-b1d0-44d0-b7a3-35423dac89c3"),
                            ConcurrencyStamp = "1fd11bc1-a6e8-4169-a9a8-ae8ee47d3f8f",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 71, DateTimeKind.Local).AddTicks(8174),
                            Email = "huseyin.kaya@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "47085350552",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Hüseyin",
                            NormalizedEmail = "HUSEYIN.KAYA@HOTMAIL.COM",
                            NormalizedUserName = "HUSEYIN.KAYA@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEB0EJWKoLTjugt3qXyDc6tCWB/5Mmcraj9gfQnc1Y+gDDLvCO6GM6B3/jRMY95hq3w==",
                            PhoneNumber = "+905967275034",
                            PhoneNumberConfirmed = false,
                            Profession = "Farmer",
                            SecurityStamp = "VHWC2S6E8DG8OJR5WJJQHLMYE90XHYHP",
                            Status = 3,
                            Surname = "Kaya",
                            TitleId = new Guid("b454306f-0c24-4183-9c94-94e0bfd22123"),
                            TwoFactorEnabled = false,
                            UserName = "huseyin.kaya@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("b4b2ad6a-98ee-45bb-9050-2e8e51caf658"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2066, 11, 18, 1, 0, 3, 73, DateTimeKind.Local).AddTicks(1645),
                            CompanyId = new Guid("827308ec-02b9-45ff-afa1-c13c4bd3b29d"),
                            ConcurrencyStamp = "bbcd341c-8ec7-4ae0-bad8-53bd17f3a574",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 73, DateTimeKind.Local).AddTicks(1644),
                            Email = "osman.ozturk@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "28004026642",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Osman",
                            NormalizedEmail = "OSMAN.OZTURK@GOOGLE.COM",
                            NormalizedUserName = "OSMAN.OZTURK@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJJmAvd3nwcyZGRfDJgxfU3kLzPf6aLNnIcI4oBJa60g7KOUtqCN5Y3k1oTycXocCA==",
                            PhoneNumber = "+905216726664",
                            PhoneNumberConfirmed = false,
                            Profession = "Architect",
                            SecurityStamp = "NBJTPIJWPCIJHEODQDOVZG8884O3I2LL",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("4a1b416e-63ee-48ac-b84c-469aa6ce011f"),
                            TwoFactorEnabled = false,
                            UserName = "osman.ozturk@google.com"
                        },
                        new
                        {
                            Id = new Guid("fe071ded-d5c9-40ea-83b0-5f27f5b2104b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2065, 4, 14, 1, 0, 3, 74, DateTimeKind.Local).AddTicks(5063),
                            CompanyId = new Guid("2970e3e7-cd55-4705-9a95-791a4bf066f3"),
                            ConcurrencyStamp = "d22b75c5-4e4a-424e-88ed-21b94f8ed148",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 74, DateTimeKind.Local).AddTicks(5062),
                            Email = "yusuf.ozturk@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "37525402378",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.OZTURK@OUTLOOK.COM",
                            NormalizedUserName = "YUSUF.OZTURK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEG9YLjGdH8m1GjYfSzSG3THdHI16jwMDcuZwTe9Osl3sXEbSx1/xTM5lRuJZbhw4RQ==",
                            PhoneNumber = "+905211521140",
                            PhoneNumberConfirmed = false,
                            Profession = "Artist",
                            SecurityStamp = "6U33795VKBAIEIPFZTNT9L5JMP0YJ2AK",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("03e5fed3-47d5-4078-bd20-6d15c802d105"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.ozturk@outlook.com"
                        },
                        new
                        {
                            Id = new Guid("e0bde80d-0990-4673-9c78-6ceb588215ac"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 10, 1, 1, 0, 3, 75, DateTimeKind.Local).AddTicks(8520),
                            CompanyId = new Guid("0ae4bb3a-0db1-4876-ba90-9f5c4c670202"),
                            ConcurrencyStamp = "bbf264a2-5d9d-4184-aef4-5522fa2af828",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 75, DateTimeKind.Local).AddTicks(8519),
                            Email = "mustafa.yildiz@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "85606437504",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.YILDIZ@MICROSOFT.COM",
                            NormalizedUserName = "MUSTAFA.YILDIZ@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKKq7zQT9j29lPROJWepZMBXG6DGWEWs5Qb7BfZfDPkte7BEo2jaajkWn7vbvcU7sQ==",
                            PhoneNumber = "+905296693242",
                            PhoneNumberConfirmed = false,
                            Profession = "Soldier",
                            SecurityStamp = "8JZ36UBRIHXYDLEQP6PZWCV6GGFYAPC9",
                            Status = 3,
                            Surname = "Yıldız",
                            TitleId = new Guid("5b7f5887-f552-4303-a278-d5ffd5fcfeec"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.yildiz@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("2fd913b9-b623-4c21-a94b-71c98913eddf"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2076, 4, 14, 1, 0, 3, 77, DateTimeKind.Local).AddTicks(2025),
                            CompanyId = new Guid("9d31d78f-d82f-4fa1-82a7-d32b78cf85b8"),
                            ConcurrencyStamp = "f93bbd90-61c5-40df-b6f5-bad2057e7962",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 77, DateTimeKind.Local).AddTicks(2024),
                            Email = "ibrahim.yildirim@microsoft.com",
                            EmailConfirmed = false,
                            IdentityNumber = "44565214168",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İbrahim",
                            NormalizedEmail = "IBRAHIM.YILDIRIM@MICROSOFT.COM",
                            NormalizedUserName = "IBRAHIM.YILDIRIM@MICROSOFT.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECaeH0XU+o5WiDivst1b3gutSOxLo3kISYHOGI5DEi279qnv85e82Du94y/Dpye5zA==",
                            PhoneNumber = "+905906502932",
                            PhoneNumberConfirmed = false,
                            Profession = "Dentist",
                            SecurityStamp = "1Y0D3ZPJKXCYM0NTMH7M9J6R1EQBRMLP",
                            Status = 3,
                            Surname = "Yıldırım",
                            TitleId = new Guid("89fcca6a-ef38-47b8-a2a7-2d22cb64231b"),
                            TwoFactorEnabled = false,
                            UserName = "ibrahim.yildirim@microsoft.com"
                        },
                        new
                        {
                            Id = new Guid("0aa33112-9f3b-449c-bf95-2cd9e5d35ffd"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2048, 9, 7, 1, 0, 3, 78, DateTimeKind.Local).AddTicks(5499),
                            CompanyId = new Guid("5aa21363-8cec-40ed-b633-d153937cf76e"),
                            ConcurrencyStamp = "2a3d45af-b3e2-421b-9712-ecf345e6922c",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 78, DateTimeKind.Local).AddTicks(5498),
                            Email = "yusuf.yilmaz@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "40675664008",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Yusuf",
                            NormalizedEmail = "YUSUF.YILMAZ@HOTMAIL.COM",
                            NormalizedUserName = "YUSUF.YILMAZ@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECYmOcp+uO+YFtt7BAAgftUazaqoTIhWo1xViMnscYx/eecxHgFBTRKBsXGqcNhUjA==",
                            PhoneNumber = "+905740412513",
                            PhoneNumberConfirmed = false,
                            Profession = "Factory worker",
                            SecurityStamp = "V7ZN7ZRJRGSPK5D3Y34RZ1HZTYC7VTL5",
                            Status = 3,
                            Surname = "Yılmaz",
                            TitleId = new Guid("e2d6ed3e-8c3c-4aff-bfbb-21f6f7ce4400"),
                            TwoFactorEnabled = false,
                            UserName = "yusuf.yilmaz@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("d59c67b4-1ae9-4f14-a911-c6cb61748b59"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2070, 4, 16, 1, 0, 3, 79, DateTimeKind.Local).AddTicks(8729),
                            CompanyId = new Guid("f31dccff-80d9-4948-bd3a-74fadb83720d"),
                            ConcurrencyStamp = "e2c9bf0d-f877-4083-956b-b4c7f2452b23",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 79, DateTimeKind.Local).AddTicks(8728),
                            Email = "mustafa.aydin@yandex.com",
                            EmailConfirmed = false,
                            IdentityNumber = "61737214146",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.AYDIN@YANDEX.COM",
                            NormalizedUserName = "MUSTAFA.AYDIN@YANDEX.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEgJpFp+WgoR45vBhbjND9+1RNgEIZV2IozatRNkJsy/sy+TPs5k8d01zp4krwjRUg==",
                            PhoneNumber = "+905627138700",
                            PhoneNumberConfirmed = false,
                            Profession = "Pilot",
                            SecurityStamp = "K0HFYCKQ5FWAJ8IGOLI4IYSGPC1AUDF4",
                            Status = 3,
                            Surname = "Aydın",
                            TitleId = new Guid("acf3540d-f73e-4c25-94bd-6b291120ed89"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.aydin@yandex.com"
                        },
                        new
                        {
                            Id = new Guid("90526a21-967d-496d-a62b-21e0d47b7a32"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2061, 9, 23, 1, 0, 3, 81, DateTimeKind.Local).AddTicks(2101),
                            CompanyId = new Guid("4bfa1ec7-5c8e-4a36-bc8c-013e68170fde"),
                            ConcurrencyStamp = "91d48c9f-5002-4b2f-92d8-ff86668bfdf8",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 81, DateTimeKind.Local).AddTicks(2100),
                            Email = "ismail.ozdemir@google.com",
                            EmailConfirmed = false,
                            IdentityNumber = "77466637804",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "İsmail",
                            NormalizedEmail = "ISMAIL.OZDEMIR@GOOGLE.COM",
                            NormalizedUserName = "ISMAIL.OZDEMIR@GOOGLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN0TKjYYOqSlw6hizf9Jn9O4LFSePaQnjzuUx75D+68J8Mj3GGxW5Ooy9kuzvXQh0w==",
                            PhoneNumber = "+905677635615",
                            PhoneNumberConfirmed = false,
                            Profession = "Florist",
                            SecurityStamp = "CWZSXGP4FKQ5IAF8IAFWRWIZFMMB56GS",
                            Status = 3,
                            Surname = "Özdemir",
                            TitleId = new Guid("6a80345e-bc77-4524-8d69-db763c0b00d8"),
                            TwoFactorEnabled = false,
                            UserName = "ismail.ozdemir@google.com"
                        },
                        new
                        {
                            Id = new Guid("1186c752-86bf-4555-b838-68778c05d56b"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2074, 11, 9, 1, 0, 3, 82, DateTimeKind.Local).AddTicks(5567),
                            CompanyId = new Guid("648e0ccb-b3a6-4f90-9bf7-60631ab1bbe9"),
                            ConcurrencyStamp = "dd748eda-d9ca-41d9-8986-a8d564ff084a",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 82, DateTimeKind.Local).AddTicks(5566),
                            Email = "ahmet.celik@hotmail.com",
                            EmailConfirmed = false,
                            IdentityNumber = "72538334612",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Ahmet",
                            NormalizedEmail = "AHMET.CELIK@HOTMAIL.COM",
                            NormalizedUserName = "AHMET.CELIK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJZM3VBd2THU/PVR4AyX/PQMQ02TTgMb9HZh7glURIetF6v/wuQZFrWelPnmu05lRA==",
                            PhoneNumber = "+905768727755",
                            PhoneNumberConfirmed = false,
                            Profession = "Mechanic",
                            SecurityStamp = "A6ZUKBH0385JEVJMI5HEHIBKIEU8OMZ1",
                            Status = 3,
                            Surname = "Çelik",
                            TitleId = new Guid("abedeaf5-b4d4-4393-8ee2-ee9c92402994"),
                            TwoFactorEnabled = false,
                            UserName = "ahmet.celik@hotmail.com"
                        },
                        new
                        {
                            Id = new Guid("e31519ae-8f00-4a49-8b72-d020f486fc2f"),
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2059, 1, 13, 1, 0, 3, 83, DateTimeKind.Local).AddTicks(8974),
                            CompanyId = new Guid("099bb6d7-d2f2-4533-a58c-6288028320f1"),
                            ConcurrencyStamp = "e81083f5-39d8-4c33-965b-a19ecc0f8ed5",
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 83, DateTimeKind.Local).AddTicks(8973),
                            Email = "mustafa.ozturk@outlook.com",
                            EmailConfirmed = false,
                            IdentityNumber = "31688857006",
                            ImagePath = "/images/UserPhotos/defaultuser.jpg",
                            JobStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Mustafa",
                            NormalizedEmail = "MUSTAFA.OZTURK@OUTLOOK.COM",
                            NormalizedUserName = "MUSTAFA.OZTURK@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEM21wOE99TGzuPgQzTnvTc9Ca/Y3emAco3461HiLY2TAsORyix7/RVWTpcLDfI25WA==",
                            PhoneNumber = "+905970883508",
                            PhoneNumberConfirmed = false,
                            Profession = "Farmer",
                            SecurityStamp = "R28ER6MG0OI3G0HQF1Y0AUC43G5SX43N",
                            Status = 3,
                            Surname = "Öztürk",
                            TitleId = new Guid("d4f42393-55fd-431a-aed0-645efa92ec13"),
                            TwoFactorEnabled = false,
                            UserName = "mustafa.ozturk@outlook.com"
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinalDateRequest")
                        .HasColumnType("date");

                    b.Property<int>("IsPaymentProcessed")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("CashAdvances", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2388),
                            Email = "ikapp@ikapp.com",
                            Name = "IKApp A.Ş.",
                            NumberOfEmployees = 5,
                            PhoneNumber = "+905206899355",
                            SectorId = new Guid("c687ea68-b2e1-4143-abca-c1bce580f520"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e4914c49-d66a-4bc1-881a-cd997b2a0b60"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 65, DateTimeKind.Local).AddTicks(537),
                            Email = "info@sahinkollektifsirketi.com",
                            Name = "Şahin Kollektif Şirketi",
                            NumberOfEmployees = 68,
                            PhoneNumber = "+905245468674",
                            SectorId = new Guid("7ff36913-28e2-4b53-bbee-0c78bcee7af3"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f2f3ec6a-7ffd-42b3-a903-840c158611c4"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 66, DateTimeKind.Local).AddTicks(3979),
                            Email = "info@ozturklimitedsirketi.com",
                            Name = "Öztürk Limited Şirketi",
                            NumberOfEmployees = 60,
                            PhoneNumber = "+905214601459",
                            SectorId = new Guid("015e1818-e616-485e-9082-15d90062615d"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("d873d817-3756-43d4-a9cb-8c530e75bc95"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 67, DateTimeKind.Local).AddTicks(7462),
                            Email = "info@kayalimitedsirketi.com",
                            Name = "Kaya Limited Şirketi",
                            NumberOfEmployees = 96,
                            PhoneNumber = "+905352917911",
                            SectorId = new Guid("42e4a4c4-a6bd-4b5d-9bbf-d5534f531fdb"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("7908e0a1-1c1f-4579-8df8-021ea2fdf3f7"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 69, DateTimeKind.Local).AddTicks(1248),
                            Email = "info@aydinkollektifsirketi.com",
                            Name = "Aydın Kollektif Şirketi",
                            NumberOfEmployees = 59,
                            PhoneNumber = "+905857081633",
                            SectorId = new Guid("dfd3c73f-181b-4992-9b6a-50895df79b38"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("d043db2b-ce58-439c-9788-875da71ea18b"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 70, DateTimeKind.Local).AddTicks(4799),
                            Email = "info@yildirimkooperatifsirketi.com",
                            Name = "Yıldırım Kooperatif Şirketi",
                            NumberOfEmployees = 51,
                            PhoneNumber = "+905108489157",
                            SectorId = new Guid("1d5d6847-4782-4d69-8bbe-2c72bcaa2077"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("e7f49565-b1d0-44d0-b7a3-35423dac89c3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 71, DateTimeKind.Local).AddTicks(8168),
                            Email = "info@kayakollektifsirketi.com",
                            Name = "Kaya Kollektif Şirketi",
                            NumberOfEmployees = 13,
                            PhoneNumber = "+905711581522",
                            SectorId = new Guid("015e1818-e616-485e-9082-15d90062615d"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("827308ec-02b9-45ff-afa1-c13c4bd3b29d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 73, DateTimeKind.Local).AddTicks(1638),
                            Email = "info@ozturkkomanditsirketi.com",
                            Name = "Öztürk Komandit Şirketi",
                            NumberOfEmployees = 30,
                            PhoneNumber = "+905388392372",
                            SectorId = new Guid("60a15090-50ab-4d2b-94db-51bc91629445"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("2970e3e7-cd55-4705-9a95-791a4bf066f3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 74, DateTimeKind.Local).AddTicks(5049),
                            Email = "info@ozturklimitedsirketi.com",
                            Name = "Öztürk Limited Şirketi",
                            NumberOfEmployees = 7,
                            PhoneNumber = "+905576630704",
                            SectorId = new Guid("20205ffe-69a5-423f-b417-2ffd5c137042"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("0ae4bb3a-0db1-4876-ba90-9f5c4c670202"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 75, DateTimeKind.Local).AddTicks(8507),
                            Email = "info@yildizkooperatifsirketi.com",
                            Name = "Yıldız Kooperatif Şirketi",
                            NumberOfEmployees = 49,
                            PhoneNumber = "+905385727895",
                            SectorId = new Guid("7770a2c0-a546-4451-b30b-650bff8507e9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("9d31d78f-d82f-4fa1-82a7-d32b78cf85b8"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 77, DateTimeKind.Local).AddTicks(2016),
                            Email = "info@yildirimkooperatifsirketi.com",
                            Name = "Yıldırım Kooperatif Şirketi",
                            NumberOfEmployees = 27,
                            PhoneNumber = "+905969043331",
                            SectorId = new Guid("96a958c8-08f3-4999-a918-dd6f4ca86cb7"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("5aa21363-8cec-40ed-b633-d153937cf76e"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 78, DateTimeKind.Local).AddTicks(5491),
                            Email = "info@yilmazanonimsirketi.com",
                            Name = "Yılmaz Anonim Şirketi",
                            NumberOfEmployees = 77,
                            PhoneNumber = "+905325644431",
                            SectorId = new Guid("db7a83c1-172b-4430-ac99-7c5d5c41c84f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("f31dccff-80d9-4948-bd3a-74fadb83720d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 79, DateTimeKind.Local).AddTicks(8713),
                            Email = "info@aydinkomanditsirketi.com",
                            Name = "Aydın Komandit Şirketi",
                            NumberOfEmployees = 33,
                            PhoneNumber = "+905790423792",
                            SectorId = new Guid("dfd3c73f-181b-4992-9b6a-50895df79b38"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("4bfa1ec7-5c8e-4a36-bc8c-013e68170fde"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 81, DateTimeKind.Local).AddTicks(2091),
                            Email = "info@ozdemirkomanditsirketi.com",
                            Name = "Özdemir Komandit Şirketi",
                            NumberOfEmployees = 59,
                            PhoneNumber = "+905580332270",
                            SectorId = new Guid("7770a2c0-a546-4451-b30b-650bff8507e9"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("648e0ccb-b3a6-4f90-9bf7-60631ab1bbe9"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 82, DateTimeKind.Local).AddTicks(5559),
                            Email = "info@celikkomanditsirketi.com",
                            Name = "Çelik Komandit Şirketi",
                            NumberOfEmployees = 1,
                            PhoneNumber = "+905920411644",
                            SectorId = new Guid("db7a83c1-172b-4430-ac99-7c5d5c41c84f"),
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("099bb6d7-d2f2-4533-a58c-6288028320f1"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 83, DateTimeKind.Local).AddTicks(8909),
                            Email = "info@ozturkkooperatifsirketi.com",
                            Name = "Öztürk Kooperatif Şirketi",
                            NumberOfEmployees = 7,
                            PhoneNumber = "+905736614375",
                            SectorId = new Guid("7ff36913-28e2-4b53-bbee-0c78bcee7af3"),
                            Status = 3
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseById");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96a958c8-08f3-4999-a918-dd6f4ca86cb7"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2172),
                            Name = "Ahşap Teknolojisi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c687ea68-b2e1-4143-abca-c1bce580f520"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2191),
                            Name = "Bilişim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("42e4a4c4-a6bd-4b5d-9bbf-d5534f531fdb"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2193),
                            Name = "Cam, Çimento ve ToprakÇevre",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("deb73b2f-23a6-4f17-93e5-2b262936dd14"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2194),
                            Name = "Eğitim",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0be39fa0-6b86-4d6f-b033-8236560f829a"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2195),
                            Name = "Elektrik ve Elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("27269331-433b-4167-8f32-250e61c00811"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2211),
                            Name = "Enerji",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a3a76b2b-1ada-474a-b93a-8f3c6e4fd063"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2213),
                            Name = "Finans",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("678d48fe-73cf-46fa-b37d-c65524de887d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2214),
                            Name = "Gıda",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("60a15090-50ab-4d2b-94db-51bc91629445"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2215),
                            Name = "İnşaat",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0e71cfb0-346b-491e-b2f4-63713eedbe3d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2242),
                            Name = "İş ve Yönetimi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("da9bd61f-eba4-47b7-a3c6-0cfc59104b3d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2244),
                            Name = "Kimya, Petrol, Lastik ve PLastik",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("20205ffe-69a5-423f-b417-2ffd5c137042"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2245),
                            Name = "Kültür, Sanat ve Tasarım",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8d6c06ba-5221-4752-bb33-3cb6c44422c3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2247),
                            Name = "Maden",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("db7a83c1-172b-4430-ac99-7c5d5c41c84f"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2250),
                            Name = "Medya, İletişim ve Yayıncılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7770a2c0-a546-4451-b30b-650bff8507e9"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2251),
                            Name = "Metal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("48fd088e-aab6-4f7b-84fd-53c26321eeea"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2252),
                            Name = "Otomotiv",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d270bab8-b63f-4d10-a07f-5fcfa66e11e9"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2253),
                            Name = "Sağlık ve Sosyal Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7ff36913-28e2-4b53-bbee-0c78bcee7af3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2255),
                            Name = "Spor ve Rekreasyon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ddf44cbd-7b5d-4e53-a599-ec48c3b2da7e"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2256),
                            Name = "Tarım, Avcılık ve Balıkçılık",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("015e1818-e616-485e-9082-15d90062615d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2257),
                            Name = "Tekstil, Hazır Giyim, Deri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1564575c-c06a-4744-9326-685f0e6de2c9"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2258),
                            Name = "Ticaret (Satış ve Pazarlama)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9f2fedc5-b638-4b3d-baa4-c2e4c2c79f4f"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2261),
                            Name = "Toplumsal ve Kişisel Hizmetler",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dfd3c73f-181b-4992-9b6a-50895df79b38"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2262),
                            Name = "Turizm, Konaklama, Yiyecek-İçecek Hizmetleri",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1d5d6847-4782-4d69-8bbe-2c72bcaa2077"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2263),
                            Name = "Ulaştırma, Lojistik ve Haberleşme",
                            Status = 1
                        });
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4f39cce-6ff5-4c79-b189-bae6a00031f2"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2409),
                            Name = "VP of Sales",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("634b1e83-d3b6-476e-899e-869e66bdf483"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2413),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7965aece-e5d5-41ee-ab3e-27795f44c160"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2415),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4b624623-1d39-4917-9203-77886df1b440"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2416),
                            Name = "Sales Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("acee5d20-55a6-4720-af9e-3f2400a3224f"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2417),
                            Name = "Sales Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3c7ae8e9-c514-40c5-8492-3ba211c3724e"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2419),
                            Name = "CMO (Chief Marketing Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6b287ac5-692c-4759-a7bf-410711fbeb65"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2420),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("772a5d87-2e47-4cef-8fe3-67921fcf72d7"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2423),
                            Name = "Sr. Marketing Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("13027ed5-9dcf-4fd9-a93e-3106007ef5c4"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2424),
                            Name = "Marketing Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8a3bfc36-0e04-4dff-93ec-05328c542803"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2426),
                            Name = "Marketing Coordinator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8c3b2926-b3e7-4e76-8ce0-0e3eb413213e"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2427),
                            Name = "VP of Finance",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dcd5905a-957d-420a-bb4a-4ae367d209b7"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2428),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ac639c08-fca3-4498-b89e-6fc6979aac9a"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2430),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0b772502-1301-41cc-ad01-267974474ff3"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2431),
                            Name = "Credit Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b084182f-ba5c-4a94-89aa-bcc22abd598f"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2432),
                            Name = "Risk Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4555b604-03be-4be4-a3c5-470cad49d100"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2434),
                            Name = "VP of Client Services",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7cd01411-01c2-408b-8f9d-bd3b0010021c"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2435),
                            Name = "Account Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d1a688f3-f3a2-476c-a202-8560194fc515"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2437),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cc38d1e7-b71c-4416-8009-4be3231c9967"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2438),
                            Name = "Customer Service Representative",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fb9df43d-f17f-44b9-8662-6792bb04d97d"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2439),
                            Name = "Support Specialist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("67da5305-07e7-442b-b3e4-aa53aaa5efed"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2440),
                            Name = "COO (Chief Operating Officer)",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("58888d1a-5d00-4aed-a82f-bc4217793dcb"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2441),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6cfc69f1-4c44-486e-8310-e4d5b0ae68cc"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2442),
                            Name = "Operations Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bcf6f2ad-8b13-49da-a106-85718a144fd4"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2445),
                            Name = "Sr. Manager of HR",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ca201414-b2da-4199-871b-5e0c36d27b14"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2446),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("23645226-b1f3-4804-ab2c-a53408d77752"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2447),
                            Name = "Director of Information Security",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4e1bc76a-0c2a-4448-bc3b-51963509660e"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2448),
                            Name = "Software Engineer I, II, III",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1473c539-fd2f-4396-8bf2-a367608571fc"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2449),
                            Name = "Full Stack Developer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("65cc9309-a6df-4254-97dd-10cb838d0fa9"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2449),
                            Name = "Systems Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bc410d0b-d29e-45da-9002-02af8fbe2e97"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2451),
                            Name = "Data Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3af851ee-3e53-4516-8aef-e263023d2b4a"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2452),
                            Name = "Other Industries:",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("91374955-eb67-4454-ab68-faadb6f104a4"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2454),
                            Name = "Registered Nurse",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bd39d82d-a1f5-42a5-b748-948cfe098bac"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2455),
                            Name = "Pharmacy Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fea4ca72-5d7b-4174-8691-6cbe3c958c17"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2480),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("59ec4288-417c-4d45-8f74-d5810b3c38c8"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2481),
                            Name = "Nursing Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("44e70f24-d2c9-4354-abd8-82359b4aed23"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2482),
                            Name = "Clinical Laboratory Technician",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c996c93c-c630-4e7e-9fdf-ac5ac1796a04"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2483),
                            Name = "Occupational Therapy Aide",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("402350c8-a743-4d6d-953c-542b692acd70"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2484),
                            Name = "Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a460ad10-b20b-4031-b826-efb2be095c55"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2485),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("07d2abfb-5e98-47de-bac8-3cba82d1e29c"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2487),
                            Name = "Registrar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("42d3ec8b-4ad9-49a7-a19b-9f5a04c14bc6"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2488),
                            Name = "School Counselor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("29938c30-4e1f-4972-9560-e032c3953b38"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2489),
                            Name = "Teacher",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("865e972e-c524-44fe-a2ae-5a75537f7081"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2490),
                            Name = "Teaching Assistant",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6afc3b1d-8911-4b09-a407-308bc5b2f57b"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2491),
                            Name = "General Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4db51b75-4085-4b89-9509-12d5a71fc5dc"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2492),
                            Name = "Guest Services Supervisor",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9103f04a-535f-4e42-838f-7ee8cb05c6eb"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2493),
                            Name = "Concierge",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("23177dfe-b7e4-44bc-95b9-a75b89a92fa4"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2494),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("79612f6c-8e8b-41fb-bab9-c5e94756dc4d"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2497),
                            Name = "Server/Host/Hostess",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7cba9505-f45e-4f40-aa38-6edddbee6596"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2498),
                            Name = "Hotel Receptionist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2302c24a-faa4-4714-bbaa-731fd88ffda6"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2499),
                            Name = "Construction Foreman",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("207766a1-6b84-4484-97c9-54a440aa0d24"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2499),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("afb82938-963c-4155-a8ed-bd24100b2fad"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2500),
                            Name = "Project Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5472b47c-fa4c-49eb-a1cf-ffb035ff7367"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2501),
                            Name = "Contract Administrator",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e00c6efb-1e83-4a5a-bf67-e1cd0c98c4f4"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2502),
                            Name = "Project Appraisal Engineer",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fd37dd68-61fb-4ef5-a2c4-0ae5e64f3897"),
                            CompanyId = new Guid("e230f09b-5879-4c23-bd1c-c18468d7b664"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 58, DateTimeKind.Local).AddTicks(2503),
                            Name = "Inspector",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b0ba5296-73fc-49ed-8bb3-9d44cc334afe"),
                            CompanyId = new Guid("e4914c49-d66a-4bc1-881a-cd997b2a0b60"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 65, DateTimeKind.Local).AddTicks(546),
                            Name = "Front Desk Associate",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2b4c3fa4-5f01-4e6c-b87c-65a62269adbe"),
                            CompanyId = new Guid("f2f3ec6a-7ffd-42b3-a903-840c158611c4"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 66, DateTimeKind.Local).AddTicks(3982),
                            Name = "Customer Success Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("97e1b018-9717-451b-9bf8-bb57f5b1e21b"),
                            CompanyId = new Guid("d873d817-3756-43d4-a9cb-8c530e75bc95"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 67, DateTimeKind.Local).AddTicks(7466),
                            Name = "National Sales Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fba0323f-088f-40f2-b5ef-061f8ff83f3c"),
                            CompanyId = new Guid("7908e0a1-1c1f-4579-8df8-021ea2fdf3f7"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 69, DateTimeKind.Local).AddTicks(1263),
                            Name = "Physical Therapist",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("851282f8-330a-49fe-ae6e-8119dd7cc302"),
                            CompanyId = new Guid("d043db2b-ce58-439c-9788-875da71ea18b"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 70, DateTimeKind.Local).AddTicks(4802),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b454306f-0c24-4183-9c94-94e0bfd22123"),
                            CompanyId = new Guid("e7f49565-b1d0-44d0-b7a3-35423dac89c3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 71, DateTimeKind.Local).AddTicks(8170),
                            Name = "Procurement Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4a1b416e-63ee-48ac-b84c-469aa6ce011f"),
                            CompanyId = new Guid("827308ec-02b9-45ff-afa1-c13c4bd3b29d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 73, DateTimeKind.Local).AddTicks(1641),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("03e5fed3-47d5-4078-bd20-6d15c802d105"),
                            CompanyId = new Guid("2970e3e7-cd55-4705-9a95-791a4bf066f3"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 74, DateTimeKind.Local).AddTicks(5058),
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5b7f5887-f552-4303-a278-d5ffd5fcfeec"),
                            CompanyId = new Guid("0ae4bb3a-0db1-4876-ba90-9f5c4c670202"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 75, DateTimeKind.Local).AddTicks(8511),
                            Name = "Investment Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("89fcca6a-ef38-47b8-a2a7-2d22cb64231b"),
                            CompanyId = new Guid("9d31d78f-d82f-4fa1-82a7-d32b78cf85b8"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 77, DateTimeKind.Local).AddTicks(2018),
                            Name = "HR Analyst",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2d6ed3e-8c3c-4aff-bfbb-21f6f7ce4400"),
                            CompanyId = new Guid("5aa21363-8cec-40ed-b633-d153937cf76e"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 78, DateTimeKind.Local).AddTicks(5494),
                            Name = "Director of Business Operations",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("acf3540d-f73e-4c25-94bd-6b291120ed89"),
                            CompanyId = new Guid("f31dccff-80d9-4948-bd3a-74fadb83720d"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 79, DateTimeKind.Local).AddTicks(8724),
                            Name = "Marketing Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6a80345e-bc77-4524-8d69-db763c0b00d8"),
                            CompanyId = new Guid("4bfa1ec7-5c8e-4a36-bc8c-013e68170fde"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 81, DateTimeKind.Local).AddTicks(2093),
                            Name = "Safety Director",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("abedeaf5-b4d4-4393-8ee2-ee9c92402994"),
                            CompanyId = new Guid("648e0ccb-b3a6-4f90-9bf7-60631ab1bbe9"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 82, DateTimeKind.Local).AddTicks(5562),
                            Name = "Regional Sales Manager",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d4f42393-55fd-431a-aed0-645efa92ec13"),
                            CompanyId = new Guid("099bb6d7-d2f2-4533-a58c-6288028320f1"),
                            CreateDate = new DateTime(2023, 5, 18, 1, 0, 3, 83, DateTimeKind.Local).AddTicks(8969),
                            Name = "Hotel Receptionist",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd"),
                            ConcurrencyStamp = "4PPEH4SD4PE8I586BDRS6093CFFILVD7",
                            Name = "Site Administrator",
                            NormalizedName = "SITE ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6"),
                            ConcurrencyStamp = "R94AHK0K5LRAAJGQFVR6EQU72XK817C6",
                            Name = "Company Administrator",
                            NormalizedName = "COMPANY ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("2be9301f-d247-4fdb-bfa2-82a5e21ce964"),
                            ConcurrencyStamp = "ZMZYFR942QAU5EJ5LN7Z6SXT9T6IBUHK",
                            Name = "Personal",
                            NormalizedName = "PERSONAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("96060ffd-b1e8-45c5-a28e-dbc0eb5e55b5"),
                            RoleId = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd")
                        },
                        new
                        {
                            UserId = new Guid("e513d7df-d9de-437f-9585-4421c2a1f5d5"),
                            RoleId = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd")
                        },
                        new
                        {
                            UserId = new Guid("bca2b50e-373e-44a1-96c0-5745296dc60d"),
                            RoleId = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd")
                        },
                        new
                        {
                            UserId = new Guid("a45ddfbc-a786-4bde-89cf-f12fe91d4a33"),
                            RoleId = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd")
                        },
                        new
                        {
                            UserId = new Guid("f30271ef-8e25-4b0b-ae87-e028bc8ccfdf"),
                            RoleId = new Guid("5f8b24f1-f442-4dca-a36d-9a78634f75bd")
                        },
                        new
                        {
                            UserId = new Guid("b513846d-27e7-411d-a1f1-fe5ce90c733e"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("e741e7bd-e3e7-4a22-be9a-049fdf72758a"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("7e311a61-31eb-4365-af8f-59bc515dad10"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("87694f3c-2a20-4457-9e0b-d3ad364ba23f"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("481e0a35-3cfa-4aa3-b803-e78c084408b9"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("2a3864f6-068f-4466-8893-8f1f0d8546e0"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("b4b2ad6a-98ee-45bb-9050-2e8e51caf658"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("fe071ded-d5c9-40ea-83b0-5f27f5b2104b"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("e0bde80d-0990-4673-9c78-6ceb588215ac"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("2fd913b9-b623-4c21-a94b-71c98913eddf"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("0aa33112-9f3b-449c-bf95-2cd9e5d35ffd"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("d59c67b4-1ae9-4f14-a911-c6cb61748b59"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("90526a21-967d-496d-a62b-21e0d47b7a32"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("1186c752-86bf-4555-b838-68778c05d56b"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        },
                        new
                        {
                            UserId = new Guid("e31519ae-8f00-4a49-8b72-d020f486fc2f"),
                            RoleId = new Guid("075ec7cc-e044-4dbf-8f5a-67352686fdb6")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Address", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithOne("Address")
                        .HasForeignKey("IKApplication.Domain.Entites.Address", "AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("CompanyManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.Title", "Title")
                        .WithMany("AppUsers")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.CashAdvance", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "Director")
                        .WithMany("CashAdvances")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Expense", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "ExpenseBy")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseBy");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Leave", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", "AppUser")
                        .WithMany("Leaves")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.Company", "Company")
                        .WithMany("Titles")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IKApplication.Domain.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.AppUser", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("CashAdvances");

                    b.Navigation("Expenses");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Company", b =>
                {
                    b.Navigation("CompanyManagers");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Sector", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("IKApplication.Domain.Entites.Title", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
